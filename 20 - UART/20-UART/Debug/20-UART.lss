
20-UART.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004958  00400000  00400000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00404958  00404958  0000c958  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     0000086c  20000000  00404960  00010000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000000dc  2000086c  004051cc  0001086c  2**2
                  ALLOC
  4 .stack        00003000  20000948  004052a8  0001086c  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  0001086c  2**0
                  CONTENTS, READONLY
  6 .comment      0000005b  00000000  00000000  00010896  2**0
                  CONTENTS, READONLY
  7 .debug_info   0000a873  00000000  00000000  000108f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001b90  00000000  00000000  0001b164  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000415a  00000000  00000000  0001ccf4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000958  00000000  00000000  00020e4e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000890  00000000  00000000  000217a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00005454  00000000  00000000  00022036  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000a040  00000000  00000000  0002748a  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00052915  00000000  00000000  000314ca  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000020d4  00000000  00000000  00083de0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <_sfixed>:
  400000:	20003948 	.word	0x20003948
  400004:	00400845 	.word	0x00400845
  400008:	00400841 	.word	0x00400841
  40000c:	00400841 	.word	0x00400841
  400010:	00400841 	.word	0x00400841
  400014:	00400841 	.word	0x00400841
  400018:	00400841 	.word	0x00400841
	...
  40002c:	00400841 	.word	0x00400841
  400030:	00400841 	.word	0x00400841
  400034:	00000000 	.word	0x00000000
  400038:	00400841 	.word	0x00400841
  40003c:	00400841 	.word	0x00400841
  400040:	00400841 	.word	0x00400841
  400044:	00400841 	.word	0x00400841
  400048:	00400841 	.word	0x00400841
  40004c:	00400841 	.word	0x00400841
  400050:	00400841 	.word	0x00400841
  400054:	00400841 	.word	0x00400841
  400058:	00400841 	.word	0x00400841
  40005c:	00400841 	.word	0x00400841
  400060:	00400841 	.word	0x00400841
  400064:	00400841 	.word	0x00400841
  400068:	00000000 	.word	0x00000000
  40006c:	004005f1 	.word	0x004005f1
  400070:	00400605 	.word	0x00400605
  400074:	00400619 	.word	0x00400619
  400078:	00400841 	.word	0x00400841
  40007c:	00400841 	.word	0x00400841
	...
  400088:	00400841 	.word	0x00400841
  40008c:	00400841 	.word	0x00400841
  400090:	00400841 	.word	0x00400841
  400094:	00400841 	.word	0x00400841
  400098:	00400841 	.word	0x00400841
  40009c:	00400c89 	.word	0x00400c89
  4000a0:	00400841 	.word	0x00400841
  4000a4:	00400841 	.word	0x00400841
  4000a8:	00400841 	.word	0x00400841
  4000ac:	00400841 	.word	0x00400841
  4000b0:	00400841 	.word	0x00400841
  4000b4:	00400841 	.word	0x00400841
  4000b8:	00400841 	.word	0x00400841
  4000bc:	00400841 	.word	0x00400841
  4000c0:	00400841 	.word	0x00400841
  4000c4:	00400841 	.word	0x00400841
  4000c8:	00400841 	.word	0x00400841

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	2000086c 	.word	0x2000086c
  4000e8:	00000000 	.word	0x00000000
  4000ec:	00404960 	.word	0x00404960

004000f0 <frame_dummy>:
  4000f0:	4b08      	ldr	r3, [pc, #32]	; (400114 <frame_dummy+0x24>)
  4000f2:	b510      	push	{r4, lr}
  4000f4:	b11b      	cbz	r3, 4000fe <frame_dummy+0xe>
  4000f6:	4808      	ldr	r0, [pc, #32]	; (400118 <frame_dummy+0x28>)
  4000f8:	4908      	ldr	r1, [pc, #32]	; (40011c <frame_dummy+0x2c>)
  4000fa:	f3af 8000 	nop.w
  4000fe:	4808      	ldr	r0, [pc, #32]	; (400120 <frame_dummy+0x30>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b903      	cbnz	r3, 400106 <frame_dummy+0x16>
  400104:	bd10      	pop	{r4, pc}
  400106:	4b07      	ldr	r3, [pc, #28]	; (400124 <frame_dummy+0x34>)
  400108:	2b00      	cmp	r3, #0
  40010a:	d0fb      	beq.n	400104 <frame_dummy+0x14>
  40010c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400110:	4718      	bx	r3
  400112:	bf00      	nop
  400114:	00000000 	.word	0x00000000
  400118:	00404960 	.word	0x00404960
  40011c:	20000870 	.word	0x20000870
  400120:	00404960 	.word	0x00404960
  400124:	00000000 	.word	0x00000000

00400128 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400128:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40012a:	480e      	ldr	r0, [pc, #56]	; (400164 <sysclk_init+0x3c>)
  40012c:	4b0e      	ldr	r3, [pc, #56]	; (400168 <sysclk_init+0x40>)
  40012e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400130:	2000      	movs	r0, #0
  400132:	213e      	movs	r1, #62	; 0x3e
  400134:	4b0d      	ldr	r3, [pc, #52]	; (40016c <sysclk_init+0x44>)
  400136:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400138:	4c0d      	ldr	r4, [pc, #52]	; (400170 <sysclk_init+0x48>)
  40013a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40013c:	2800      	cmp	r0, #0
  40013e:	d0fc      	beq.n	40013a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400140:	4b0c      	ldr	r3, [pc, #48]	; (400174 <sysclk_init+0x4c>)
  400142:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400144:	4a0c      	ldr	r2, [pc, #48]	; (400178 <sysclk_init+0x50>)
  400146:	4b0d      	ldr	r3, [pc, #52]	; (40017c <sysclk_init+0x54>)
  400148:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  40014a:	4c0d      	ldr	r4, [pc, #52]	; (400180 <sysclk_init+0x58>)
  40014c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40014e:	2800      	cmp	r0, #0
  400150:	d0fc      	beq.n	40014c <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400152:	2010      	movs	r0, #16
  400154:	4b0b      	ldr	r3, [pc, #44]	; (400184 <sysclk_init+0x5c>)
  400156:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400158:	4b0b      	ldr	r3, [pc, #44]	; (400188 <sysclk_init+0x60>)
  40015a:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40015c:	4801      	ldr	r0, [pc, #4]	; (400164 <sysclk_init+0x3c>)
  40015e:	4b02      	ldr	r3, [pc, #8]	; (400168 <sysclk_init+0x40>)
  400160:	4798      	blx	r3
  400162:	bd10      	pop	{r4, pc}
  400164:	07270e00 	.word	0x07270e00
  400168:	00400a09 	.word	0x00400a09
  40016c:	00400695 	.word	0x00400695
  400170:	004006e9 	.word	0x004006e9
  400174:	004006f9 	.word	0x004006f9
  400178:	20133f01 	.word	0x20133f01
  40017c:	400e0400 	.word	0x400e0400
  400180:	00400709 	.word	0x00400709
  400184:	0040062d 	.word	0x0040062d
  400188:	004008f5 	.word	0x004008f5

0040018c <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
  40018c:	b9a8      	cbnz	r0, 4001ba <_read+0x2e>
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  40018e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400192:	460c      	mov	r4, r1
  400194:	4690      	mov	r8, r2

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  400196:	2a00      	cmp	r2, #0
  400198:	dd0a      	ble.n	4001b0 <_read+0x24>
  40019a:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  40019c:	4e08      	ldr	r6, [pc, #32]	; (4001c0 <_read+0x34>)
  40019e:	4d09      	ldr	r5, [pc, #36]	; (4001c4 <_read+0x38>)
  4001a0:	6830      	ldr	r0, [r6, #0]
  4001a2:	4621      	mov	r1, r4
  4001a4:	682b      	ldr	r3, [r5, #0]
  4001a6:	4798      	blx	r3
		ptr++;
  4001a8:	3401      	adds	r4, #1

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  4001aa:	42bc      	cmp	r4, r7
  4001ac:	d1f8      	bne.n	4001a0 <_read+0x14>
  4001ae:	e001      	b.n	4001b4 <_read+0x28>
  4001b0:	f04f 0800 	mov.w	r8, #0
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
	}
	return nChars;
  4001b4:	4640      	mov	r0, r8
  4001b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
		return -1;
  4001ba:	f04f 30ff 	mov.w	r0, #4294967295
  4001be:	4770      	bx	lr
  4001c0:	2000093c 	.word	0x2000093c
  4001c4:	20000934 	.word	0x20000934

004001c8 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  4001c8:	3801      	subs	r0, #1
  4001ca:	2802      	cmp	r0, #2
  4001cc:	d818      	bhi.n	400200 <_write+0x38>
int __attribute__((weak))
_write (int file, const char *ptr, int len);

int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
  4001ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4001d2:	460e      	mov	r6, r1
  4001d4:	4614      	mov	r4, r2

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  4001d6:	b182      	cbz	r2, 4001fa <_write+0x32>
  4001d8:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  4001da:	f8df 8038 	ldr.w	r8, [pc, #56]	; 400214 <_write+0x4c>
  4001de:	4f0c      	ldr	r7, [pc, #48]	; (400210 <_write+0x48>)
  4001e0:	f8d8 0000 	ldr.w	r0, [r8]
  4001e4:	f815 1b01 	ldrb.w	r1, [r5], #1
  4001e8:	683b      	ldr	r3, [r7, #0]
  4001ea:	4798      	blx	r3
  4001ec:	2800      	cmp	r0, #0
  4001ee:	db0a      	blt.n	400206 <_write+0x3e>
  4001f0:	1ba8      	subs	r0, r5, r6

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  4001f2:	3c01      	subs	r4, #1
  4001f4:	d1f4      	bne.n	4001e0 <_write+0x18>
  4001f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4001fa:	2000      	movs	r0, #0
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
		}
		++nChars;
	}
	return nChars;
  4001fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
  400200:	f04f 30ff 	mov.w	r0, #4294967295
			return -1;
		}
		++nChars;
	}
	return nChars;
}
  400204:	4770      	bx	lr
		return -1;
	}

	for (; len != 0; --len) {
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
  400206:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  40020a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40020e:	bf00      	nop
  400210:	20000938 	.word	0x20000938
  400214:	2000093c 	.word	0x2000093c

00400218 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
  400218:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  40021a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  40021e:	4b10      	ldr	r3, [pc, #64]	; (400260 <board_init+0x48>)
  400220:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400222:	200b      	movs	r0, #11
  400224:	4c0f      	ldr	r4, [pc, #60]	; (400264 <board_init+0x4c>)
  400226:	47a0      	blx	r4
  400228:	200c      	movs	r0, #12
  40022a:	47a0      	blx	r4
  40022c:	200d      	movs	r0, #13
  40022e:	47a0      	blx	r4
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();

	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
  400230:	2013      	movs	r0, #19
  400232:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400236:	4c0c      	ldr	r4, [pc, #48]	; (400268 <board_init+0x50>)
  400238:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
  40023a:	2014      	movs	r0, #20
  40023c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400240:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
  400242:	2023      	movs	r0, #35	; 0x23
  400244:	4909      	ldr	r1, [pc, #36]	; (40026c <board_init+0x54>)
  400246:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
  400248:	204c      	movs	r0, #76	; 0x4c
  40024a:	4909      	ldr	r1, [pc, #36]	; (400270 <board_init+0x58>)
  40024c:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART0_PIO, PINS_UART0, PINS_UART0_FLAGS);
  40024e:	4809      	ldr	r0, [pc, #36]	; (400274 <board_init+0x5c>)
  400250:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  400254:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  400258:	4b07      	ldr	r3, [pc, #28]	; (400278 <board_init+0x60>)
  40025a:	4798      	blx	r3
  40025c:	bd10      	pop	{r4, pc}
  40025e:	bf00      	nop
  400260:	400e1450 	.word	0x400e1450
  400264:	00400719 	.word	0x00400719
  400268:	00400389 	.word	0x00400389
  40026c:	28000079 	.word	0x28000079
  400270:	28000059 	.word	0x28000059
  400274:	400e0e00 	.word	0x400e0e00
  400278:	004004ad 	.word	0x004004ad

0040027c <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  40027c:	6301      	str	r1, [r0, #48]	; 0x30
  40027e:	4770      	bx	lr

00400280 <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400280:	6341      	str	r1, [r0, #52]	; 0x34
  400282:	4770      	bx	lr

00400284 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400284:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400286:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  40028a:	d02f      	beq.n	4002ec <pio_set_peripheral+0x68>
  40028c:	d807      	bhi.n	40029e <pio_set_peripheral+0x1a>
  40028e:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400292:	d014      	beq.n	4002be <pio_set_peripheral+0x3a>
  400294:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400298:	d01e      	beq.n	4002d8 <pio_set_peripheral+0x54>
  40029a:	b939      	cbnz	r1, 4002ac <pio_set_peripheral+0x28>
  40029c:	4770      	bx	lr
  40029e:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4002a2:	d037      	beq.n	400314 <pio_set_peripheral+0x90>
  4002a4:	d804      	bhi.n	4002b0 <pio_set_peripheral+0x2c>
  4002a6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4002aa:	d029      	beq.n	400300 <pio_set_peripheral+0x7c>
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4002ac:	6042      	str	r2, [r0, #4]
  4002ae:	4770      	bx	lr

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4002b0:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4002b4:	d02e      	beq.n	400314 <pio_set_peripheral+0x90>
  4002b6:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4002ba:	d02b      	beq.n	400314 <pio_set_peripheral+0x90>
  4002bc:	e7f6      	b.n	4002ac <pio_set_peripheral+0x28>
 * \param ul_type PIO type.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set_peripheral(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
  4002be:	b410      	push	{r4}
	p_pio->PIO_IDR = ul_mask;

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002c0:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4002c2:	6f04      	ldr	r4, [r0, #112]	; 0x70
  4002c4:	43d3      	mvns	r3, r2
  4002c6:	4021      	ands	r1, r4
  4002c8:	4019      	ands	r1, r3
  4002ca:	6701      	str	r1, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4002cc:	6f41      	ldr	r1, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4002ce:	6f44      	ldr	r4, [r0, #116]	; 0x74
  4002d0:	4021      	ands	r1, r4
  4002d2:	400b      	ands	r3, r1
  4002d4:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4002d6:	e01a      	b.n	40030e <pio_set_peripheral+0x8a>
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002d8:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4002da:	4313      	orrs	r3, r2
  4002dc:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4002de:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4002e0:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4002e2:	400b      	ands	r3, r1
  4002e4:	ea23 0302 	bic.w	r3, r3, r2
  4002e8:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4002ea:	e7df      	b.n	4002ac <pio_set_peripheral+0x28>
#if (!SAMG)
	case PIO_PERIPH_C:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002ec:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4002ee:	6f01      	ldr	r1, [r0, #112]	; 0x70
  4002f0:	400b      	ands	r3, r1
  4002f2:	ea23 0302 	bic.w	r3, r3, r2
  4002f6:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4002f8:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4002fa:	4313      	orrs	r3, r2
  4002fc:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4002fe:	e7d5      	b.n	4002ac <pio_set_peripheral+0x28>
	case PIO_PERIPH_D:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400300:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400302:	4313      	orrs	r3, r2
  400304:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400306:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400308:	4313      	orrs	r3, r2
  40030a:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  40030c:	e7ce      	b.n	4002ac <pio_set_peripheral+0x28>
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  40030e:	6042      	str	r2, [r0, #4]
}
  400310:	f85d 4b04 	ldr.w	r4, [sp], #4
  400314:	4770      	bx	lr
  400316:	bf00      	nop

00400318 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400318:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  40031a:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  40031e:	bf14      	ite	ne
  400320:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400322:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400324:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  400328:	bf14      	ite	ne
  40032a:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
  40032c:	6241      	streq	r1, [r0, #36]	; 0x24
	}

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
  40032e:	f012 0f02 	tst.w	r2, #2
  400332:	d002      	beq.n	40033a <pio_set_input+0x22>
		p_pio->PIO_IFSCDR = ul_mask;
  400334:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  400338:	e004      	b.n	400344 <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
  40033a:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  40033e:	bf18      	it	ne
  400340:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
  400344:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400346:	6001      	str	r1, [r0, #0]
  400348:	4770      	bx	lr
  40034a:	bf00      	nop

0040034c <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
  40034c:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  40034e:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400350:	9c01      	ldr	r4, [sp, #4]
  400352:	b10c      	cbz	r4, 400358 <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
  400354:	6641      	str	r1, [r0, #100]	; 0x64
  400356:	e000      	b.n	40035a <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400358:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
  40035a:	b10b      	cbz	r3, 400360 <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
  40035c:	6501      	str	r1, [r0, #80]	; 0x50
  40035e:	e000      	b.n	400362 <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
  400360:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
  400362:	b10a      	cbz	r2, 400368 <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
  400364:	6301      	str	r1, [r0, #48]	; 0x30
  400366:	e000      	b.n	40036a <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
  400368:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
  40036a:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  40036c:	6001      	str	r1, [r0, #0]
}
  40036e:	f85d 4b04 	ldr.w	r4, [sp], #4
  400372:	4770      	bx	lr

00400374 <pio_get_output_data_status>:
 * \retval 0 All PIOs are configured to output a low level.
 */
uint32_t pio_get_output_data_status(const Pio *p_pio,
		const uint32_t ul_mask)
{
	if ((p_pio->PIO_ODSR & ul_mask) == 0) {
  400374:	6b83      	ldr	r3, [r0, #56]	; 0x38
  400376:	4219      	tst	r1, r3
		return 0;
	} else {
		return 1;
	}
}
  400378:	bf14      	ite	ne
  40037a:	2001      	movne	r0, #1
  40037c:	2000      	moveq	r0, #0
  40037e:	4770      	bx	lr

00400380 <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400380:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400382:	4770      	bx	lr

00400384 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400384:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400386:	4770      	bx	lr

00400388 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  400388:	b570      	push	{r4, r5, r6, lr}
  40038a:	b082      	sub	sp, #8
  40038c:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  40038e:	0943      	lsrs	r3, r0, #5
  400390:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400394:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400398:	025c      	lsls	r4, r3, #9
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
  40039a:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  40039e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4003a2:	d047      	beq.n	400434 <pio_configure_pin+0xac>
  4003a4:	d809      	bhi.n	4003ba <pio_configure_pin+0x32>
  4003a6:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4003aa:	d021      	beq.n	4003f0 <pio_configure_pin+0x68>
  4003ac:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4003b0:	d02f      	beq.n	400412 <pio_configure_pin+0x8a>
  4003b2:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4003b6:	d16f      	bne.n	400498 <pio_configure_pin+0x110>
  4003b8:	e009      	b.n	4003ce <pio_configure_pin+0x46>
  4003ba:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4003be:	d055      	beq.n	40046c <pio_configure_pin+0xe4>
  4003c0:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  4003c4:	d052      	beq.n	40046c <pio_configure_pin+0xe4>
  4003c6:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  4003ca:	d044      	beq.n	400456 <pio_configure_pin+0xce>
  4003cc:	e064      	b.n	400498 <pio_configure_pin+0x110>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  4003ce:	f000 001f 	and.w	r0, r0, #31
  4003d2:	2601      	movs	r6, #1
  4003d4:	4086      	lsls	r6, r0
  4003d6:	4620      	mov	r0, r4
  4003d8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4003dc:	4632      	mov	r2, r6
  4003de:	4b30      	ldr	r3, [pc, #192]	; (4004a0 <pio_configure_pin+0x118>)
  4003e0:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  4003e2:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4003e6:	bf14      	ite	ne
  4003e8:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  4003ea:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  4003ec:	2001      	movs	r0, #1
  4003ee:	e054      	b.n	40049a <pio_configure_pin+0x112>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  4003f0:	f000 001f 	and.w	r0, r0, #31
  4003f4:	2601      	movs	r6, #1
  4003f6:	4086      	lsls	r6, r0
  4003f8:	4620      	mov	r0, r4
  4003fa:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4003fe:	4632      	mov	r2, r6
  400400:	4b27      	ldr	r3, [pc, #156]	; (4004a0 <pio_configure_pin+0x118>)
  400402:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400404:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400408:	bf14      	ite	ne
  40040a:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  40040c:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  40040e:	2001      	movs	r0, #1
  400410:	e043      	b.n	40049a <pio_configure_pin+0x112>
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  400412:	f000 001f 	and.w	r0, r0, #31
  400416:	2601      	movs	r6, #1
  400418:	4086      	lsls	r6, r0
  40041a:	4620      	mov	r0, r4
  40041c:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400420:	4632      	mov	r2, r6
  400422:	4b1f      	ldr	r3, [pc, #124]	; (4004a0 <pio_configure_pin+0x118>)
  400424:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400426:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  40042a:	bf14      	ite	ne
  40042c:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  40042e:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400430:	2001      	movs	r0, #1
  400432:	e032      	b.n	40049a <pio_configure_pin+0x112>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_D:
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  400434:	f000 001f 	and.w	r0, r0, #31
  400438:	2601      	movs	r6, #1
  40043a:	4086      	lsls	r6, r0
  40043c:	4620      	mov	r0, r4
  40043e:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400442:	4632      	mov	r2, r6
  400444:	4b16      	ldr	r3, [pc, #88]	; (4004a0 <pio_configure_pin+0x118>)
  400446:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400448:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  40044c:	bf14      	ite	ne
  40044e:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400450:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400452:	2001      	movs	r0, #1
  400454:	e021      	b.n	40049a <pio_configure_pin+0x112>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  400456:	f000 031f 	and.w	r3, r0, #31
  40045a:	2601      	movs	r6, #1
  40045c:	4620      	mov	r0, r4
  40045e:	fa06 f103 	lsl.w	r1, r6, r3
  400462:	462a      	mov	r2, r5
  400464:	4b0f      	ldr	r3, [pc, #60]	; (4004a4 <pio_configure_pin+0x11c>)
  400466:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
  400468:	4630      	mov	r0, r6
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
  40046a:	e016      	b.n	40049a <pio_configure_pin+0x112>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  40046c:	f000 031f 	and.w	r3, r0, #31
  400470:	2601      	movs	r6, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400472:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  400476:	ea05 0106 	and.w	r1, r5, r6
  40047a:	9100      	str	r1, [sp, #0]
  40047c:	4620      	mov	r0, r4
  40047e:	fa06 f103 	lsl.w	r1, r6, r3
  400482:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400486:	bf14      	ite	ne
  400488:	2200      	movne	r2, #0
  40048a:	2201      	moveq	r2, #1
  40048c:	f3c5 0380 	ubfx	r3, r5, #2, #1
  400490:	4c05      	ldr	r4, [pc, #20]	; (4004a8 <pio_configure_pin+0x120>)
  400492:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
  400494:	4630      	mov	r0, r6
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
  400496:	e000      	b.n	40049a <pio_configure_pin+0x112>

	default:
		return 0;
  400498:	2000      	movs	r0, #0
	}

	return 1;
}
  40049a:	b002      	add	sp, #8
  40049c:	bd70      	pop	{r4, r5, r6, pc}
  40049e:	bf00      	nop
  4004a0:	00400285 	.word	0x00400285
  4004a4:	00400319 	.word	0x00400319
  4004a8:	0040034d 	.word	0x0040034d

004004ac <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
  4004ac:	b570      	push	{r4, r5, r6, lr}
  4004ae:	b082      	sub	sp, #8
  4004b0:	4606      	mov	r6, r0
  4004b2:	460d      	mov	r5, r1
  4004b4:	4614      	mov	r4, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
  4004b6:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
  4004ba:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4004be:	d038      	beq.n	400532 <pio_configure_pin_group+0x86>
  4004c0:	d809      	bhi.n	4004d6 <pio_configure_pin_group+0x2a>
  4004c2:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4004c6:	d01c      	beq.n	400502 <pio_configure_pin_group+0x56>
  4004c8:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4004cc:	d025      	beq.n	40051a <pio_configure_pin_group+0x6e>
  4004ce:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4004d2:	d150      	bne.n	400576 <pio_configure_pin_group+0xca>
  4004d4:	e009      	b.n	4004ea <pio_configure_pin_group+0x3e>
  4004d6:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4004da:	d03a      	beq.n	400552 <pio_configure_pin_group+0xa6>
  4004dc:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  4004e0:	d037      	beq.n	400552 <pio_configure_pin_group+0xa6>
  4004e2:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  4004e6:	d030      	beq.n	40054a <pio_configure_pin_group+0x9e>
  4004e8:	e045      	b.n	400576 <pio_configure_pin_group+0xca>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
  4004ea:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4004ee:	462a      	mov	r2, r5
  4004f0:	4b22      	ldr	r3, [pc, #136]	; (40057c <pio_configure_pin_group+0xd0>)
  4004f2:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  4004f4:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  4004f8:	bf14      	ite	ne
  4004fa:	6675      	strne	r5, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  4004fc:	6635      	streq	r5, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  4004fe:	2001      	movs	r0, #1
  400500:	e03a      	b.n	400578 <pio_configure_pin_group+0xcc>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
  400502:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400506:	462a      	mov	r2, r5
  400508:	4b1c      	ldr	r3, [pc, #112]	; (40057c <pio_configure_pin_group+0xd0>)
  40050a:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  40050c:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400510:	bf14      	ite	ne
  400512:	6675      	strne	r5, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400514:	6635      	streq	r5, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400516:	2001      	movs	r0, #1
  400518:	e02e      	b.n	400578 <pio_configure_pin_group+0xcc>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
  40051a:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  40051e:	462a      	mov	r2, r5
  400520:	4b16      	ldr	r3, [pc, #88]	; (40057c <pio_configure_pin_group+0xd0>)
  400522:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400524:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400528:	bf14      	ite	ne
  40052a:	6675      	strne	r5, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  40052c:	6635      	streq	r5, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  40052e:	2001      	movs	r0, #1
  400530:	e022      	b.n	400578 <pio_configure_pin_group+0xcc>
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_D:
		pio_set_peripheral(p_pio, PIO_PERIPH_D, ul_mask);
  400532:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400536:	462a      	mov	r2, r5
  400538:	4b10      	ldr	r3, [pc, #64]	; (40057c <pio_configure_pin_group+0xd0>)
  40053a:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  40053c:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400540:	bf14      	ite	ne
  400542:	6675      	strne	r5, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400544:	6635      	streq	r5, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400546:	2001      	movs	r0, #1
  400548:	e016      	b.n	400578 <pio_configure_pin_group+0xcc>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
  40054a:	4b0d      	ldr	r3, [pc, #52]	; (400580 <pio_configure_pin_group+0xd4>)
  40054c:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
  40054e:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
  400550:	e012      	b.n	400578 <pio_configure_pin_group+0xcc>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400552:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
  400556:	f004 0301 	and.w	r3, r4, #1
  40055a:	9300      	str	r3, [sp, #0]
  40055c:	4630      	mov	r0, r6
  40055e:	4629      	mov	r1, r5
  400560:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400564:	bf14      	ite	ne
  400566:	2200      	movne	r2, #0
  400568:	2201      	moveq	r2, #1
  40056a:	f3c4 0380 	ubfx	r3, r4, #2, #1
  40056e:	4c05      	ldr	r4, [pc, #20]	; (400584 <pio_configure_pin_group+0xd8>)
  400570:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
  400572:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
  400574:	e000      	b.n	400578 <pio_configure_pin_group+0xcc>

	default:
		return 0;
  400576:	2000      	movs	r0, #0
	}

	return 1;
}
  400578:	b002      	add	sp, #8
  40057a:	bd70      	pop	{r4, r5, r6, pc}
  40057c:	00400285 	.word	0x00400285
  400580:	00400319 	.word	0x00400319
  400584:	0040034d 	.word	0x0040034d

00400588 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400588:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40058c:	4681      	mov	r9, r0
  40058e:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400590:	4b12      	ldr	r3, [pc, #72]	; (4005dc <pio_handler_process+0x54>)
  400592:	4798      	blx	r3
  400594:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400596:	4648      	mov	r0, r9
  400598:	4b11      	ldr	r3, [pc, #68]	; (4005e0 <pio_handler_process+0x58>)
  40059a:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  40059c:	4005      	ands	r5, r0
  40059e:	d013      	beq.n	4005c8 <pio_handler_process+0x40>
  4005a0:	4c10      	ldr	r4, [pc, #64]	; (4005e4 <pio_handler_process+0x5c>)
  4005a2:	f104 0660 	add.w	r6, r4, #96	; 0x60
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
  4005a6:	6823      	ldr	r3, [r4, #0]
  4005a8:	4543      	cmp	r3, r8
  4005aa:	d108      	bne.n	4005be <pio_handler_process+0x36>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  4005ac:	6861      	ldr	r1, [r4, #4]
  4005ae:	4229      	tst	r1, r5
  4005b0:	d005      	beq.n	4005be <pio_handler_process+0x36>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  4005b2:	68e3      	ldr	r3, [r4, #12]
  4005b4:	4640      	mov	r0, r8
  4005b6:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
  4005b8:	6863      	ldr	r3, [r4, #4]
  4005ba:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  4005be:	42b4      	cmp	r4, r6
  4005c0:	d002      	beq.n	4005c8 <pio_handler_process+0x40>
  4005c2:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
  4005c4:	2d00      	cmp	r5, #0
  4005c6:	d1ee      	bne.n	4005a6 <pio_handler_process+0x1e>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  4005c8:	4b07      	ldr	r3, [pc, #28]	; (4005e8 <pio_handler_process+0x60>)
  4005ca:	681b      	ldr	r3, [r3, #0]
  4005cc:	b123      	cbz	r3, 4005d8 <pio_handler_process+0x50>
		if (pio_capture_handler) {
  4005ce:	4b07      	ldr	r3, [pc, #28]	; (4005ec <pio_handler_process+0x64>)
  4005d0:	681b      	ldr	r3, [r3, #0]
  4005d2:	b10b      	cbz	r3, 4005d8 <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  4005d4:	4648      	mov	r0, r9
  4005d6:	4798      	blx	r3
  4005d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4005dc:	00400381 	.word	0x00400381
  4005e0:	00400385 	.word	0x00400385
  4005e4:	2000088c 	.word	0x2000088c
  4005e8:	20000940 	.word	0x20000940
  4005ec:	20000888 	.word	0x20000888

004005f0 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  4005f0:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  4005f2:	4802      	ldr	r0, [pc, #8]	; (4005fc <PIOA_Handler+0xc>)
  4005f4:	210b      	movs	r1, #11
  4005f6:	4b02      	ldr	r3, [pc, #8]	; (400600 <PIOA_Handler+0x10>)
  4005f8:	4798      	blx	r3
  4005fa:	bd08      	pop	{r3, pc}
  4005fc:	400e0e00 	.word	0x400e0e00
  400600:	00400589 	.word	0x00400589

00400604 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400604:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400606:	4802      	ldr	r0, [pc, #8]	; (400610 <PIOB_Handler+0xc>)
  400608:	210c      	movs	r1, #12
  40060a:	4b02      	ldr	r3, [pc, #8]	; (400614 <PIOB_Handler+0x10>)
  40060c:	4798      	blx	r3
  40060e:	bd08      	pop	{r3, pc}
  400610:	400e1000 	.word	0x400e1000
  400614:	00400589 	.word	0x00400589

00400618 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400618:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  40061a:	4802      	ldr	r0, [pc, #8]	; (400624 <PIOC_Handler+0xc>)
  40061c:	210d      	movs	r1, #13
  40061e:	4b02      	ldr	r3, [pc, #8]	; (400628 <PIOC_Handler+0x10>)
  400620:	4798      	blx	r3
  400622:	bd08      	pop	{r3, pc}
  400624:	400e1200 	.word	0x400e1200
  400628:	00400589 	.word	0x00400589

0040062c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  40062c:	4a18      	ldr	r2, [pc, #96]	; (400690 <pmc_switch_mck_to_pllack+0x64>)
  40062e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400630:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400634:	4318      	orrs	r0, r3
  400636:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400638:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40063a:	f013 0f08 	tst.w	r3, #8
  40063e:	d003      	beq.n	400648 <pmc_switch_mck_to_pllack+0x1c>
  400640:	e009      	b.n	400656 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400642:	3b01      	subs	r3, #1
  400644:	d103      	bne.n	40064e <pmc_switch_mck_to_pllack+0x22>
  400646:	e01e      	b.n	400686 <pmc_switch_mck_to_pllack+0x5a>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400648:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40064c:	4910      	ldr	r1, [pc, #64]	; (400690 <pmc_switch_mck_to_pllack+0x64>)
  40064e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400650:	f012 0f08 	tst.w	r2, #8
  400654:	d0f5      	beq.n	400642 <pmc_switch_mck_to_pllack+0x16>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400656:	4a0e      	ldr	r2, [pc, #56]	; (400690 <pmc_switch_mck_to_pllack+0x64>)
  400658:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40065a:	f023 0303 	bic.w	r3, r3, #3
  40065e:	f043 0302 	orr.w	r3, r3, #2
  400662:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400664:	6e90      	ldr	r0, [r2, #104]	; 0x68
  400666:	f010 0008 	ands.w	r0, r0, #8
  40066a:	d004      	beq.n	400676 <pmc_switch_mck_to_pllack+0x4a>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
  40066c:	2000      	movs	r0, #0
  40066e:	4770      	bx	lr
	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
  400670:	3b01      	subs	r3, #1
  400672:	d103      	bne.n	40067c <pmc_switch_mck_to_pllack+0x50>
  400674:	e009      	b.n	40068a <pmc_switch_mck_to_pllack+0x5e>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400676:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40067a:	4905      	ldr	r1, [pc, #20]	; (400690 <pmc_switch_mck_to_pllack+0x64>)
  40067c:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40067e:	f012 0f08 	tst.w	r2, #8
  400682:	d0f5      	beq.n	400670 <pmc_switch_mck_to_pllack+0x44>
  400684:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  400686:	2001      	movs	r0, #1
  400688:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  40068a:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  40068c:	4770      	bx	lr
  40068e:	bf00      	nop
  400690:	400e0400 	.word	0x400e0400

00400694 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400694:	b138      	cbz	r0, 4006a6 <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400696:	4911      	ldr	r1, [pc, #68]	; (4006dc <pmc_switch_mainck_to_xtal+0x48>)
  400698:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  40069a:	4a11      	ldr	r2, [pc, #68]	; (4006e0 <pmc_switch_mainck_to_xtal+0x4c>)
  40069c:	401a      	ands	r2, r3
  40069e:	4b11      	ldr	r3, [pc, #68]	; (4006e4 <pmc_switch_mainck_to_xtal+0x50>)
  4006a0:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4006a2:	620b      	str	r3, [r1, #32]
  4006a4:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4006a6:	4a0d      	ldr	r2, [pc, #52]	; (4006dc <pmc_switch_mainck_to_xtal+0x48>)
  4006a8:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4006aa:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  4006ae:	f023 0303 	bic.w	r3, r3, #3
  4006b2:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4006b6:	f043 0301 	orr.w	r3, r3, #1
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  4006ba:	0209      	lsls	r1, r1, #8
  4006bc:	b289      	uxth	r1, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4006be:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4006c0:	6213      	str	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4006c2:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4006c4:	f013 0f01 	tst.w	r3, #1
  4006c8:	d0fb      	beq.n	4006c2 <pmc_switch_mainck_to_xtal+0x2e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4006ca:	4a04      	ldr	r2, [pc, #16]	; (4006dc <pmc_switch_mainck_to_xtal+0x48>)
  4006cc:	6a13      	ldr	r3, [r2, #32]
  4006ce:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4006d2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4006d6:	6213      	str	r3, [r2, #32]
  4006d8:	4770      	bx	lr
  4006da:	bf00      	nop
  4006dc:	400e0400 	.word	0x400e0400
  4006e0:	fec8fffc 	.word	0xfec8fffc
  4006e4:	01370002 	.word	0x01370002

004006e8 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4006e8:	4b02      	ldr	r3, [pc, #8]	; (4006f4 <pmc_osc_is_ready_mainck+0xc>)
  4006ea:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4006ec:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4006f0:	4770      	bx	lr
  4006f2:	bf00      	nop
  4006f4:	400e0400 	.word	0x400e0400

004006f8 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4006f8:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4006fc:	4b01      	ldr	r3, [pc, #4]	; (400704 <pmc_disable_pllack+0xc>)
  4006fe:	629a      	str	r2, [r3, #40]	; 0x28
  400700:	4770      	bx	lr
  400702:	bf00      	nop
  400704:	400e0400 	.word	0x400e0400

00400708 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400708:	4b02      	ldr	r3, [pc, #8]	; (400714 <pmc_is_locked_pllack+0xc>)
  40070a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40070c:	f000 0002 	and.w	r0, r0, #2
  400710:	4770      	bx	lr
  400712:	bf00      	nop
  400714:	400e0400 	.word	0x400e0400

00400718 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400718:	2822      	cmp	r0, #34	; 0x22
  40071a:	d81e      	bhi.n	40075a <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  40071c:	281f      	cmp	r0, #31
  40071e:	d80c      	bhi.n	40073a <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400720:	4b11      	ldr	r3, [pc, #68]	; (400768 <pmc_enable_periph_clk+0x50>)
  400722:	699a      	ldr	r2, [r3, #24]
  400724:	2301      	movs	r3, #1
  400726:	4083      	lsls	r3, r0
  400728:	401a      	ands	r2, r3
  40072a:	4293      	cmp	r3, r2
  40072c:	d017      	beq.n	40075e <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  40072e:	2301      	movs	r3, #1
  400730:	4083      	lsls	r3, r0
  400732:	4a0d      	ldr	r2, [pc, #52]	; (400768 <pmc_enable_periph_clk+0x50>)
  400734:	6113      	str	r3, [r2, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400736:	2000      	movs	r0, #0
  400738:	4770      	bx	lr
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  40073a:	4b0b      	ldr	r3, [pc, #44]	; (400768 <pmc_enable_periph_clk+0x50>)
  40073c:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
  400740:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400742:	2301      	movs	r3, #1
  400744:	4083      	lsls	r3, r0
  400746:	401a      	ands	r2, r3
  400748:	4293      	cmp	r3, r2
  40074a:	d00a      	beq.n	400762 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  40074c:	2301      	movs	r3, #1
  40074e:	4083      	lsls	r3, r0
  400750:	4a05      	ldr	r2, [pc, #20]	; (400768 <pmc_enable_periph_clk+0x50>)
  400752:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
		}
#endif
	}

	return 0;
  400756:	2000      	movs	r0, #0
  400758:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
  40075a:	2001      	movs	r0, #1
  40075c:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  40075e:	2000      	movs	r0, #0
  400760:	4770      	bx	lr
  400762:	2000      	movs	r0, #0
}
  400764:	4770      	bx	lr
  400766:	bf00      	nop
  400768:	400e0400 	.word	0x400e0400

0040076c <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  40076c:	b410      	push	{r4}
  40076e:	0189      	lsls	r1, r1, #6
  400770:	1843      	adds	r3, r0, r1
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  400772:	2402      	movs	r4, #2
  400774:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  400776:	f04f 31ff 	mov.w	r1, #4294967295
  40077a:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  40077c:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  40077e:	605a      	str	r2, [r3, #4]
}
  400780:	f85d 4b04 	ldr.w	r4, [sp], #4
  400784:	4770      	bx	lr
  400786:	bf00      	nop

00400788 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  400788:	0189      	lsls	r1, r1, #6
  40078a:	2305      	movs	r3, #5
  40078c:	5043      	str	r3, [r0, r1]
  40078e:	4770      	bx	lr

00400790 <tc_stop>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKDIS;
  400790:	0189      	lsls	r1, r1, #6
  400792:	2302      	movs	r3, #2
  400794:	5043      	str	r3, [r0, r1]
  400796:	4770      	bx	lr

00400798 <tc_read_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	return p_tc->TC_CHANNEL[ul_channel].TC_RC;
  400798:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  40079c:	69c8      	ldr	r0, [r1, #28]
}
  40079e:	4770      	bx	lr

004007a0 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  4007a0:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  4007a4:	61ca      	str	r2, [r1, #28]
  4007a6:	4770      	bx	lr

004007a8 <tc_enable_interrupt>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
	tc_channel->TC_IER = ul_sources;
  4007a8:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  4007ac:	624a      	str	r2, [r1, #36]	; 0x24
  4007ae:	4770      	bx	lr

004007b0 <tc_get_status>:
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
	return tc_channel->TC_SR;
  4007b0:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  4007b4:	6a08      	ldr	r0, [r1, #32]
}
  4007b6:	4770      	bx	lr

004007b8 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
  4007b8:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
  4007ba:	23ac      	movs	r3, #172	; 0xac
  4007bc:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
  4007be:	680b      	ldr	r3, [r1, #0]
  4007c0:	684a      	ldr	r2, [r1, #4]
  4007c2:	fbb3 f3f2 	udiv	r3, r3, r2
  4007c6:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
  4007c8:	1e5c      	subs	r4, r3, #1
  4007ca:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  4007ce:	4294      	cmp	r4, r2
  4007d0:	d80a      	bhi.n	4007e8 <uart_init+0x30>
		return 1;

	p_uart->UART_BRGR = cd;
  4007d2:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
  4007d4:	688b      	ldr	r3, [r1, #8]
  4007d6:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
  4007d8:	f240 2302 	movw	r3, #514	; 0x202
  4007dc:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  4007e0:	2350      	movs	r3, #80	; 0x50
  4007e2:	6003      	str	r3, [r0, #0]

	return 0;
  4007e4:	2000      	movs	r0, #0
  4007e6:	e000      	b.n	4007ea <uart_init+0x32>

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
		return 1;
  4007e8:	2001      	movs	r0, #1

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;

	return 0;
}
  4007ea:	f85d 4b04 	ldr.w	r4, [sp], #4
  4007ee:	4770      	bx	lr

004007f0 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  4007f0:	6943      	ldr	r3, [r0, #20]
  4007f2:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  4007f6:	bf1a      	itte	ne
  4007f8:	61c1      	strne	r1, [r0, #28]
	return 0;
  4007fa:	2000      	movne	r0, #0
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
		return 1;
  4007fc:	2001      	moveq	r0, #1

	/* Send character */
	p_uart->UART_THR = uc_data;
	return 0;
}
  4007fe:	4770      	bx	lr

00400800 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  400800:	6943      	ldr	r3, [r0, #20]
  400802:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  400806:	bf1d      	ittte	ne
  400808:	6983      	ldrne	r3, [r0, #24]
  40080a:	700b      	strbne	r3, [r1, #0]
	return 0;
  40080c:	2000      	movne	r0, #0
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
		return 1;
  40080e:	2001      	moveq	r0, #1

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
	return 0;
}
  400810:	4770      	bx	lr
  400812:	bf00      	nop

00400814 <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400814:	6943      	ldr	r3, [r0, #20]
  400816:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  40081a:	bf1d      	ittte	ne
  40081c:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  400820:	61c1      	strne	r1, [r0, #28]
	return 0;
  400822:	2000      	movne	r0, #0
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
		return 1;
  400824:	2001      	moveq	r0, #1
	}

	p_usart->US_THR = US_THR_TXCHR(c);
	return 0;
}
  400826:	4770      	bx	lr

00400828 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400828:	6943      	ldr	r3, [r0, #20]
  40082a:	f013 0f01 	tst.w	r3, #1
  40082e:	d005      	beq.n	40083c <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400830:	6983      	ldr	r3, [r0, #24]
  400832:	f3c3 0308 	ubfx	r3, r3, #0, #9
  400836:	600b      	str	r3, [r1, #0]

	return 0;
  400838:	2000      	movs	r0, #0
  40083a:	4770      	bx	lr
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
		return 1;
  40083c:	2001      	movs	r0, #1

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;

	return 0;
}
  40083e:	4770      	bx	lr

00400840 <Dummy_Handler>:
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
	while (1) {
	}
  400840:	e7fe      	b.n	400840 <Dummy_Handler>
  400842:	bf00      	nop

00400844 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  400844:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc > pDest) {
  400846:	4b20      	ldr	r3, [pc, #128]	; (4008c8 <Reset_Handler+0x84>)
  400848:	4a20      	ldr	r2, [pc, #128]	; (4008cc <Reset_Handler+0x88>)
  40084a:	429a      	cmp	r2, r3
  40084c:	d913      	bls.n	400876 <Reset_Handler+0x32>
		for (; pDest < &_erelocate;) {
  40084e:	4b20      	ldr	r3, [pc, #128]	; (4008d0 <Reset_Handler+0x8c>)
  400850:	4a1d      	ldr	r2, [pc, #116]	; (4008c8 <Reset_Handler+0x84>)
  400852:	429a      	cmp	r2, r3
  400854:	d21f      	bcs.n	400896 <Reset_Handler+0x52>
  400856:	4611      	mov	r1, r2
  400858:	3204      	adds	r2, #4
  40085a:	3303      	adds	r3, #3
  40085c:	1a9b      	subs	r3, r3, r2
  40085e:	f023 0303 	bic.w	r3, r3, #3
  400862:	3304      	adds	r3, #4
  400864:	4a19      	ldr	r2, [pc, #100]	; (4008cc <Reset_Handler+0x88>)
  400866:	4413      	add	r3, r2
			*pDest++ = *pSrc++;
  400868:	f852 0b04 	ldr.w	r0, [r2], #4
  40086c:	f841 0b04 	str.w	r0, [r1], #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc > pDest) {
		for (; pDest < &_erelocate;) {
  400870:	429a      	cmp	r2, r3
  400872:	d1f9      	bne.n	400868 <Reset_Handler+0x24>
  400874:	e00f      	b.n	400896 <Reset_Handler+0x52>
			*pDest++ = *pSrc++;
		}
	} else if (pSrc < pDest) {
  400876:	4b14      	ldr	r3, [pc, #80]	; (4008c8 <Reset_Handler+0x84>)
  400878:	4a14      	ldr	r2, [pc, #80]	; (4008cc <Reset_Handler+0x88>)
  40087a:	429a      	cmp	r2, r3
  40087c:	d20b      	bcs.n	400896 <Reset_Handler+0x52>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  40087e:	4b14      	ldr	r3, [pc, #80]	; (4008d0 <Reset_Handler+0x8c>)
  400880:	4a11      	ldr	r2, [pc, #68]	; (4008c8 <Reset_Handler+0x84>)
  400882:	1a9a      	subs	r2, r3, r2
  400884:	4813      	ldr	r0, [pc, #76]	; (4008d4 <Reset_Handler+0x90>)
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  400886:	1881      	adds	r1, r0, r2
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
		for (;nb_bytes;nb_bytes -= 4) {
  400888:	b12a      	cbz	r2, 400896 <Reset_Handler+0x52>
			*pDest-- = *pSrc--;
  40088a:	f851 2904 	ldr.w	r2, [r1], #-4
  40088e:	f843 2d04 	str.w	r2, [r3, #-4]!
		}
	} else if (pSrc < pDest) {
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
		for (;nb_bytes;nb_bytes -= 4) {
  400892:	4281      	cmp	r1, r0
  400894:	d1f9      	bne.n	40088a <Reset_Handler+0x46>

    No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
  400896:	bf00      	nop
		}
	}
	__NOP();

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  400898:	4b0f      	ldr	r3, [pc, #60]	; (4008d8 <Reset_Handler+0x94>)
  40089a:	4a10      	ldr	r2, [pc, #64]	; (4008dc <Reset_Handler+0x98>)
  40089c:	429a      	cmp	r2, r3
  40089e:	d20b      	bcs.n	4008b8 <Reset_Handler+0x74>
  4008a0:	1d13      	adds	r3, r2, #4
  4008a2:	4a0f      	ldr	r2, [pc, #60]	; (4008e0 <Reset_Handler+0x9c>)
  4008a4:	1ad2      	subs	r2, r2, r3
  4008a6:	f022 0203 	bic.w	r2, r2, #3
  4008aa:	441a      	add	r2, r3
  4008ac:	3b04      	subs	r3, #4
		*pDest++ = 0;
  4008ae:	2100      	movs	r1, #0
  4008b0:	f843 1b04 	str.w	r1, [r3], #4
		}
	}
	__NOP();

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  4008b4:	4293      	cmp	r3, r2
  4008b6:	d1fb      	bne.n	4008b0 <Reset_Handler+0x6c>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc);
  4008b8:	4b0a      	ldr	r3, [pc, #40]	; (4008e4 <Reset_Handler+0xa0>)
  4008ba:	4a0b      	ldr	r2, [pc, #44]	; (4008e8 <Reset_Handler+0xa4>)
  4008bc:	609a      	str	r2, [r3, #8]

	/* Initialize the C library */
	__libc_init_array();
  4008be:	4b0b      	ldr	r3, [pc, #44]	; (4008ec <Reset_Handler+0xa8>)
  4008c0:	4798      	blx	r3

	/* Branch to main function */
	main();
  4008c2:	4b0b      	ldr	r3, [pc, #44]	; (4008f0 <Reset_Handler+0xac>)
  4008c4:	4798      	blx	r3

	/* Infinite loop */
	while (1);
  4008c6:	e7fe      	b.n	4008c6 <Reset_Handler+0x82>
  4008c8:	20000000 	.word	0x20000000
  4008cc:	00404960 	.word	0x00404960
  4008d0:	2000086c 	.word	0x2000086c
  4008d4:	0040495c 	.word	0x0040495c
  4008d8:	20000948 	.word	0x20000948
  4008dc:	2000086c 	.word	0x2000086c
  4008e0:	2000094b 	.word	0x2000094b
  4008e4:	e000ed00 	.word	0xe000ed00
  4008e8:	00400000 	.word	0x00400000
  4008ec:	0040177d 	.word	0x0040177d
  4008f0:	00400d21 	.word	0x00400d21

004008f4 <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  4008f4:	4b3d      	ldr	r3, [pc, #244]	; (4009ec <SystemCoreClockUpdate+0xf8>)
  4008f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4008f8:	f003 0303 	and.w	r3, r3, #3
  4008fc:	2b03      	cmp	r3, #3
  4008fe:	d85d      	bhi.n	4009bc <SystemCoreClockUpdate+0xc8>
  400900:	e8df f003 	tbb	[pc, r3]
  400904:	2b2b0e02 	.word	0x2b2b0e02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  400908:	4b39      	ldr	r3, [pc, #228]	; (4009f0 <SystemCoreClockUpdate+0xfc>)
  40090a:	695b      	ldr	r3, [r3, #20]
  40090c:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  400910:	bf14      	ite	ne
  400912:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  400916:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  40091a:	4b36      	ldr	r3, [pc, #216]	; (4009f4 <SystemCoreClockUpdate+0x100>)
  40091c:	601a      	str	r2, [r3, #0]
  40091e:	e04d      	b.n	4009bc <SystemCoreClockUpdate+0xc8>
			}
		break;
		
	case PMC_MCKR_CSS_MAIN_CLK: /* Main clock */
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  400920:	4b32      	ldr	r3, [pc, #200]	; (4009ec <SystemCoreClockUpdate+0xf8>)
  400922:	6a1b      	ldr	r3, [r3, #32]
  400924:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400928:	d003      	beq.n	400932 <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL;
  40092a:	4a33      	ldr	r2, [pc, #204]	; (4009f8 <SystemCoreClockUpdate+0x104>)
  40092c:	4b31      	ldr	r3, [pc, #196]	; (4009f4 <SystemCoreClockUpdate+0x100>)
  40092e:	601a      	str	r2, [r3, #0]
  400930:	e044      	b.n	4009bc <SystemCoreClockUpdate+0xc8>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400932:	4a32      	ldr	r2, [pc, #200]	; (4009fc <SystemCoreClockUpdate+0x108>)
  400934:	4b2f      	ldr	r3, [pc, #188]	; (4009f4 <SystemCoreClockUpdate+0x100>)
  400936:	601a      	str	r2, [r3, #0]
			
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  400938:	4b2c      	ldr	r3, [pc, #176]	; (4009ec <SystemCoreClockUpdate+0xf8>)
  40093a:	6a1b      	ldr	r3, [r3, #32]
  40093c:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400940:	2b10      	cmp	r3, #16
  400942:	d002      	beq.n	40094a <SystemCoreClockUpdate+0x56>
  400944:	2b20      	cmp	r3, #32
  400946:	d004      	beq.n	400952 <SystemCoreClockUpdate+0x5e>
  400948:	e038      	b.n	4009bc <SystemCoreClockUpdate+0xc8>
			case CKGR_MOR_MOSCRCF_4_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
			break;
			
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  40094a:	4a2d      	ldr	r2, [pc, #180]	; (400a00 <SystemCoreClockUpdate+0x10c>)
  40094c:	4b29      	ldr	r3, [pc, #164]	; (4009f4 <SystemCoreClockUpdate+0x100>)
  40094e:	601a      	str	r2, [r3, #0]
			break;
  400950:	e034      	b.n	4009bc <SystemCoreClockUpdate+0xc8>
			
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  400952:	4a29      	ldr	r2, [pc, #164]	; (4009f8 <SystemCoreClockUpdate+0x104>)
  400954:	4b27      	ldr	r3, [pc, #156]	; (4009f4 <SystemCoreClockUpdate+0x100>)
  400956:	601a      	str	r2, [r3, #0]
			break;
  400958:	e030      	b.n	4009bc <SystemCoreClockUpdate+0xc8>
		}
		break;
		
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_PLLB_CLK:	/* PLLB clock */
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  40095a:	4b24      	ldr	r3, [pc, #144]	; (4009ec <SystemCoreClockUpdate+0xf8>)
  40095c:	6a1b      	ldr	r3, [r3, #32]
  40095e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400962:	d003      	beq.n	40096c <SystemCoreClockUpdate+0x78>
				SystemCoreClock = CHIP_FREQ_XTAL;
  400964:	4a24      	ldr	r2, [pc, #144]	; (4009f8 <SystemCoreClockUpdate+0x104>)
  400966:	4b23      	ldr	r3, [pc, #140]	; (4009f4 <SystemCoreClockUpdate+0x100>)
  400968:	601a      	str	r2, [r3, #0]
  40096a:	e012      	b.n	400992 <SystemCoreClockUpdate+0x9e>
			} else {
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40096c:	4a23      	ldr	r2, [pc, #140]	; (4009fc <SystemCoreClockUpdate+0x108>)
  40096e:	4b21      	ldr	r3, [pc, #132]	; (4009f4 <SystemCoreClockUpdate+0x100>)
  400970:	601a      	str	r2, [r3, #0]
				
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  400972:	4b1e      	ldr	r3, [pc, #120]	; (4009ec <SystemCoreClockUpdate+0xf8>)
  400974:	6a1b      	ldr	r3, [r3, #32]
  400976:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40097a:	2b10      	cmp	r3, #16
  40097c:	d002      	beq.n	400984 <SystemCoreClockUpdate+0x90>
  40097e:	2b20      	cmp	r3, #32
  400980:	d004      	beq.n	40098c <SystemCoreClockUpdate+0x98>
  400982:	e006      	b.n	400992 <SystemCoreClockUpdate+0x9e>
				case CKGR_MOR_MOSCRCF_4_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
					break;
				
				case CKGR_MOR_MOSCRCF_8_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  400984:	4a1e      	ldr	r2, [pc, #120]	; (400a00 <SystemCoreClockUpdate+0x10c>)
  400986:	4b1b      	ldr	r3, [pc, #108]	; (4009f4 <SystemCoreClockUpdate+0x100>)
  400988:	601a      	str	r2, [r3, #0]
					break;
  40098a:	e002      	b.n	400992 <SystemCoreClockUpdate+0x9e>
				
				case CKGR_MOR_MOSCRCF_12_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  40098c:	4a1a      	ldr	r2, [pc, #104]	; (4009f8 <SystemCoreClockUpdate+0x104>)
  40098e:	4b19      	ldr	r3, [pc, #100]	; (4009f4 <SystemCoreClockUpdate+0x100>)
  400990:	601a      	str	r2, [r3, #0]
				default:
					break;
				}
			}
			
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  400992:	4b16      	ldr	r3, [pc, #88]	; (4009ec <SystemCoreClockUpdate+0xf8>)
  400994:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400996:	f003 0303 	and.w	r3, r3, #3
  40099a:	2b02      	cmp	r3, #2
					PMC_MCKR_CSS_PLLA_CLK ) {
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  40099c:	4a13      	ldr	r2, [pc, #76]	; (4009ec <SystemCoreClockUpdate+0xf8>)
  40099e:	bf07      	ittee	eq
  4009a0:	6a93      	ldreq	r3, [r2, #40]	; 0x28
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  4009a2:	6a92      	ldreq	r2, [r2, #40]	; 0x28
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  4009a4:	6ad3      	ldrne	r3, [r2, #44]	; 0x2c
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  4009a6:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  4009a8:	4812      	ldr	r0, [pc, #72]	; (4009f4 <SystemCoreClockUpdate+0x100>)
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  4009aa:	f3c3 410a 	ubfx	r1, r3, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  4009ae:	6803      	ldr	r3, [r0, #0]
  4009b0:	fb01 3303 	mla	r3, r1, r3, r3
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
						>> CKGR_PLLBR_DIVB_Pos));
  4009b4:	b2d2      	uxtb	r2, r2
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  4009b6:	fbb3 f3f2 	udiv	r3, r3, r2
  4009ba:	6003      	str	r3, [r0, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  4009bc:	4b0b      	ldr	r3, [pc, #44]	; (4009ec <SystemCoreClockUpdate+0xf8>)
  4009be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4009c0:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4009c4:	2b70      	cmp	r3, #112	; 0x70
  4009c6:	d107      	bne.n	4009d8 <SystemCoreClockUpdate+0xe4>
		SystemCoreClock /= 3U;
  4009c8:	4a0a      	ldr	r2, [pc, #40]	; (4009f4 <SystemCoreClockUpdate+0x100>)
  4009ca:	6813      	ldr	r3, [r2, #0]
  4009cc:	490d      	ldr	r1, [pc, #52]	; (400a04 <SystemCoreClockUpdate+0x110>)
  4009ce:	fba1 1303 	umull	r1, r3, r1, r3
  4009d2:	085b      	lsrs	r3, r3, #1
  4009d4:	6013      	str	r3, [r2, #0]
  4009d6:	4770      	bx	lr
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4009d8:	4b04      	ldr	r3, [pc, #16]	; (4009ec <SystemCoreClockUpdate+0xf8>)
  4009da:	6b1a      	ldr	r2, [r3, #48]	; 0x30
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
  4009dc:	4905      	ldr	r1, [pc, #20]	; (4009f4 <SystemCoreClockUpdate+0x100>)
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4009de:	f3c2 1202 	ubfx	r2, r2, #4, #3
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
  4009e2:	680b      	ldr	r3, [r1, #0]
  4009e4:	40d3      	lsrs	r3, r2
  4009e6:	600b      	str	r3, [r1, #0]
  4009e8:	4770      	bx	lr
  4009ea:	bf00      	nop
  4009ec:	400e0400 	.word	0x400e0400
  4009f0:	400e1410 	.word	0x400e1410
  4009f4:	20000000 	.word	0x20000000
  4009f8:	00b71b00 	.word	0x00b71b00
  4009fc:	003d0900 	.word	0x003d0900
  400a00:	007a1200 	.word	0x007a1200
  400a04:	aaaaaaab 	.word	0xaaaaaaab

00400a08 <system_init_flash>:
				}
			}
		}
	}
#else
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  400a08:	4b1a      	ldr	r3, [pc, #104]	; (400a74 <system_init_flash+0x6c>)
  400a0a:	4298      	cmp	r0, r3
  400a0c:	d807      	bhi.n	400a1e <system_init_flash+0x16>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400a0e:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
  400a12:	4a19      	ldr	r2, [pc, #100]	; (400a78 <system_init_flash+0x70>)
  400a14:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400a16:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400a1a:	6013      	str	r3, [r2, #0]
  400a1c:	4770      	bx	lr
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  400a1e:	4b17      	ldr	r3, [pc, #92]	; (400a7c <system_init_flash+0x74>)
  400a20:	4298      	cmp	r0, r3
  400a22:	d806      	bhi.n	400a32 <system_init_flash+0x2a>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400a24:	4b16      	ldr	r3, [pc, #88]	; (400a80 <system_init_flash+0x78>)
  400a26:	4a14      	ldr	r2, [pc, #80]	; (400a78 <system_init_flash+0x70>)
  400a28:	6013      	str	r3, [r2, #0]
			EFC1->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400a2a:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400a2e:	6013      	str	r3, [r2, #0]
  400a30:	4770      	bx	lr
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  400a32:	4b14      	ldr	r3, [pc, #80]	; (400a84 <system_init_flash+0x7c>)
  400a34:	4298      	cmp	r0, r3
  400a36:	d806      	bhi.n	400a46 <system_init_flash+0x3e>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400a38:	4b13      	ldr	r3, [pc, #76]	; (400a88 <system_init_flash+0x80>)
  400a3a:	4a0f      	ldr	r2, [pc, #60]	; (400a78 <system_init_flash+0x70>)
  400a3c:	6013      	str	r3, [r2, #0]
				EFC1->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400a3e:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400a42:	6013      	str	r3, [r2, #0]
  400a44:	4770      	bx	lr
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  400a46:	4b11      	ldr	r3, [pc, #68]	; (400a8c <system_init_flash+0x84>)
  400a48:	4298      	cmp	r0, r3
  400a4a:	d806      	bhi.n	400a5a <system_init_flash+0x52>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400a4c:	4b10      	ldr	r3, [pc, #64]	; (400a90 <system_init_flash+0x88>)
  400a4e:	4a0a      	ldr	r2, [pc, #40]	; (400a78 <system_init_flash+0x70>)
  400a50:	6013      	str	r3, [r2, #0]
					EFC1->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400a52:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400a56:	6013      	str	r3, [r2, #0]
  400a58:	4770      	bx	lr
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  400a5a:	4b0e      	ldr	r3, [pc, #56]	; (400a94 <system_init_flash+0x8c>)
  400a5c:	4298      	cmp	r0, r3
						EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  400a5e:	bf94      	ite	ls
  400a60:	f04f 2304 	movls.w	r3, #67109888	; 0x4000400
						EFC1->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
					} else {
						EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400a64:	4b0c      	ldrhi	r3, [pc, #48]	; (400a98 <system_init_flash+0x90>)
  400a66:	4a04      	ldr	r2, [pc, #16]	; (400a78 <system_init_flash+0x70>)
  400a68:	6013      	str	r3, [r2, #0]
						EFC1->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400a6a:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400a6e:	6013      	str	r3, [r2, #0]
  400a70:	4770      	bx	lr
  400a72:	bf00      	nop
  400a74:	01312cff 	.word	0x01312cff
  400a78:	400e0a00 	.word	0x400e0a00
  400a7c:	026259ff 	.word	0x026259ff
  400a80:	04000100 	.word	0x04000100
  400a84:	039386ff 	.word	0x039386ff
  400a88:	04000200 	.word	0x04000200
  400a8c:	04c4b3ff 	.word	0x04c4b3ff
  400a90:	04000300 	.word	0x04000300
  400a94:	05f5e0ff 	.word	0x05f5e0ff
  400a98:	04000500 	.word	0x04000500

00400a9c <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400a9c:	4b09      	ldr	r3, [pc, #36]	; (400ac4 <_sbrk+0x28>)
  400a9e:	681b      	ldr	r3, [r3, #0]
  400aa0:	b913      	cbnz	r3, 400aa8 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
  400aa2:	4a09      	ldr	r2, [pc, #36]	; (400ac8 <_sbrk+0x2c>)
  400aa4:	4b07      	ldr	r3, [pc, #28]	; (400ac4 <_sbrk+0x28>)
  400aa6:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
  400aa8:	4b06      	ldr	r3, [pc, #24]	; (400ac4 <_sbrk+0x28>)
  400aaa:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400aac:	181a      	adds	r2, r3, r0
  400aae:	4907      	ldr	r1, [pc, #28]	; (400acc <_sbrk+0x30>)
  400ab0:	4291      	cmp	r1, r2
  400ab2:	db04      	blt.n	400abe <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
  400ab4:	4610      	mov	r0, r2
  400ab6:	4a03      	ldr	r2, [pc, #12]	; (400ac4 <_sbrk+0x28>)
  400ab8:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400aba:	4618      	mov	r0, r3
  400abc:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
  400abe:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
  400ac2:	4770      	bx	lr
  400ac4:	200008fc 	.word	0x200008fc
  400ac8:	20003948 	.word	0x20003948
  400acc:	20027ffc 	.word	0x20027ffc

00400ad0 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  400ad0:	f04f 30ff 	mov.w	r0, #4294967295
  400ad4:	4770      	bx	lr
  400ad6:	bf00      	nop

00400ad8 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  400ad8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400adc:	604b      	str	r3, [r1, #4]

	return 0;
}
  400ade:	2000      	movs	r0, #0
  400ae0:	4770      	bx	lr
  400ae2:	bf00      	nop

00400ae4 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  400ae4:	2001      	movs	r0, #1
  400ae6:	4770      	bx	lr

00400ae8 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  400ae8:	2000      	movs	r0, #0
  400aea:	4770      	bx	lr

00400aec <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  400aec:	b5f0      	push	{r4, r5, r6, r7, lr}
  400aee:	b083      	sub	sp, #12
  400af0:	4605      	mov	r5, r0
  400af2:	460c      	mov	r4, r1
	uint32_t val = 0;
  400af4:	2300      	movs	r3, #0
  400af6:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400af8:	4b18      	ldr	r3, [pc, #96]	; (400b5c <usart_serial_getchar+0x70>)
  400afa:	4298      	cmp	r0, r3
  400afc:	d107      	bne.n	400b0e <usart_serial_getchar+0x22>
		while (uart_read((Uart*)p_usart, data));
  400afe:	461f      	mov	r7, r3
  400b00:	4e17      	ldr	r6, [pc, #92]	; (400b60 <usart_serial_getchar+0x74>)
  400b02:	4638      	mov	r0, r7
  400b04:	4621      	mov	r1, r4
  400b06:	47b0      	blx	r6
  400b08:	2800      	cmp	r0, #0
  400b0a:	d1fa      	bne.n	400b02 <usart_serial_getchar+0x16>
  400b0c:	e017      	b.n	400b3e <usart_serial_getchar+0x52>
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  400b0e:	4b15      	ldr	r3, [pc, #84]	; (400b64 <usart_serial_getchar+0x78>)
  400b10:	4298      	cmp	r0, r3
  400b12:	d107      	bne.n	400b24 <usart_serial_getchar+0x38>
		while (uart_read((Uart*)p_usart, data));
  400b14:	461e      	mov	r6, r3
  400b16:	4d12      	ldr	r5, [pc, #72]	; (400b60 <usart_serial_getchar+0x74>)
  400b18:	4630      	mov	r0, r6
  400b1a:	4621      	mov	r1, r4
  400b1c:	47a8      	blx	r5
  400b1e:	2800      	cmp	r0, #0
  400b20:	d1fa      	bne.n	400b18 <usart_serial_getchar+0x2c>
  400b22:	e018      	b.n	400b56 <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400b24:	4b10      	ldr	r3, [pc, #64]	; (400b68 <usart_serial_getchar+0x7c>)
  400b26:	4298      	cmp	r0, r3
  400b28:	d109      	bne.n	400b3e <usart_serial_getchar+0x52>
		while (usart_read(p_usart, &val));
  400b2a:	461e      	mov	r6, r3
  400b2c:	4d0f      	ldr	r5, [pc, #60]	; (400b6c <usart_serial_getchar+0x80>)
  400b2e:	4630      	mov	r0, r6
  400b30:	a901      	add	r1, sp, #4
  400b32:	47a8      	blx	r5
  400b34:	2800      	cmp	r0, #0
  400b36:	d1fa      	bne.n	400b2e <usart_serial_getchar+0x42>
		*data = (uint8_t)(val & 0xFF);
  400b38:	9b01      	ldr	r3, [sp, #4]
  400b3a:	7023      	strb	r3, [r4, #0]
  400b3c:	e00b      	b.n	400b56 <usart_serial_getchar+0x6a>
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400b3e:	4b0c      	ldr	r3, [pc, #48]	; (400b70 <usart_serial_getchar+0x84>)
  400b40:	429d      	cmp	r5, r3
  400b42:	d108      	bne.n	400b56 <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
  400b44:	461e      	mov	r6, r3
  400b46:	4d09      	ldr	r5, [pc, #36]	; (400b6c <usart_serial_getchar+0x80>)
  400b48:	4630      	mov	r0, r6
  400b4a:	a901      	add	r1, sp, #4
  400b4c:	47a8      	blx	r5
  400b4e:	2800      	cmp	r0, #0
  400b50:	d1fa      	bne.n	400b48 <usart_serial_getchar+0x5c>
		*data = (uint8_t)(val & 0xFF);
  400b52:	9b01      	ldr	r3, [sp, #4]
  400b54:	7023      	strb	r3, [r4, #0]
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  400b56:	b003      	add	sp, #12
  400b58:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400b5a:	bf00      	nop
  400b5c:	400e0600 	.word	0x400e0600
  400b60:	00400801 	.word	0x00400801
  400b64:	400e0800 	.word	0x400e0800
  400b68:	40024000 	.word	0x40024000
  400b6c:	00400829 	.word	0x00400829
  400b70:	40028000 	.word	0x40028000

00400b74 <usart_serial_putchar>:
 *   \retval 1  The character was written.
 *   \retval 0  The function timed out before the USART transmitter became
 * ready to send.
 */
static inline int usart_serial_putchar(usart_if p_usart, const uint8_t c)
{
  400b74:	b570      	push	{r4, r5, r6, lr}
  400b76:	460c      	mov	r4, r1
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400b78:	4b18      	ldr	r3, [pc, #96]	; (400bdc <usart_serial_putchar+0x68>)
  400b7a:	4298      	cmp	r0, r3
  400b7c:	d108      	bne.n	400b90 <usart_serial_putchar+0x1c>
		while (uart_write((Uart*)p_usart, c)!=0);
  400b7e:	461e      	mov	r6, r3
  400b80:	4d17      	ldr	r5, [pc, #92]	; (400be0 <usart_serial_putchar+0x6c>)
  400b82:	4630      	mov	r0, r6
  400b84:	4621      	mov	r1, r4
  400b86:	47a8      	blx	r5
  400b88:	2800      	cmp	r0, #0
  400b8a:	d1fa      	bne.n	400b82 <usart_serial_putchar+0xe>
		return 1;
  400b8c:	2001      	movs	r0, #1
  400b8e:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  400b90:	4b14      	ldr	r3, [pc, #80]	; (400be4 <usart_serial_putchar+0x70>)
  400b92:	4298      	cmp	r0, r3
  400b94:	d108      	bne.n	400ba8 <usart_serial_putchar+0x34>
		while (uart_write((Uart*)p_usart, c)!=0);
  400b96:	461e      	mov	r6, r3
  400b98:	4d11      	ldr	r5, [pc, #68]	; (400be0 <usart_serial_putchar+0x6c>)
  400b9a:	4630      	mov	r0, r6
  400b9c:	4621      	mov	r1, r4
  400b9e:	47a8      	blx	r5
  400ba0:	2800      	cmp	r0, #0
  400ba2:	d1fa      	bne.n	400b9a <usart_serial_putchar+0x26>
		return 1;
  400ba4:	2001      	movs	r0, #1
  400ba6:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400ba8:	4b0f      	ldr	r3, [pc, #60]	; (400be8 <usart_serial_putchar+0x74>)
  400baa:	4298      	cmp	r0, r3
  400bac:	d108      	bne.n	400bc0 <usart_serial_putchar+0x4c>
		while (usart_write(p_usart, c)!=0);
  400bae:	461e      	mov	r6, r3
  400bb0:	4d0e      	ldr	r5, [pc, #56]	; (400bec <usart_serial_putchar+0x78>)
  400bb2:	4630      	mov	r0, r6
  400bb4:	4621      	mov	r1, r4
  400bb6:	47a8      	blx	r5
  400bb8:	2800      	cmp	r0, #0
  400bba:	d1fa      	bne.n	400bb2 <usart_serial_putchar+0x3e>
		return 1;
  400bbc:	2001      	movs	r0, #1
  400bbe:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400bc0:	4b0b      	ldr	r3, [pc, #44]	; (400bf0 <usart_serial_putchar+0x7c>)
  400bc2:	4298      	cmp	r0, r3
  400bc4:	d108      	bne.n	400bd8 <usart_serial_putchar+0x64>
		while (usart_write(p_usart, c)!=0);
  400bc6:	461e      	mov	r6, r3
  400bc8:	4d08      	ldr	r5, [pc, #32]	; (400bec <usart_serial_putchar+0x78>)
  400bca:	4630      	mov	r0, r6
  400bcc:	4621      	mov	r1, r4
  400bce:	47a8      	blx	r5
  400bd0:	2800      	cmp	r0, #0
  400bd2:	d1fa      	bne.n	400bca <usart_serial_putchar+0x56>
		return 1;
  400bd4:	2001      	movs	r0, #1
  400bd6:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
	}
# endif
#endif /* ifdef USART */

	return 0;
  400bd8:	2000      	movs	r0, #0
}
  400bda:	bd70      	pop	{r4, r5, r6, pc}
  400bdc:	400e0600 	.word	0x400e0600
  400be0:	004007f1 	.word	0x004007f1
  400be4:	400e0800 	.word	0x400e0800
  400be8:	40024000 	.word	0x40024000
  400bec:	00400815 	.word	0x00400815
  400bf0:	40028000 	.word	0x40028000

00400bf4 <config_uart>:
#define IRQ_PRIOR_PIO    0

/************************************************************************/
/* Configura UART                                                       */
/************************************************************************/
void config_uart(void){
  400bf4:	b530      	push	{r4, r5, lr}
  400bf6:	b085      	sub	sp, #20
	
	/* configura pinos */
	gpio_configure_group(PINS_UART0_PIO, PINS_UART0, PINS_UART0_FLAGS);
  400bf8:	4816      	ldr	r0, [pc, #88]	; (400c54 <config_uart+0x60>)
  400bfa:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  400bfe:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  400c02:	4b15      	ldr	r3, [pc, #84]	; (400c58 <config_uart+0x64>)
  400c04:	4798      	blx	r3
  400c06:	2008      	movs	r0, #8
  400c08:	4d14      	ldr	r5, [pc, #80]	; (400c5c <config_uart+0x68>)
  400c0a:	47a8      	blx	r5
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  400c0c:	4c14      	ldr	r4, [pc, #80]	; (400c60 <config_uart+0x6c>)
  400c0e:	4b15      	ldr	r3, [pc, #84]	; (400c64 <config_uart+0x70>)
  400c10:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  400c12:	4a15      	ldr	r2, [pc, #84]	; (400c68 <config_uart+0x74>)
  400c14:	4b15      	ldr	r3, [pc, #84]	; (400c6c <config_uart+0x78>)
  400c16:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  400c18:	4a15      	ldr	r2, [pc, #84]	; (400c70 <config_uart+0x7c>)
  400c1a:	4b16      	ldr	r3, [pc, #88]	; (400c74 <config_uart+0x80>)
  400c1c:	601a      	str	r2, [r3, #0]
static inline void usart_serial_init(usart_if p_usart,
		usart_serial_options_t *opt)
{
#if ((!SAM4L) && (!SAMG55))
	sam_uart_opt_t uart_settings;
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  400c1e:	4b16      	ldr	r3, [pc, #88]	; (400c78 <config_uart+0x84>)
  400c20:	9301      	str	r3, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
  400c22:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  400c26:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
  400c28:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400c2c:	9303      	str	r3, [sp, #12]
  400c2e:	2008      	movs	r0, #8
  400c30:	47a8      	blx	r5
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
		sysclk_enable_peripheral_clock(ID_UART0);
		/* Configure UART */
		uart_init((Uart*)p_usart, &uart_settings);
  400c32:	4620      	mov	r0, r4
  400c34:	a901      	add	r1, sp, #4
  400c36:	4b11      	ldr	r3, [pc, #68]	; (400c7c <config_uart+0x88>)
  400c38:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  400c3a:	4d11      	ldr	r5, [pc, #68]	; (400c80 <config_uart+0x8c>)
  400c3c:	682b      	ldr	r3, [r5, #0]
  400c3e:	6898      	ldr	r0, [r3, #8]
  400c40:	2100      	movs	r1, #0
  400c42:	4c10      	ldr	r4, [pc, #64]	; (400c84 <config_uart+0x90>)
  400c44:	47a0      	blx	r4
	setbuf(stdin, NULL);
  400c46:	682b      	ldr	r3, [r5, #0]
  400c48:	6858      	ldr	r0, [r3, #4]
  400c4a:	2100      	movs	r1, #0
  400c4c:	47a0      	blx	r4
		.paritytype = UART_MR_PAR_NO,
		.stopbits   = 0
	};
	
	stdio_serial_init((Usart *)CONF_UART, &uart_serial_options);
}
  400c4e:	b005      	add	sp, #20
  400c50:	bd30      	pop	{r4, r5, pc}
  400c52:	bf00      	nop
  400c54:	400e0e00 	.word	0x400e0e00
  400c58:	004004ad 	.word	0x004004ad
  400c5c:	00400719 	.word	0x00400719
  400c60:	400e0600 	.word	0x400e0600
  400c64:	2000093c 	.word	0x2000093c
  400c68:	00400b75 	.word	0x00400b75
  400c6c:	20000938 	.word	0x20000938
  400c70:	00400aed 	.word	0x00400aed
  400c74:	20000934 	.word	0x20000934
  400c78:	07270e00 	.word	0x07270e00
  400c7c:	004007b9 	.word	0x004007b9
  400c80:	20000430 	.word	0x20000430
  400c84:	004018fd 	.word	0x004018fd

00400c88 <TC0_Handler>:
	tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
	
	tc_start(TC0,0);
}
void TC0_Handler(void)
{
  400c88:	b500      	push	{lr}
  400c8a:	b083      	sub	sp, #12
	volatile uint32_t ul_dummy;

	/* Clear status bit to acknowledge interrupt */
	ul_dummy = tc_get_status(TC0,0);
  400c8c:	481d      	ldr	r0, [pc, #116]	; (400d04 <TC0_Handler+0x7c>)
  400c8e:	2100      	movs	r1, #0
  400c90:	4b1d      	ldr	r3, [pc, #116]	; (400d08 <TC0_Handler+0x80>)
  400c92:	4798      	blx	r3
  400c94:	9001      	str	r0, [sp, #4]

	/* Avoid compiler warning */
	UNUSED(ul_dummy);
  400c96:	9b01      	ldr	r3, [sp, #4]
	
	/** Muda o estado do LED */
	
	if(pio_get_output_data_status(PORT_LED_BLUE , MASK_LED_BLUE) == 0)
  400c98:	481c      	ldr	r0, [pc, #112]	; (400d0c <TC0_Handler+0x84>)
  400c9a:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  400c9e:	4b1c      	ldr	r3, [pc, #112]	; (400d10 <TC0_Handler+0x88>)
  400ca0:	4798      	blx	r3
  400ca2:	b928      	cbnz	r0, 400cb0 <TC0_Handler+0x28>
	{
		pio_set(PORT_LED_BLUE, (1 << PIN_LED_BLUE));
  400ca4:	4819      	ldr	r0, [pc, #100]	; (400d0c <TC0_Handler+0x84>)
  400ca6:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  400caa:	4b1a      	ldr	r3, [pc, #104]	; (400d14 <TC0_Handler+0x8c>)
  400cac:	4798      	blx	r3
  400cae:	e004      	b.n	400cba <TC0_Handler+0x32>
	}
	else
	{
		pio_clear(PORT_LED_BLUE, (1 << PIN_LED_BLUE));
  400cb0:	4816      	ldr	r0, [pc, #88]	; (400d0c <TC0_Handler+0x84>)
  400cb2:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  400cb6:	4b18      	ldr	r3, [pc, #96]	; (400d18 <TC0_Handler+0x90>)
  400cb8:	4798      	blx	r3
	}
	
	if(pio_get_output_data_status(PORT_LED_GREEN , MASK_LED_GREEN) == 0)
  400cba:	4814      	ldr	r0, [pc, #80]	; (400d0c <TC0_Handler+0x84>)
  400cbc:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  400cc0:	4b13      	ldr	r3, [pc, #76]	; (400d10 <TC0_Handler+0x88>)
  400cc2:	4798      	blx	r3
  400cc4:	b928      	cbnz	r0, 400cd2 <TC0_Handler+0x4a>
	{
		pio_set(PORT_LED_GREEN, (1 << PIN_LED_GREEN));
  400cc6:	4811      	ldr	r0, [pc, #68]	; (400d0c <TC0_Handler+0x84>)
  400cc8:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  400ccc:	4b11      	ldr	r3, [pc, #68]	; (400d14 <TC0_Handler+0x8c>)
  400cce:	4798      	blx	r3
  400cd0:	e004      	b.n	400cdc <TC0_Handler+0x54>
	}
	else
	{
		pio_clear(PORT_LED_GREEN, (1 << PIN_LED_GREEN));
  400cd2:	480e      	ldr	r0, [pc, #56]	; (400d0c <TC0_Handler+0x84>)
  400cd4:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  400cd8:	4b0f      	ldr	r3, [pc, #60]	; (400d18 <TC0_Handler+0x90>)
  400cda:	4798      	blx	r3
	}
	
	
	if(pio_get_output_data_status(PORT_LED_RED , MASK_LED_RED) == 0)
  400cdc:	480f      	ldr	r0, [pc, #60]	; (400d1c <TC0_Handler+0x94>)
  400cde:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  400ce2:	4b0b      	ldr	r3, [pc, #44]	; (400d10 <TC0_Handler+0x88>)
  400ce4:	4798      	blx	r3
  400ce6:	b928      	cbnz	r0, 400cf4 <TC0_Handler+0x6c>
	{
		pio_set(PORT_LED_RED, (1 << PIN_LED_RED));
  400ce8:	480c      	ldr	r0, [pc, #48]	; (400d1c <TC0_Handler+0x94>)
  400cea:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  400cee:	4b09      	ldr	r3, [pc, #36]	; (400d14 <TC0_Handler+0x8c>)
  400cf0:	4798      	blx	r3
  400cf2:	e004      	b.n	400cfe <TC0_Handler+0x76>
	}
	else
	{
		pio_clear(PORT_LED_RED, (1 << PIN_LED_RED));
  400cf4:	4809      	ldr	r0, [pc, #36]	; (400d1c <TC0_Handler+0x94>)
  400cf6:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  400cfa:	4b07      	ldr	r3, [pc, #28]	; (400d18 <TC0_Handler+0x90>)
  400cfc:	4798      	blx	r3
	}
	
}
  400cfe:	b003      	add	sp, #12
  400d00:	f85d fb04 	ldr.w	pc, [sp], #4
  400d04:	40010000 	.word	0x40010000
  400d08:	004007b1 	.word	0x004007b1
  400d0c:	400e0e00 	.word	0x400e0e00
  400d10:	00400375 	.word	0x00400375
  400d14:	0040027d 	.word	0x0040027d
  400d18:	00400281 	.word	0x00400281
  400d1c:	400e1200 	.word	0x400e1200

00400d20 <main>:

/************************************************************************/
/* Main                                                                 */
/************************************************************************/
int main(void)
{
  400d20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400d24:	b085      	sub	sp, #20
	uint8_t uc_key;

	/* Initialize the system */
	sysclk_init();
  400d26:	4b7c      	ldr	r3, [pc, #496]	; (400f18 <main+0x1f8>)
  400d28:	4798      	blx	r3
	board_init();
  400d2a:	4b7c      	ldr	r3, [pc, #496]	; (400f1c <main+0x1fc>)
  400d2c:	4798      	blx	r3

	/* Configure LED 1 */
	pmc_enable_periph_clk(ID_LED_BLUE);
  400d2e:	200b      	movs	r0, #11
  400d30:	4d7b      	ldr	r5, [pc, #492]	; (400f20 <main+0x200>)
  400d32:	47a8      	blx	r5
	pio_set_output(PORT_LED_BLUE  , MASK_LED_BLUE	,1,0,0);
  400d34:	4e7b      	ldr	r6, [pc, #492]	; (400f24 <main+0x204>)
  400d36:	2400      	movs	r4, #0
  400d38:	9400      	str	r4, [sp, #0]
  400d3a:	4630      	mov	r0, r6
  400d3c:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  400d40:	2201      	movs	r2, #1
  400d42:	4623      	mov	r3, r4
  400d44:	4f78      	ldr	r7, [pc, #480]	; (400f28 <main+0x208>)
  400d46:	47b8      	blx	r7

	/* Initialize debug console */
	config_uart();
  400d48:	4b78      	ldr	r3, [pc, #480]	; (400f2c <main+0x20c>)
  400d4a:	4798      	blx	r3
	
	/* frase de boas vindas */
	puts(" ---------------------------- \n\r"
  400d4c:	4878      	ldr	r0, [pc, #480]	; (400f30 <main+0x210>)
  400d4e:	4f79      	ldr	r7, [pc, #484]	; (400f34 <main+0x214>)
  400d50:	47b8      	blx	r7
/************************************************************************/
/* Display Menu                                                         */
/************************************************************************/
static void display_menu(void)
{
	puts(" 1 : exibe novamente esse menu \n\r"
  400d52:	4879      	ldr	r0, [pc, #484]	; (400f38 <main+0x218>)
  400d54:	47b8      	blx	r7
}
static void configure_tc(void)
{
	uint32_t ul_sysclk = sysclk_get_cpu_hz();

	pmc_enable_periph_clk(ID_TC0);
  400d56:	2017      	movs	r0, #23
  400d58:	47a8      	blx	r5

	tc_init(TC0, 0, TC_CMR_CPCTRG | TC_CMR_TCCLKS_TIMER_CLOCK5);
  400d5a:	4f78      	ldr	r7, [pc, #480]	; (400f3c <main+0x21c>)
  400d5c:	4638      	mov	r0, r7
  400d5e:	4621      	mov	r1, r4
  400d60:	f244 0204 	movw	r2, #16388	; 0x4004
  400d64:	4b76      	ldr	r3, [pc, #472]	; (400f40 <main+0x220>)
  400d66:	4798      	blx	r3
	

	tc_write_rc(TC0, 0, 8192);
  400d68:	4638      	mov	r0, r7
  400d6a:	4621      	mov	r1, r4
  400d6c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  400d70:	4b74      	ldr	r3, [pc, #464]	; (400f44 <main+0x224>)
  400d72:	4798      	blx	r3
    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  400d74:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  400d78:	4b73      	ldr	r3, [pc, #460]	; (400f48 <main+0x228>)
  400d7a:	601a      	str	r2, [r3, #0]

	NVIC_EnableIRQ(ID_TC0);
	
	tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
  400d7c:	4638      	mov	r0, r7
  400d7e:	4621      	mov	r1, r4
  400d80:	2210      	movs	r2, #16
  400d82:	4b72      	ldr	r3, [pc, #456]	; (400f4c <main+0x22c>)
  400d84:	4798      	blx	r3
	
	tc_start(TC0,0);
  400d86:	4638      	mov	r0, r7
  400d88:	4621      	mov	r1, r4
  400d8a:	4b71      	ldr	r3, [pc, #452]	; (400f50 <main+0x230>)
  400d8c:	4798      	blx	r3
		 " ---------------------------- \n\r");
		 
	/* display main menu */
	display_menu();
	configure_tc();
	TC0_Handler();
  400d8e:	4b71      	ldr	r3, [pc, #452]	; (400f54 <main+0x234>)
  400d90:	4798      	blx	r3
	
	pio_clear(PORT_LED_RED, MASK_LED_RED);
  400d92:	4d71      	ldr	r5, [pc, #452]	; (400f58 <main+0x238>)
  400d94:	4628      	mov	r0, r5
  400d96:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  400d9a:	4b70      	ldr	r3, [pc, #448]	; (400f5c <main+0x23c>)
  400d9c:	4798      	blx	r3
	pio_set(PORT_LED_GREEN, MASK_LED_GREEN);
  400d9e:	4630      	mov	r0, r6
  400da0:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  400da4:	4b6e      	ldr	r3, [pc, #440]	; (400f60 <main+0x240>)
  400da6:	4798      	blx	r3
	
	PIOA->PIO_PER = (1 << PIN_LED_BLUE );
  400da8:	f44f 2800 	mov.w	r8, #524288	; 0x80000
  400dac:	f8c6 8000 	str.w	r8, [r6]
	PIOA->PIO_OER |=  (1 << PIN_LED_BLUE );
  400db0:	6933      	ldr	r3, [r6, #16]
  400db2:	ea43 0308 	orr.w	r3, r3, r8
  400db6:	6133      	str	r3, [r6, #16]
	
	
	PMC->PMC_PCER0 |= ID_PIOC;
  400db8:	4a6a      	ldr	r2, [pc, #424]	; (400f64 <main+0x244>)
  400dba:	6913      	ldr	r3, [r2, #16]
  400dbc:	f043 030d 	orr.w	r3, r3, #13
  400dc0:	6113      	str	r3, [r2, #16]
	PIOC->PIO_PER |= (1 << PIN_LED_RED );
  400dc2:	682b      	ldr	r3, [r5, #0]
  400dc4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  400dc8:	602b      	str	r3, [r5, #0]
	PIOC->PIO_OER |=  (1 << PIN_LED_RED );
  400dca:	692b      	ldr	r3, [r5, #16]
  400dcc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  400dd0:	612b      	str	r3, [r5, #16]
	
	
				tc_stop(TC0, 0);
  400dd2:	4638      	mov	r0, r7
  400dd4:	4621      	mov	r1, r4
  400dd6:	4b64      	ldr	r3, [pc, #400]	; (400f68 <main+0x248>)
  400dd8:	4798      	blx	r3
	PIOA->PIO_SODR = (1 << PIN_LED_BLUE );
  400dda:	f8c6 8030 	str.w	r8, [r6, #48]	; 0x30
	PIOC->PIO_CODR = (1 << PIN_LED_RED );
  400dde:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
  400de2:	636b      	str	r3, [r5, #52]	; 0x34
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
  400de4:	f5a5 6540 	sub.w	r5, r5, #3072	; 0xc00
				tc_write_rc(TC0, 0, tc_read_rc(TC0,0) * 0.5);
				puts("aumentando \n\r");
				break;
			case '9' :
				
				tc_write_rc(TC0, 0, tc_read_rc(TC0,0) * 1.4);
  400de8:	f20f 1924 	addw	r9, pc, #292	; 0x124
  400dec:	e9d9 8900 	ldrd	r8, r9, [r9]
				
				puts("Led RED ON \n\r");
			break;
			case '7' :
				tc_stop(TC0, 0);
				PIOC->PIO_CODR = (1 << PIN_LED_RED );
  400df0:	f8df b164 	ldr.w	fp, [pc, #356]	; 400f58 <main+0x238>
				puts("Led GREEN ON \n\r");
				break;
			case '5' :
				tc_stop(TC0, 0);

				pio_set(PORT_LED_GREEN, MASK_LED_GREEN);
  400df4:	46b2      	mov	sl, r6
  400df6:	4c5d      	ldr	r4, [pc, #372]	; (400f6c <main+0x24c>)
  400df8:	4628      	mov	r0, r5
  400dfa:	f10d 010f 	add.w	r1, sp, #15
  400dfe:	47a0      	blx	r4
  400e00:	2800      	cmp	r0, #0
  400e02:	d1f9      	bne.n	400df8 <main+0xd8>
	PIOA->PIO_SODR = (1 << PIN_LED_BLUE );
	PIOC->PIO_CODR = (1 << PIN_LED_RED );
	
	while (1) {
		usart_serial_getchar((Usart *)CONSOLE_UART, &uc_key);	
		switch (uc_key) {
  400e04:	f89d 100f 	ldrb.w	r1, [sp, #15]
  400e08:	f1a1 0331 	sub.w	r3, r1, #49	; 0x31
  400e0c:	2b08      	cmp	r3, #8
  400e0e:	d87a      	bhi.n	400f06 <main+0x1e6>
  400e10:	e8df f003 	tbb	[pc, r3]
  400e14:	1b150905 	.word	0x1b150905
  400e18:	4d413528 	.word	0x4d413528
  400e1c:	63          	.byte	0x63
  400e1d:	00          	.byte	0x00
/************************************************************************/
/* Display Menu                                                         */
/************************************************************************/
static void display_menu(void)
{
	puts(" 1 : exibe novamente esse menu \n\r"
  400e1e:	4846      	ldr	r0, [pc, #280]	; (400f38 <main+0x218>)
  400e20:	4b44      	ldr	r3, [pc, #272]	; (400f34 <main+0x214>)
  400e22:	4798      	blx	r3
  400e24:	e7e7      	b.n	400df6 <main+0xd6>
		switch (uc_key) {
			case '1':
				display_menu();
				break;
			case '2':
				tc_start(TC0,0);
  400e26:	4845      	ldr	r0, [pc, #276]	; (400f3c <main+0x21c>)
  400e28:	2100      	movs	r1, #0
  400e2a:	4b49      	ldr	r3, [pc, #292]	; (400f50 <main+0x230>)
  400e2c:	4798      	blx	r3
				PIOA->PIO_CODR = (1 << PIN_LED_BLUE );
  400e2e:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  400e32:	f8ca 3034 	str.w	r3, [sl, #52]	; 0x34
				
				puts("Led BLUE ON \n\r");
  400e36:	484e      	ldr	r0, [pc, #312]	; (400f70 <main+0x250>)
  400e38:	4b3e      	ldr	r3, [pc, #248]	; (400f34 <main+0x214>)
  400e3a:	4798      	blx	r3
				break;
  400e3c:	e7db      	b.n	400df6 <main+0xd6>
				PIOA->PIO_SODR = (1 << PIN_LED_BLUE );
				puts("Led BLUE OFF \n\r");
			
				
		*/
			pio_clear(PORT_LED_BLUE, (1 << PIN_LED_BLUE));
  400e3e:	4650      	mov	r0, sl
  400e40:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  400e44:	4b45      	ldr	r3, [pc, #276]	; (400f5c <main+0x23c>)
  400e46:	4798      	blx	r3
				break;
  400e48:	e7d5      	b.n	400df6 <main+0xd6>
			case '4':
				tc_start(TC0,0);
  400e4a:	483c      	ldr	r0, [pc, #240]	; (400f3c <main+0x21c>)
  400e4c:	2100      	movs	r1, #0
  400e4e:	4b40      	ldr	r3, [pc, #256]	; (400f50 <main+0x230>)
  400e50:	4798      	blx	r3
				pio_clear(PORT_LED_GREEN, MASK_LED_GREEN);
  400e52:	4650      	mov	r0, sl
  400e54:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  400e58:	4b40      	ldr	r3, [pc, #256]	; (400f5c <main+0x23c>)
  400e5a:	4798      	blx	r3
				puts("Led GREEN ON \n\r");
  400e5c:	4845      	ldr	r0, [pc, #276]	; (400f74 <main+0x254>)
  400e5e:	4b35      	ldr	r3, [pc, #212]	; (400f34 <main+0x214>)
  400e60:	4798      	blx	r3
				break;
  400e62:	e7c8      	b.n	400df6 <main+0xd6>
			case '5' :
				tc_stop(TC0, 0);
  400e64:	4835      	ldr	r0, [pc, #212]	; (400f3c <main+0x21c>)
  400e66:	2100      	movs	r1, #0
  400e68:	4b3f      	ldr	r3, [pc, #252]	; (400f68 <main+0x248>)
  400e6a:	4798      	blx	r3

				pio_set(PORT_LED_GREEN, MASK_LED_GREEN);
  400e6c:	4650      	mov	r0, sl
  400e6e:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  400e72:	4b3b      	ldr	r3, [pc, #236]	; (400f60 <main+0x240>)
  400e74:	4798      	blx	r3
				puts("Led GREEN OFF \n\r");
  400e76:	4840      	ldr	r0, [pc, #256]	; (400f78 <main+0x258>)
  400e78:	4b2e      	ldr	r3, [pc, #184]	; (400f34 <main+0x214>)
  400e7a:	4798      	blx	r3
				break;
  400e7c:	e7bb      	b.n	400df6 <main+0xd6>
			case '6':
					tc_start(TC0,0);
  400e7e:	482f      	ldr	r0, [pc, #188]	; (400f3c <main+0x21c>)
  400e80:	2100      	movs	r1, #0
  400e82:	4b33      	ldr	r3, [pc, #204]	; (400f50 <main+0x230>)
  400e84:	4798      	blx	r3
					PIOC->PIO_SODR = (1 << PIN_LED_RED );
  400e86:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
  400e8a:	f8cb 3030 	str.w	r3, [fp, #48]	; 0x30
				
				puts("Led RED ON \n\r");
  400e8e:	483b      	ldr	r0, [pc, #236]	; (400f7c <main+0x25c>)
  400e90:	4b28      	ldr	r3, [pc, #160]	; (400f34 <main+0x214>)
  400e92:	4798      	blx	r3
			break;
  400e94:	e7af      	b.n	400df6 <main+0xd6>
			case '7' :
				tc_stop(TC0, 0);
  400e96:	4829      	ldr	r0, [pc, #164]	; (400f3c <main+0x21c>)
  400e98:	2100      	movs	r1, #0
  400e9a:	4b33      	ldr	r3, [pc, #204]	; (400f68 <main+0x248>)
  400e9c:	4798      	blx	r3
				PIOC->PIO_CODR = (1 << PIN_LED_RED );
  400e9e:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
  400ea2:	f8cb 3034 	str.w	r3, [fp, #52]	; 0x34
				puts("Led RED OFF \n\r");
  400ea6:	4836      	ldr	r0, [pc, #216]	; (400f80 <main+0x260>)
  400ea8:	4b22      	ldr	r3, [pc, #136]	; (400f34 <main+0x214>)
  400eaa:	4798      	blx	r3
			break;
  400eac:	e7a3      	b.n	400df6 <main+0xd6>
			case '8' :
				
				tc_write_rc(TC0, 0, tc_read_rc(TC0,0) * 0.5);
  400eae:	4c23      	ldr	r4, [pc, #140]	; (400f3c <main+0x21c>)
  400eb0:	4620      	mov	r0, r4
  400eb2:	2100      	movs	r1, #0
  400eb4:	4b33      	ldr	r3, [pc, #204]	; (400f84 <main+0x264>)
  400eb6:	4798      	blx	r3
  400eb8:	4b33      	ldr	r3, [pc, #204]	; (400f88 <main+0x268>)
  400eba:	4798      	blx	r3
  400ebc:	2200      	movs	r2, #0
  400ebe:	4b33      	ldr	r3, [pc, #204]	; (400f8c <main+0x26c>)
  400ec0:	4e33      	ldr	r6, [pc, #204]	; (400f90 <main+0x270>)
  400ec2:	47b0      	blx	r6
  400ec4:	4b33      	ldr	r3, [pc, #204]	; (400f94 <main+0x274>)
  400ec6:	4798      	blx	r3
  400ec8:	4602      	mov	r2, r0
  400eca:	4620      	mov	r0, r4
  400ecc:	2100      	movs	r1, #0
  400ece:	4b1d      	ldr	r3, [pc, #116]	; (400f44 <main+0x224>)
  400ed0:	4798      	blx	r3
				puts("aumentando \n\r");
  400ed2:	4831      	ldr	r0, [pc, #196]	; (400f98 <main+0x278>)
  400ed4:	4b17      	ldr	r3, [pc, #92]	; (400f34 <main+0x214>)
  400ed6:	4798      	blx	r3
				break;
  400ed8:	e78d      	b.n	400df6 <main+0xd6>
			case '9' :
				
				tc_write_rc(TC0, 0, tc_read_rc(TC0,0) * 1.4);
  400eda:	4c18      	ldr	r4, [pc, #96]	; (400f3c <main+0x21c>)
  400edc:	4620      	mov	r0, r4
  400ede:	2100      	movs	r1, #0
  400ee0:	4b28      	ldr	r3, [pc, #160]	; (400f84 <main+0x264>)
  400ee2:	4798      	blx	r3
  400ee4:	4b28      	ldr	r3, [pc, #160]	; (400f88 <main+0x268>)
  400ee6:	4798      	blx	r3
  400ee8:	4642      	mov	r2, r8
  400eea:	464b      	mov	r3, r9
  400eec:	4e28      	ldr	r6, [pc, #160]	; (400f90 <main+0x270>)
  400eee:	47b0      	blx	r6
  400ef0:	4b28      	ldr	r3, [pc, #160]	; (400f94 <main+0x274>)
  400ef2:	4798      	blx	r3
  400ef4:	4602      	mov	r2, r0
  400ef6:	4620      	mov	r0, r4
  400ef8:	2100      	movs	r1, #0
  400efa:	4b12      	ldr	r3, [pc, #72]	; (400f44 <main+0x224>)
  400efc:	4798      	blx	r3
				puts("diminuindo \n\r");
  400efe:	4827      	ldr	r0, [pc, #156]	; (400f9c <main+0x27c>)
  400f00:	4b0c      	ldr	r3, [pc, #48]	; (400f34 <main+0x214>)
  400f02:	4798      	blx	r3
				break;				
  400f04:	e777      	b.n	400df6 <main+0xd6>
			default:
				printf("Opcao nao definida: %d \n\r", uc_key);
  400f06:	4826      	ldr	r0, [pc, #152]	; (400fa0 <main+0x280>)
  400f08:	4b26      	ldr	r3, [pc, #152]	; (400fa4 <main+0x284>)
  400f0a:	4798      	blx	r3
  400f0c:	e773      	b.n	400df6 <main+0xd6>
  400f0e:	bf00      	nop
  400f10:	66666666 	.word	0x66666666
  400f14:	3ff66666 	.word	0x3ff66666
  400f18:	00400129 	.word	0x00400129
  400f1c:	00400219 	.word	0x00400219
  400f20:	00400719 	.word	0x00400719
  400f24:	400e0e00 	.word	0x400e0e00
  400f28:	0040034d 	.word	0x0040034d
  400f2c:	00400bf5 	.word	0x00400bf5
  400f30:	004047a4 	.word	0x004047a4
  400f34:	004018ed 	.word	0x004018ed
  400f38:	004047fc 	.word	0x004047fc
  400f3c:	40010000 	.word	0x40010000
  400f40:	0040076d 	.word	0x0040076d
  400f44:	004007a1 	.word	0x004007a1
  400f48:	e000e100 	.word	0xe000e100
  400f4c:	004007a9 	.word	0x004007a9
  400f50:	00400789 	.word	0x00400789
  400f54:	00400c89 	.word	0x00400c89
  400f58:	400e1200 	.word	0x400e1200
  400f5c:	00400281 	.word	0x00400281
  400f60:	0040027d 	.word	0x0040027d
  400f64:	400e0400 	.word	0x400e0400
  400f68:	00400791 	.word	0x00400791
  400f6c:	00400801 	.word	0x00400801
  400f70:	00404848 	.word	0x00404848
  400f74:	00404858 	.word	0x00404858
  400f78:	00404868 	.word	0x00404868
  400f7c:	0040487c 	.word	0x0040487c
  400f80:	0040488c 	.word	0x0040488c
  400f84:	00400799 	.word	0x00400799
  400f88:	0040122d 	.word	0x0040122d
  400f8c:	3fe00000 	.word	0x3fe00000
  400f90:	00401319 	.word	0x00401319
  400f94:	0040173d 	.word	0x0040173d
  400f98:	0040489c 	.word	0x0040489c
  400f9c:	004048ac 	.word	0x004048ac
  400fa0:	004048bc 	.word	0x004048bc
  400fa4:	004017cd 	.word	0x004017cd

00400fa8 <__aeabi_drsub>:
  400fa8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  400fac:	e002      	b.n	400fb4 <__adddf3>
  400fae:	bf00      	nop

00400fb0 <__aeabi_dsub>:
  400fb0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00400fb4 <__adddf3>:
  400fb4:	b530      	push	{r4, r5, lr}
  400fb6:	ea4f 0441 	mov.w	r4, r1, lsl #1
  400fba:	ea4f 0543 	mov.w	r5, r3, lsl #1
  400fbe:	ea94 0f05 	teq	r4, r5
  400fc2:	bf08      	it	eq
  400fc4:	ea90 0f02 	teqeq	r0, r2
  400fc8:	bf1f      	itttt	ne
  400fca:	ea54 0c00 	orrsne.w	ip, r4, r0
  400fce:	ea55 0c02 	orrsne.w	ip, r5, r2
  400fd2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  400fd6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  400fda:	f000 80e2 	beq.w	4011a2 <__adddf3+0x1ee>
  400fde:	ea4f 5454 	mov.w	r4, r4, lsr #21
  400fe2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  400fe6:	bfb8      	it	lt
  400fe8:	426d      	neglt	r5, r5
  400fea:	dd0c      	ble.n	401006 <__adddf3+0x52>
  400fec:	442c      	add	r4, r5
  400fee:	ea80 0202 	eor.w	r2, r0, r2
  400ff2:	ea81 0303 	eor.w	r3, r1, r3
  400ff6:	ea82 0000 	eor.w	r0, r2, r0
  400ffa:	ea83 0101 	eor.w	r1, r3, r1
  400ffe:	ea80 0202 	eor.w	r2, r0, r2
  401002:	ea81 0303 	eor.w	r3, r1, r3
  401006:	2d36      	cmp	r5, #54	; 0x36
  401008:	bf88      	it	hi
  40100a:	bd30      	pophi	{r4, r5, pc}
  40100c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  401010:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401014:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  401018:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  40101c:	d002      	beq.n	401024 <__adddf3+0x70>
  40101e:	4240      	negs	r0, r0
  401020:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401024:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  401028:	ea4f 3303 	mov.w	r3, r3, lsl #12
  40102c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  401030:	d002      	beq.n	401038 <__adddf3+0x84>
  401032:	4252      	negs	r2, r2
  401034:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  401038:	ea94 0f05 	teq	r4, r5
  40103c:	f000 80a7 	beq.w	40118e <__adddf3+0x1da>
  401040:	f1a4 0401 	sub.w	r4, r4, #1
  401044:	f1d5 0e20 	rsbs	lr, r5, #32
  401048:	db0d      	blt.n	401066 <__adddf3+0xb2>
  40104a:	fa02 fc0e 	lsl.w	ip, r2, lr
  40104e:	fa22 f205 	lsr.w	r2, r2, r5
  401052:	1880      	adds	r0, r0, r2
  401054:	f141 0100 	adc.w	r1, r1, #0
  401058:	fa03 f20e 	lsl.w	r2, r3, lr
  40105c:	1880      	adds	r0, r0, r2
  40105e:	fa43 f305 	asr.w	r3, r3, r5
  401062:	4159      	adcs	r1, r3
  401064:	e00e      	b.n	401084 <__adddf3+0xd0>
  401066:	f1a5 0520 	sub.w	r5, r5, #32
  40106a:	f10e 0e20 	add.w	lr, lr, #32
  40106e:	2a01      	cmp	r2, #1
  401070:	fa03 fc0e 	lsl.w	ip, r3, lr
  401074:	bf28      	it	cs
  401076:	f04c 0c02 	orrcs.w	ip, ip, #2
  40107a:	fa43 f305 	asr.w	r3, r3, r5
  40107e:	18c0      	adds	r0, r0, r3
  401080:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  401084:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401088:	d507      	bpl.n	40109a <__adddf3+0xe6>
  40108a:	f04f 0e00 	mov.w	lr, #0
  40108e:	f1dc 0c00 	rsbs	ip, ip, #0
  401092:	eb7e 0000 	sbcs.w	r0, lr, r0
  401096:	eb6e 0101 	sbc.w	r1, lr, r1
  40109a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  40109e:	d31b      	bcc.n	4010d8 <__adddf3+0x124>
  4010a0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  4010a4:	d30c      	bcc.n	4010c0 <__adddf3+0x10c>
  4010a6:	0849      	lsrs	r1, r1, #1
  4010a8:	ea5f 0030 	movs.w	r0, r0, rrx
  4010ac:	ea4f 0c3c 	mov.w	ip, ip, rrx
  4010b0:	f104 0401 	add.w	r4, r4, #1
  4010b4:	ea4f 5244 	mov.w	r2, r4, lsl #21
  4010b8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  4010bc:	f080 809a 	bcs.w	4011f4 <__adddf3+0x240>
  4010c0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4010c4:	bf08      	it	eq
  4010c6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4010ca:	f150 0000 	adcs.w	r0, r0, #0
  4010ce:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4010d2:	ea41 0105 	orr.w	r1, r1, r5
  4010d6:	bd30      	pop	{r4, r5, pc}
  4010d8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  4010dc:	4140      	adcs	r0, r0
  4010de:	eb41 0101 	adc.w	r1, r1, r1
  4010e2:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4010e6:	f1a4 0401 	sub.w	r4, r4, #1
  4010ea:	d1e9      	bne.n	4010c0 <__adddf3+0x10c>
  4010ec:	f091 0f00 	teq	r1, #0
  4010f0:	bf04      	itt	eq
  4010f2:	4601      	moveq	r1, r0
  4010f4:	2000      	moveq	r0, #0
  4010f6:	fab1 f381 	clz	r3, r1
  4010fa:	bf08      	it	eq
  4010fc:	3320      	addeq	r3, #32
  4010fe:	f1a3 030b 	sub.w	r3, r3, #11
  401102:	f1b3 0220 	subs.w	r2, r3, #32
  401106:	da0c      	bge.n	401122 <__adddf3+0x16e>
  401108:	320c      	adds	r2, #12
  40110a:	dd08      	ble.n	40111e <__adddf3+0x16a>
  40110c:	f102 0c14 	add.w	ip, r2, #20
  401110:	f1c2 020c 	rsb	r2, r2, #12
  401114:	fa01 f00c 	lsl.w	r0, r1, ip
  401118:	fa21 f102 	lsr.w	r1, r1, r2
  40111c:	e00c      	b.n	401138 <__adddf3+0x184>
  40111e:	f102 0214 	add.w	r2, r2, #20
  401122:	bfd8      	it	le
  401124:	f1c2 0c20 	rsble	ip, r2, #32
  401128:	fa01 f102 	lsl.w	r1, r1, r2
  40112c:	fa20 fc0c 	lsr.w	ip, r0, ip
  401130:	bfdc      	itt	le
  401132:	ea41 010c 	orrle.w	r1, r1, ip
  401136:	4090      	lslle	r0, r2
  401138:	1ae4      	subs	r4, r4, r3
  40113a:	bfa2      	ittt	ge
  40113c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401140:	4329      	orrge	r1, r5
  401142:	bd30      	popge	{r4, r5, pc}
  401144:	ea6f 0404 	mvn.w	r4, r4
  401148:	3c1f      	subs	r4, #31
  40114a:	da1c      	bge.n	401186 <__adddf3+0x1d2>
  40114c:	340c      	adds	r4, #12
  40114e:	dc0e      	bgt.n	40116e <__adddf3+0x1ba>
  401150:	f104 0414 	add.w	r4, r4, #20
  401154:	f1c4 0220 	rsb	r2, r4, #32
  401158:	fa20 f004 	lsr.w	r0, r0, r4
  40115c:	fa01 f302 	lsl.w	r3, r1, r2
  401160:	ea40 0003 	orr.w	r0, r0, r3
  401164:	fa21 f304 	lsr.w	r3, r1, r4
  401168:	ea45 0103 	orr.w	r1, r5, r3
  40116c:	bd30      	pop	{r4, r5, pc}
  40116e:	f1c4 040c 	rsb	r4, r4, #12
  401172:	f1c4 0220 	rsb	r2, r4, #32
  401176:	fa20 f002 	lsr.w	r0, r0, r2
  40117a:	fa01 f304 	lsl.w	r3, r1, r4
  40117e:	ea40 0003 	orr.w	r0, r0, r3
  401182:	4629      	mov	r1, r5
  401184:	bd30      	pop	{r4, r5, pc}
  401186:	fa21 f004 	lsr.w	r0, r1, r4
  40118a:	4629      	mov	r1, r5
  40118c:	bd30      	pop	{r4, r5, pc}
  40118e:	f094 0f00 	teq	r4, #0
  401192:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  401196:	bf06      	itte	eq
  401198:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  40119c:	3401      	addeq	r4, #1
  40119e:	3d01      	subne	r5, #1
  4011a0:	e74e      	b.n	401040 <__adddf3+0x8c>
  4011a2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4011a6:	bf18      	it	ne
  4011a8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4011ac:	d029      	beq.n	401202 <__adddf3+0x24e>
  4011ae:	ea94 0f05 	teq	r4, r5
  4011b2:	bf08      	it	eq
  4011b4:	ea90 0f02 	teqeq	r0, r2
  4011b8:	d005      	beq.n	4011c6 <__adddf3+0x212>
  4011ba:	ea54 0c00 	orrs.w	ip, r4, r0
  4011be:	bf04      	itt	eq
  4011c0:	4619      	moveq	r1, r3
  4011c2:	4610      	moveq	r0, r2
  4011c4:	bd30      	pop	{r4, r5, pc}
  4011c6:	ea91 0f03 	teq	r1, r3
  4011ca:	bf1e      	ittt	ne
  4011cc:	2100      	movne	r1, #0
  4011ce:	2000      	movne	r0, #0
  4011d0:	bd30      	popne	{r4, r5, pc}
  4011d2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  4011d6:	d105      	bne.n	4011e4 <__adddf3+0x230>
  4011d8:	0040      	lsls	r0, r0, #1
  4011da:	4149      	adcs	r1, r1
  4011dc:	bf28      	it	cs
  4011de:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  4011e2:	bd30      	pop	{r4, r5, pc}
  4011e4:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  4011e8:	bf3c      	itt	cc
  4011ea:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  4011ee:	bd30      	popcc	{r4, r5, pc}
  4011f0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4011f4:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  4011f8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4011fc:	f04f 0000 	mov.w	r0, #0
  401200:	bd30      	pop	{r4, r5, pc}
  401202:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401206:	bf1a      	itte	ne
  401208:	4619      	movne	r1, r3
  40120a:	4610      	movne	r0, r2
  40120c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  401210:	bf1c      	itt	ne
  401212:	460b      	movne	r3, r1
  401214:	4602      	movne	r2, r0
  401216:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40121a:	bf06      	itte	eq
  40121c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  401220:	ea91 0f03 	teqeq	r1, r3
  401224:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  401228:	bd30      	pop	{r4, r5, pc}
  40122a:	bf00      	nop

0040122c <__aeabi_ui2d>:
  40122c:	f090 0f00 	teq	r0, #0
  401230:	bf04      	itt	eq
  401232:	2100      	moveq	r1, #0
  401234:	4770      	bxeq	lr
  401236:	b530      	push	{r4, r5, lr}
  401238:	f44f 6480 	mov.w	r4, #1024	; 0x400
  40123c:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401240:	f04f 0500 	mov.w	r5, #0
  401244:	f04f 0100 	mov.w	r1, #0
  401248:	e750      	b.n	4010ec <__adddf3+0x138>
  40124a:	bf00      	nop

0040124c <__aeabi_i2d>:
  40124c:	f090 0f00 	teq	r0, #0
  401250:	bf04      	itt	eq
  401252:	2100      	moveq	r1, #0
  401254:	4770      	bxeq	lr
  401256:	b530      	push	{r4, r5, lr}
  401258:	f44f 6480 	mov.w	r4, #1024	; 0x400
  40125c:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401260:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  401264:	bf48      	it	mi
  401266:	4240      	negmi	r0, r0
  401268:	f04f 0100 	mov.w	r1, #0
  40126c:	e73e      	b.n	4010ec <__adddf3+0x138>
  40126e:	bf00      	nop

00401270 <__aeabi_f2d>:
  401270:	0042      	lsls	r2, r0, #1
  401272:	ea4f 01e2 	mov.w	r1, r2, asr #3
  401276:	ea4f 0131 	mov.w	r1, r1, rrx
  40127a:	ea4f 7002 	mov.w	r0, r2, lsl #28
  40127e:	bf1f      	itttt	ne
  401280:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  401284:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401288:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  40128c:	4770      	bxne	lr
  40128e:	f092 0f00 	teq	r2, #0
  401292:	bf14      	ite	ne
  401294:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401298:	4770      	bxeq	lr
  40129a:	b530      	push	{r4, r5, lr}
  40129c:	f44f 7460 	mov.w	r4, #896	; 0x380
  4012a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4012a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  4012a8:	e720      	b.n	4010ec <__adddf3+0x138>
  4012aa:	bf00      	nop

004012ac <__aeabi_ul2d>:
  4012ac:	ea50 0201 	orrs.w	r2, r0, r1
  4012b0:	bf08      	it	eq
  4012b2:	4770      	bxeq	lr
  4012b4:	b530      	push	{r4, r5, lr}
  4012b6:	f04f 0500 	mov.w	r5, #0
  4012ba:	e00a      	b.n	4012d2 <__aeabi_l2d+0x16>

004012bc <__aeabi_l2d>:
  4012bc:	ea50 0201 	orrs.w	r2, r0, r1
  4012c0:	bf08      	it	eq
  4012c2:	4770      	bxeq	lr
  4012c4:	b530      	push	{r4, r5, lr}
  4012c6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  4012ca:	d502      	bpl.n	4012d2 <__aeabi_l2d+0x16>
  4012cc:	4240      	negs	r0, r0
  4012ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4012d2:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4012d6:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4012da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  4012de:	f43f aedc 	beq.w	40109a <__adddf3+0xe6>
  4012e2:	f04f 0203 	mov.w	r2, #3
  4012e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4012ea:	bf18      	it	ne
  4012ec:	3203      	addne	r2, #3
  4012ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4012f2:	bf18      	it	ne
  4012f4:	3203      	addne	r2, #3
  4012f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  4012fa:	f1c2 0320 	rsb	r3, r2, #32
  4012fe:	fa00 fc03 	lsl.w	ip, r0, r3
  401302:	fa20 f002 	lsr.w	r0, r0, r2
  401306:	fa01 fe03 	lsl.w	lr, r1, r3
  40130a:	ea40 000e 	orr.w	r0, r0, lr
  40130e:	fa21 f102 	lsr.w	r1, r1, r2
  401312:	4414      	add	r4, r2
  401314:	e6c1      	b.n	40109a <__adddf3+0xe6>
  401316:	bf00      	nop

00401318 <__aeabi_dmul>:
  401318:	b570      	push	{r4, r5, r6, lr}
  40131a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40131e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401322:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401326:	bf1d      	ittte	ne
  401328:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  40132c:	ea94 0f0c 	teqne	r4, ip
  401330:	ea95 0f0c 	teqne	r5, ip
  401334:	f000 f8de 	bleq	4014f4 <__aeabi_dmul+0x1dc>
  401338:	442c      	add	r4, r5
  40133a:	ea81 0603 	eor.w	r6, r1, r3
  40133e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  401342:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  401346:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  40134a:	bf18      	it	ne
  40134c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  401350:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401354:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  401358:	d038      	beq.n	4013cc <__aeabi_dmul+0xb4>
  40135a:	fba0 ce02 	umull	ip, lr, r0, r2
  40135e:	f04f 0500 	mov.w	r5, #0
  401362:	fbe1 e502 	umlal	lr, r5, r1, r2
  401366:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  40136a:	fbe0 e503 	umlal	lr, r5, r0, r3
  40136e:	f04f 0600 	mov.w	r6, #0
  401372:	fbe1 5603 	umlal	r5, r6, r1, r3
  401376:	f09c 0f00 	teq	ip, #0
  40137a:	bf18      	it	ne
  40137c:	f04e 0e01 	orrne.w	lr, lr, #1
  401380:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  401384:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  401388:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  40138c:	d204      	bcs.n	401398 <__aeabi_dmul+0x80>
  40138e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  401392:	416d      	adcs	r5, r5
  401394:	eb46 0606 	adc.w	r6, r6, r6
  401398:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  40139c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  4013a0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  4013a4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  4013a8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  4013ac:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4013b0:	bf88      	it	hi
  4013b2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4013b6:	d81e      	bhi.n	4013f6 <__aeabi_dmul+0xde>
  4013b8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  4013bc:	bf08      	it	eq
  4013be:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  4013c2:	f150 0000 	adcs.w	r0, r0, #0
  4013c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4013ca:	bd70      	pop	{r4, r5, r6, pc}
  4013cc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  4013d0:	ea46 0101 	orr.w	r1, r6, r1
  4013d4:	ea40 0002 	orr.w	r0, r0, r2
  4013d8:	ea81 0103 	eor.w	r1, r1, r3
  4013dc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  4013e0:	bfc2      	ittt	gt
  4013e2:	ebd4 050c 	rsbsgt	r5, r4, ip
  4013e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4013ea:	bd70      	popgt	{r4, r5, r6, pc}
  4013ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4013f0:	f04f 0e00 	mov.w	lr, #0
  4013f4:	3c01      	subs	r4, #1
  4013f6:	f300 80ab 	bgt.w	401550 <__aeabi_dmul+0x238>
  4013fa:	f114 0f36 	cmn.w	r4, #54	; 0x36
  4013fe:	bfde      	ittt	le
  401400:	2000      	movle	r0, #0
  401402:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  401406:	bd70      	pople	{r4, r5, r6, pc}
  401408:	f1c4 0400 	rsb	r4, r4, #0
  40140c:	3c20      	subs	r4, #32
  40140e:	da35      	bge.n	40147c <__aeabi_dmul+0x164>
  401410:	340c      	adds	r4, #12
  401412:	dc1b      	bgt.n	40144c <__aeabi_dmul+0x134>
  401414:	f104 0414 	add.w	r4, r4, #20
  401418:	f1c4 0520 	rsb	r5, r4, #32
  40141c:	fa00 f305 	lsl.w	r3, r0, r5
  401420:	fa20 f004 	lsr.w	r0, r0, r4
  401424:	fa01 f205 	lsl.w	r2, r1, r5
  401428:	ea40 0002 	orr.w	r0, r0, r2
  40142c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  401430:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401434:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401438:	fa21 f604 	lsr.w	r6, r1, r4
  40143c:	eb42 0106 	adc.w	r1, r2, r6
  401440:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401444:	bf08      	it	eq
  401446:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40144a:	bd70      	pop	{r4, r5, r6, pc}
  40144c:	f1c4 040c 	rsb	r4, r4, #12
  401450:	f1c4 0520 	rsb	r5, r4, #32
  401454:	fa00 f304 	lsl.w	r3, r0, r4
  401458:	fa20 f005 	lsr.w	r0, r0, r5
  40145c:	fa01 f204 	lsl.w	r2, r1, r4
  401460:	ea40 0002 	orr.w	r0, r0, r2
  401464:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401468:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  40146c:	f141 0100 	adc.w	r1, r1, #0
  401470:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401474:	bf08      	it	eq
  401476:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40147a:	bd70      	pop	{r4, r5, r6, pc}
  40147c:	f1c4 0520 	rsb	r5, r4, #32
  401480:	fa00 f205 	lsl.w	r2, r0, r5
  401484:	ea4e 0e02 	orr.w	lr, lr, r2
  401488:	fa20 f304 	lsr.w	r3, r0, r4
  40148c:	fa01 f205 	lsl.w	r2, r1, r5
  401490:	ea43 0302 	orr.w	r3, r3, r2
  401494:	fa21 f004 	lsr.w	r0, r1, r4
  401498:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40149c:	fa21 f204 	lsr.w	r2, r1, r4
  4014a0:	ea20 0002 	bic.w	r0, r0, r2
  4014a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  4014a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4014ac:	bf08      	it	eq
  4014ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4014b2:	bd70      	pop	{r4, r5, r6, pc}
  4014b4:	f094 0f00 	teq	r4, #0
  4014b8:	d10f      	bne.n	4014da <__aeabi_dmul+0x1c2>
  4014ba:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  4014be:	0040      	lsls	r0, r0, #1
  4014c0:	eb41 0101 	adc.w	r1, r1, r1
  4014c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4014c8:	bf08      	it	eq
  4014ca:	3c01      	subeq	r4, #1
  4014cc:	d0f7      	beq.n	4014be <__aeabi_dmul+0x1a6>
  4014ce:	ea41 0106 	orr.w	r1, r1, r6
  4014d2:	f095 0f00 	teq	r5, #0
  4014d6:	bf18      	it	ne
  4014d8:	4770      	bxne	lr
  4014da:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  4014de:	0052      	lsls	r2, r2, #1
  4014e0:	eb43 0303 	adc.w	r3, r3, r3
  4014e4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  4014e8:	bf08      	it	eq
  4014ea:	3d01      	subeq	r5, #1
  4014ec:	d0f7      	beq.n	4014de <__aeabi_dmul+0x1c6>
  4014ee:	ea43 0306 	orr.w	r3, r3, r6
  4014f2:	4770      	bx	lr
  4014f4:	ea94 0f0c 	teq	r4, ip
  4014f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4014fc:	bf18      	it	ne
  4014fe:	ea95 0f0c 	teqne	r5, ip
  401502:	d00c      	beq.n	40151e <__aeabi_dmul+0x206>
  401504:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401508:	bf18      	it	ne
  40150a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40150e:	d1d1      	bne.n	4014b4 <__aeabi_dmul+0x19c>
  401510:	ea81 0103 	eor.w	r1, r1, r3
  401514:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401518:	f04f 0000 	mov.w	r0, #0
  40151c:	bd70      	pop	{r4, r5, r6, pc}
  40151e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401522:	bf06      	itte	eq
  401524:	4610      	moveq	r0, r2
  401526:	4619      	moveq	r1, r3
  401528:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40152c:	d019      	beq.n	401562 <__aeabi_dmul+0x24a>
  40152e:	ea94 0f0c 	teq	r4, ip
  401532:	d102      	bne.n	40153a <__aeabi_dmul+0x222>
  401534:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  401538:	d113      	bne.n	401562 <__aeabi_dmul+0x24a>
  40153a:	ea95 0f0c 	teq	r5, ip
  40153e:	d105      	bne.n	40154c <__aeabi_dmul+0x234>
  401540:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  401544:	bf1c      	itt	ne
  401546:	4610      	movne	r0, r2
  401548:	4619      	movne	r1, r3
  40154a:	d10a      	bne.n	401562 <__aeabi_dmul+0x24a>
  40154c:	ea81 0103 	eor.w	r1, r1, r3
  401550:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401554:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401558:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  40155c:	f04f 0000 	mov.w	r0, #0
  401560:	bd70      	pop	{r4, r5, r6, pc}
  401562:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401566:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  40156a:	bd70      	pop	{r4, r5, r6, pc}

0040156c <__aeabi_ddiv>:
  40156c:	b570      	push	{r4, r5, r6, lr}
  40156e:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401572:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401576:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40157a:	bf1d      	ittte	ne
  40157c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401580:	ea94 0f0c 	teqne	r4, ip
  401584:	ea95 0f0c 	teqne	r5, ip
  401588:	f000 f8a7 	bleq	4016da <__aeabi_ddiv+0x16e>
  40158c:	eba4 0405 	sub.w	r4, r4, r5
  401590:	ea81 0e03 	eor.w	lr, r1, r3
  401594:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401598:	ea4f 3101 	mov.w	r1, r1, lsl #12
  40159c:	f000 8088 	beq.w	4016b0 <__aeabi_ddiv+0x144>
  4015a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4015a4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  4015a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  4015ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  4015b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
  4015b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4015b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  4015bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
  4015c0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  4015c4:	429d      	cmp	r5, r3
  4015c6:	bf08      	it	eq
  4015c8:	4296      	cmpeq	r6, r2
  4015ca:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  4015ce:	f504 7440 	add.w	r4, r4, #768	; 0x300
  4015d2:	d202      	bcs.n	4015da <__aeabi_ddiv+0x6e>
  4015d4:	085b      	lsrs	r3, r3, #1
  4015d6:	ea4f 0232 	mov.w	r2, r2, rrx
  4015da:	1ab6      	subs	r6, r6, r2
  4015dc:	eb65 0503 	sbc.w	r5, r5, r3
  4015e0:	085b      	lsrs	r3, r3, #1
  4015e2:	ea4f 0232 	mov.w	r2, r2, rrx
  4015e6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  4015ea:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  4015ee:	ebb6 0e02 	subs.w	lr, r6, r2
  4015f2:	eb75 0e03 	sbcs.w	lr, r5, r3
  4015f6:	bf22      	ittt	cs
  4015f8:	1ab6      	subcs	r6, r6, r2
  4015fa:	4675      	movcs	r5, lr
  4015fc:	ea40 000c 	orrcs.w	r0, r0, ip
  401600:	085b      	lsrs	r3, r3, #1
  401602:	ea4f 0232 	mov.w	r2, r2, rrx
  401606:	ebb6 0e02 	subs.w	lr, r6, r2
  40160a:	eb75 0e03 	sbcs.w	lr, r5, r3
  40160e:	bf22      	ittt	cs
  401610:	1ab6      	subcs	r6, r6, r2
  401612:	4675      	movcs	r5, lr
  401614:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  401618:	085b      	lsrs	r3, r3, #1
  40161a:	ea4f 0232 	mov.w	r2, r2, rrx
  40161e:	ebb6 0e02 	subs.w	lr, r6, r2
  401622:	eb75 0e03 	sbcs.w	lr, r5, r3
  401626:	bf22      	ittt	cs
  401628:	1ab6      	subcs	r6, r6, r2
  40162a:	4675      	movcs	r5, lr
  40162c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  401630:	085b      	lsrs	r3, r3, #1
  401632:	ea4f 0232 	mov.w	r2, r2, rrx
  401636:	ebb6 0e02 	subs.w	lr, r6, r2
  40163a:	eb75 0e03 	sbcs.w	lr, r5, r3
  40163e:	bf22      	ittt	cs
  401640:	1ab6      	subcs	r6, r6, r2
  401642:	4675      	movcs	r5, lr
  401644:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  401648:	ea55 0e06 	orrs.w	lr, r5, r6
  40164c:	d018      	beq.n	401680 <__aeabi_ddiv+0x114>
  40164e:	ea4f 1505 	mov.w	r5, r5, lsl #4
  401652:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  401656:	ea4f 1606 	mov.w	r6, r6, lsl #4
  40165a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  40165e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  401662:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  401666:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  40166a:	d1c0      	bne.n	4015ee <__aeabi_ddiv+0x82>
  40166c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401670:	d10b      	bne.n	40168a <__aeabi_ddiv+0x11e>
  401672:	ea41 0100 	orr.w	r1, r1, r0
  401676:	f04f 0000 	mov.w	r0, #0
  40167a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  40167e:	e7b6      	b.n	4015ee <__aeabi_ddiv+0x82>
  401680:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401684:	bf04      	itt	eq
  401686:	4301      	orreq	r1, r0
  401688:	2000      	moveq	r0, #0
  40168a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40168e:	bf88      	it	hi
  401690:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401694:	f63f aeaf 	bhi.w	4013f6 <__aeabi_dmul+0xde>
  401698:	ebb5 0c03 	subs.w	ip, r5, r3
  40169c:	bf04      	itt	eq
  40169e:	ebb6 0c02 	subseq.w	ip, r6, r2
  4016a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4016a6:	f150 0000 	adcs.w	r0, r0, #0
  4016aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4016ae:	bd70      	pop	{r4, r5, r6, pc}
  4016b0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4016b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4016b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4016bc:	bfc2      	ittt	gt
  4016be:	ebd4 050c 	rsbsgt	r5, r4, ip
  4016c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4016c6:	bd70      	popgt	{r4, r5, r6, pc}
  4016c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4016cc:	f04f 0e00 	mov.w	lr, #0
  4016d0:	3c01      	subs	r4, #1
  4016d2:	e690      	b.n	4013f6 <__aeabi_dmul+0xde>
  4016d4:	ea45 0e06 	orr.w	lr, r5, r6
  4016d8:	e68d      	b.n	4013f6 <__aeabi_dmul+0xde>
  4016da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4016de:	ea94 0f0c 	teq	r4, ip
  4016e2:	bf08      	it	eq
  4016e4:	ea95 0f0c 	teqeq	r5, ip
  4016e8:	f43f af3b 	beq.w	401562 <__aeabi_dmul+0x24a>
  4016ec:	ea94 0f0c 	teq	r4, ip
  4016f0:	d10a      	bne.n	401708 <__aeabi_ddiv+0x19c>
  4016f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4016f6:	f47f af34 	bne.w	401562 <__aeabi_dmul+0x24a>
  4016fa:	ea95 0f0c 	teq	r5, ip
  4016fe:	f47f af25 	bne.w	40154c <__aeabi_dmul+0x234>
  401702:	4610      	mov	r0, r2
  401704:	4619      	mov	r1, r3
  401706:	e72c      	b.n	401562 <__aeabi_dmul+0x24a>
  401708:	ea95 0f0c 	teq	r5, ip
  40170c:	d106      	bne.n	40171c <__aeabi_ddiv+0x1b0>
  40170e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401712:	f43f aefd 	beq.w	401510 <__aeabi_dmul+0x1f8>
  401716:	4610      	mov	r0, r2
  401718:	4619      	mov	r1, r3
  40171a:	e722      	b.n	401562 <__aeabi_dmul+0x24a>
  40171c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401720:	bf18      	it	ne
  401722:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401726:	f47f aec5 	bne.w	4014b4 <__aeabi_dmul+0x19c>
  40172a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  40172e:	f47f af0d 	bne.w	40154c <__aeabi_dmul+0x234>
  401732:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  401736:	f47f aeeb 	bne.w	401510 <__aeabi_dmul+0x1f8>
  40173a:	e712      	b.n	401562 <__aeabi_dmul+0x24a>

0040173c <__aeabi_d2uiz>:
  40173c:	004a      	lsls	r2, r1, #1
  40173e:	d211      	bcs.n	401764 <__aeabi_d2uiz+0x28>
  401740:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  401744:	d211      	bcs.n	40176a <__aeabi_d2uiz+0x2e>
  401746:	d50d      	bpl.n	401764 <__aeabi_d2uiz+0x28>
  401748:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  40174c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  401750:	d40e      	bmi.n	401770 <__aeabi_d2uiz+0x34>
  401752:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  401756:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  40175a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  40175e:	fa23 f002 	lsr.w	r0, r3, r2
  401762:	4770      	bx	lr
  401764:	f04f 0000 	mov.w	r0, #0
  401768:	4770      	bx	lr
  40176a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  40176e:	d102      	bne.n	401776 <__aeabi_d2uiz+0x3a>
  401770:	f04f 30ff 	mov.w	r0, #4294967295
  401774:	4770      	bx	lr
  401776:	f04f 0000 	mov.w	r0, #0
  40177a:	4770      	bx	lr

0040177c <__libc_init_array>:
  40177c:	b570      	push	{r4, r5, r6, lr}
  40177e:	4e0f      	ldr	r6, [pc, #60]	; (4017bc <__libc_init_array+0x40>)
  401780:	4d0f      	ldr	r5, [pc, #60]	; (4017c0 <__libc_init_array+0x44>)
  401782:	1b76      	subs	r6, r6, r5
  401784:	10b6      	asrs	r6, r6, #2
  401786:	bf18      	it	ne
  401788:	2400      	movne	r4, #0
  40178a:	d005      	beq.n	401798 <__libc_init_array+0x1c>
  40178c:	3401      	adds	r4, #1
  40178e:	f855 3b04 	ldr.w	r3, [r5], #4
  401792:	4798      	blx	r3
  401794:	42a6      	cmp	r6, r4
  401796:	d1f9      	bne.n	40178c <__libc_init_array+0x10>
  401798:	4e0a      	ldr	r6, [pc, #40]	; (4017c4 <__libc_init_array+0x48>)
  40179a:	4d0b      	ldr	r5, [pc, #44]	; (4017c8 <__libc_init_array+0x4c>)
  40179c:	1b76      	subs	r6, r6, r5
  40179e:	f003 f8c9 	bl	404934 <_init>
  4017a2:	10b6      	asrs	r6, r6, #2
  4017a4:	bf18      	it	ne
  4017a6:	2400      	movne	r4, #0
  4017a8:	d006      	beq.n	4017b8 <__libc_init_array+0x3c>
  4017aa:	3401      	adds	r4, #1
  4017ac:	f855 3b04 	ldr.w	r3, [r5], #4
  4017b0:	4798      	blx	r3
  4017b2:	42a6      	cmp	r6, r4
  4017b4:	d1f9      	bne.n	4017aa <__libc_init_array+0x2e>
  4017b6:	bd70      	pop	{r4, r5, r6, pc}
  4017b8:	bd70      	pop	{r4, r5, r6, pc}
  4017ba:	bf00      	nop
  4017bc:	00404940 	.word	0x00404940
  4017c0:	00404940 	.word	0x00404940
  4017c4:	00404948 	.word	0x00404948
  4017c8:	00404940 	.word	0x00404940

004017cc <iprintf>:
  4017cc:	b40f      	push	{r0, r1, r2, r3}
  4017ce:	b500      	push	{lr}
  4017d0:	4907      	ldr	r1, [pc, #28]	; (4017f0 <iprintf+0x24>)
  4017d2:	b083      	sub	sp, #12
  4017d4:	ab04      	add	r3, sp, #16
  4017d6:	6808      	ldr	r0, [r1, #0]
  4017d8:	f853 2b04 	ldr.w	r2, [r3], #4
  4017dc:	6881      	ldr	r1, [r0, #8]
  4017de:	9301      	str	r3, [sp, #4]
  4017e0:	f000 f97a 	bl	401ad8 <_vfiprintf_r>
  4017e4:	b003      	add	sp, #12
  4017e6:	f85d eb04 	ldr.w	lr, [sp], #4
  4017ea:	b004      	add	sp, #16
  4017ec:	4770      	bx	lr
  4017ee:	bf00      	nop
  4017f0:	20000430 	.word	0x20000430

004017f4 <memset>:
  4017f4:	b470      	push	{r4, r5, r6}
  4017f6:	0784      	lsls	r4, r0, #30
  4017f8:	d046      	beq.n	401888 <memset+0x94>
  4017fa:	1e54      	subs	r4, r2, #1
  4017fc:	2a00      	cmp	r2, #0
  4017fe:	d041      	beq.n	401884 <memset+0x90>
  401800:	b2cd      	uxtb	r5, r1
  401802:	4603      	mov	r3, r0
  401804:	e002      	b.n	40180c <memset+0x18>
  401806:	1e62      	subs	r2, r4, #1
  401808:	b3e4      	cbz	r4, 401884 <memset+0x90>
  40180a:	4614      	mov	r4, r2
  40180c:	f803 5b01 	strb.w	r5, [r3], #1
  401810:	079a      	lsls	r2, r3, #30
  401812:	d1f8      	bne.n	401806 <memset+0x12>
  401814:	2c03      	cmp	r4, #3
  401816:	d92e      	bls.n	401876 <memset+0x82>
  401818:	b2cd      	uxtb	r5, r1
  40181a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40181e:	2c0f      	cmp	r4, #15
  401820:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401824:	d919      	bls.n	40185a <memset+0x66>
  401826:	f103 0210 	add.w	r2, r3, #16
  40182a:	4626      	mov	r6, r4
  40182c:	3e10      	subs	r6, #16
  40182e:	2e0f      	cmp	r6, #15
  401830:	f842 5c10 	str.w	r5, [r2, #-16]
  401834:	f842 5c0c 	str.w	r5, [r2, #-12]
  401838:	f842 5c08 	str.w	r5, [r2, #-8]
  40183c:	f842 5c04 	str.w	r5, [r2, #-4]
  401840:	f102 0210 	add.w	r2, r2, #16
  401844:	d8f2      	bhi.n	40182c <memset+0x38>
  401846:	f1a4 0210 	sub.w	r2, r4, #16
  40184a:	f022 020f 	bic.w	r2, r2, #15
  40184e:	f004 040f 	and.w	r4, r4, #15
  401852:	3210      	adds	r2, #16
  401854:	2c03      	cmp	r4, #3
  401856:	4413      	add	r3, r2
  401858:	d90d      	bls.n	401876 <memset+0x82>
  40185a:	461e      	mov	r6, r3
  40185c:	4622      	mov	r2, r4
  40185e:	3a04      	subs	r2, #4
  401860:	2a03      	cmp	r2, #3
  401862:	f846 5b04 	str.w	r5, [r6], #4
  401866:	d8fa      	bhi.n	40185e <memset+0x6a>
  401868:	1f22      	subs	r2, r4, #4
  40186a:	f022 0203 	bic.w	r2, r2, #3
  40186e:	3204      	adds	r2, #4
  401870:	4413      	add	r3, r2
  401872:	f004 0403 	and.w	r4, r4, #3
  401876:	b12c      	cbz	r4, 401884 <memset+0x90>
  401878:	b2c9      	uxtb	r1, r1
  40187a:	441c      	add	r4, r3
  40187c:	f803 1b01 	strb.w	r1, [r3], #1
  401880:	42a3      	cmp	r3, r4
  401882:	d1fb      	bne.n	40187c <memset+0x88>
  401884:	bc70      	pop	{r4, r5, r6}
  401886:	4770      	bx	lr
  401888:	4614      	mov	r4, r2
  40188a:	4603      	mov	r3, r0
  40188c:	e7c2      	b.n	401814 <memset+0x20>
  40188e:	bf00      	nop

00401890 <_puts_r>:
  401890:	b5f0      	push	{r4, r5, r6, r7, lr}
  401892:	4604      	mov	r4, r0
  401894:	b089      	sub	sp, #36	; 0x24
  401896:	4608      	mov	r0, r1
  401898:	460d      	mov	r5, r1
  40189a:	f000 f8b3 	bl	401a04 <strlen>
  40189e:	68a3      	ldr	r3, [r4, #8]
  4018a0:	4f11      	ldr	r7, [pc, #68]	; (4018e8 <_puts_r+0x58>)
  4018a2:	899a      	ldrh	r2, [r3, #12]
  4018a4:	9504      	str	r5, [sp, #16]
  4018a6:	2102      	movs	r1, #2
  4018a8:	f100 0e01 	add.w	lr, r0, #1
  4018ac:	2601      	movs	r6, #1
  4018ae:	ad04      	add	r5, sp, #16
  4018b0:	9102      	str	r1, [sp, #8]
  4018b2:	0491      	lsls	r1, r2, #18
  4018b4:	9005      	str	r0, [sp, #20]
  4018b6:	f8cd e00c 	str.w	lr, [sp, #12]
  4018ba:	9706      	str	r7, [sp, #24]
  4018bc:	9607      	str	r6, [sp, #28]
  4018be:	9501      	str	r5, [sp, #4]
  4018c0:	d406      	bmi.n	4018d0 <_puts_r+0x40>
  4018c2:	6e59      	ldr	r1, [r3, #100]	; 0x64
  4018c4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  4018c8:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  4018cc:	819a      	strh	r2, [r3, #12]
  4018ce:	6659      	str	r1, [r3, #100]	; 0x64
  4018d0:	4620      	mov	r0, r4
  4018d2:	4619      	mov	r1, r3
  4018d4:	aa01      	add	r2, sp, #4
  4018d6:	f001 faa3 	bl	402e20 <__sfvwrite_r>
  4018da:	2800      	cmp	r0, #0
  4018dc:	bf14      	ite	ne
  4018de:	f04f 30ff 	movne.w	r0, #4294967295
  4018e2:	200a      	moveq	r0, #10
  4018e4:	b009      	add	sp, #36	; 0x24
  4018e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4018e8:	004048e0 	.word	0x004048e0

004018ec <puts>:
  4018ec:	4b02      	ldr	r3, [pc, #8]	; (4018f8 <puts+0xc>)
  4018ee:	4601      	mov	r1, r0
  4018f0:	6818      	ldr	r0, [r3, #0]
  4018f2:	f7ff bfcd 	b.w	401890 <_puts_r>
  4018f6:	bf00      	nop
  4018f8:	20000430 	.word	0x20000430

004018fc <setbuf>:
  4018fc:	2900      	cmp	r1, #0
  4018fe:	bf0c      	ite	eq
  401900:	2202      	moveq	r2, #2
  401902:	2200      	movne	r2, #0
  401904:	f44f 6380 	mov.w	r3, #1024	; 0x400
  401908:	f000 b800 	b.w	40190c <setvbuf>

0040190c <setvbuf>:
  40190c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401910:	4c3a      	ldr	r4, [pc, #232]	; (4019fc <setvbuf+0xf0>)
  401912:	6826      	ldr	r6, [r4, #0]
  401914:	460d      	mov	r5, r1
  401916:	4604      	mov	r4, r0
  401918:	4690      	mov	r8, r2
  40191a:	461f      	mov	r7, r3
  40191c:	b116      	cbz	r6, 401924 <setvbuf+0x18>
  40191e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
  401920:	2b00      	cmp	r3, #0
  401922:	d03c      	beq.n	40199e <setvbuf+0x92>
  401924:	f1b8 0f02 	cmp.w	r8, #2
  401928:	d82f      	bhi.n	40198a <setvbuf+0x7e>
  40192a:	2f00      	cmp	r7, #0
  40192c:	db2d      	blt.n	40198a <setvbuf+0x7e>
  40192e:	4621      	mov	r1, r4
  401930:	4630      	mov	r0, r6
  401932:	f001 f831 	bl	402998 <_fflush_r>
  401936:	89a1      	ldrh	r1, [r4, #12]
  401938:	2300      	movs	r3, #0
  40193a:	6063      	str	r3, [r4, #4]
  40193c:	61a3      	str	r3, [r4, #24]
  40193e:	060b      	lsls	r3, r1, #24
  401940:	d427      	bmi.n	401992 <setvbuf+0x86>
  401942:	f021 0183 	bic.w	r1, r1, #131	; 0x83
  401946:	b289      	uxth	r1, r1
  401948:	f1b8 0f02 	cmp.w	r8, #2
  40194c:	81a1      	strh	r1, [r4, #12]
  40194e:	d02a      	beq.n	4019a6 <setvbuf+0x9a>
  401950:	2d00      	cmp	r5, #0
  401952:	d036      	beq.n	4019c2 <setvbuf+0xb6>
  401954:	f1b8 0f01 	cmp.w	r8, #1
  401958:	d011      	beq.n	40197e <setvbuf+0x72>
  40195a:	b289      	uxth	r1, r1
  40195c:	f001 0008 	and.w	r0, r1, #8
  401960:	4b27      	ldr	r3, [pc, #156]	; (401a00 <setvbuf+0xf4>)
  401962:	63f3      	str	r3, [r6, #60]	; 0x3c
  401964:	b280      	uxth	r0, r0
  401966:	6025      	str	r5, [r4, #0]
  401968:	6125      	str	r5, [r4, #16]
  40196a:	6167      	str	r7, [r4, #20]
  40196c:	b178      	cbz	r0, 40198e <setvbuf+0x82>
  40196e:	f011 0f03 	tst.w	r1, #3
  401972:	bf18      	it	ne
  401974:	2700      	movne	r7, #0
  401976:	60a7      	str	r7, [r4, #8]
  401978:	2000      	movs	r0, #0
  40197a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40197e:	f041 0101 	orr.w	r1, r1, #1
  401982:	427b      	negs	r3, r7
  401984:	81a1      	strh	r1, [r4, #12]
  401986:	61a3      	str	r3, [r4, #24]
  401988:	e7e7      	b.n	40195a <setvbuf+0x4e>
  40198a:	f04f 30ff 	mov.w	r0, #4294967295
  40198e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401992:	6921      	ldr	r1, [r4, #16]
  401994:	4630      	mov	r0, r6
  401996:	f001 f96b 	bl	402c70 <_free_r>
  40199a:	89a1      	ldrh	r1, [r4, #12]
  40199c:	e7d1      	b.n	401942 <setvbuf+0x36>
  40199e:	4630      	mov	r0, r6
  4019a0:	f001 f88e 	bl	402ac0 <__sinit>
  4019a4:	e7be      	b.n	401924 <setvbuf+0x18>
  4019a6:	2000      	movs	r0, #0
  4019a8:	f104 0343 	add.w	r3, r4, #67	; 0x43
  4019ac:	f041 0102 	orr.w	r1, r1, #2
  4019b0:	2500      	movs	r5, #0
  4019b2:	2201      	movs	r2, #1
  4019b4:	81a1      	strh	r1, [r4, #12]
  4019b6:	60a5      	str	r5, [r4, #8]
  4019b8:	6023      	str	r3, [r4, #0]
  4019ba:	6123      	str	r3, [r4, #16]
  4019bc:	6162      	str	r2, [r4, #20]
  4019be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4019c2:	2f00      	cmp	r7, #0
  4019c4:	bf08      	it	eq
  4019c6:	f44f 6780 	moveq.w	r7, #1024	; 0x400
  4019ca:	4638      	mov	r0, r7
  4019cc:	f001 fc58 	bl	403280 <malloc>
  4019d0:	4605      	mov	r5, r0
  4019d2:	b128      	cbz	r0, 4019e0 <setvbuf+0xd4>
  4019d4:	89a1      	ldrh	r1, [r4, #12]
  4019d6:	f041 0180 	orr.w	r1, r1, #128	; 0x80
  4019da:	b289      	uxth	r1, r1
  4019dc:	81a1      	strh	r1, [r4, #12]
  4019de:	e7b9      	b.n	401954 <setvbuf+0x48>
  4019e0:	f44f 6080 	mov.w	r0, #1024	; 0x400
  4019e4:	f001 fc4c 	bl	403280 <malloc>
  4019e8:	4605      	mov	r5, r0
  4019ea:	b918      	cbnz	r0, 4019f4 <setvbuf+0xe8>
  4019ec:	89a1      	ldrh	r1, [r4, #12]
  4019ee:	f04f 30ff 	mov.w	r0, #4294967295
  4019f2:	e7d9      	b.n	4019a8 <setvbuf+0x9c>
  4019f4:	f44f 6780 	mov.w	r7, #1024	; 0x400
  4019f8:	e7ec      	b.n	4019d4 <setvbuf+0xc8>
  4019fa:	bf00      	nop
  4019fc:	20000430 	.word	0x20000430
  401a00:	004029c5 	.word	0x004029c5

00401a04 <strlen>:
  401a04:	f020 0103 	bic.w	r1, r0, #3
  401a08:	f010 0003 	ands.w	r0, r0, #3
  401a0c:	f1c0 0000 	rsb	r0, r0, #0
  401a10:	f851 3b04 	ldr.w	r3, [r1], #4
  401a14:	f100 0c04 	add.w	ip, r0, #4
  401a18:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
  401a1c:	f06f 0200 	mvn.w	r2, #0
  401a20:	bf1c      	itt	ne
  401a22:	fa22 f20c 	lsrne.w	r2, r2, ip
  401a26:	4313      	orrne	r3, r2
  401a28:	f04f 0c01 	mov.w	ip, #1
  401a2c:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
  401a30:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
  401a34:	eba3 020c 	sub.w	r2, r3, ip
  401a38:	ea22 0203 	bic.w	r2, r2, r3
  401a3c:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
  401a40:	bf04      	itt	eq
  401a42:	f851 3b04 	ldreq.w	r3, [r1], #4
  401a46:	3004      	addeq	r0, #4
  401a48:	d0f4      	beq.n	401a34 <strlen+0x30>
  401a4a:	f1c2 0100 	rsb	r1, r2, #0
  401a4e:	ea02 0201 	and.w	r2, r2, r1
  401a52:	fab2 f282 	clz	r2, r2
  401a56:	f1c2 021f 	rsb	r2, r2, #31
  401a5a:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  401a5e:	4770      	bx	lr

00401a60 <__sprint_r.part.0>:
  401a60:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  401a62:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  401a66:	049c      	lsls	r4, r3, #18
  401a68:	460f      	mov	r7, r1
  401a6a:	4692      	mov	sl, r2
  401a6c:	d52b      	bpl.n	401ac6 <__sprint_r.part.0+0x66>
  401a6e:	6893      	ldr	r3, [r2, #8]
  401a70:	6812      	ldr	r2, [r2, #0]
  401a72:	b333      	cbz	r3, 401ac2 <__sprint_r.part.0+0x62>
  401a74:	4680      	mov	r8, r0
  401a76:	f102 0908 	add.w	r9, r2, #8
  401a7a:	e919 0060 	ldmdb	r9, {r5, r6}
  401a7e:	08b6      	lsrs	r6, r6, #2
  401a80:	d017      	beq.n	401ab2 <__sprint_r.part.0+0x52>
  401a82:	3d04      	subs	r5, #4
  401a84:	2400      	movs	r4, #0
  401a86:	e001      	b.n	401a8c <__sprint_r.part.0+0x2c>
  401a88:	42a6      	cmp	r6, r4
  401a8a:	d010      	beq.n	401aae <__sprint_r.part.0+0x4e>
  401a8c:	4640      	mov	r0, r8
  401a8e:	f855 1f04 	ldr.w	r1, [r5, #4]!
  401a92:	463a      	mov	r2, r7
  401a94:	f001 f88c 	bl	402bb0 <_fputwc_r>
  401a98:	1c43      	adds	r3, r0, #1
  401a9a:	f104 0401 	add.w	r4, r4, #1
  401a9e:	d1f3      	bne.n	401a88 <__sprint_r.part.0+0x28>
  401aa0:	2300      	movs	r3, #0
  401aa2:	f8ca 3008 	str.w	r3, [sl, #8]
  401aa6:	f8ca 3004 	str.w	r3, [sl, #4]
  401aaa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401aae:	f8da 3008 	ldr.w	r3, [sl, #8]
  401ab2:	eba3 0386 	sub.w	r3, r3, r6, lsl #2
  401ab6:	f8ca 3008 	str.w	r3, [sl, #8]
  401aba:	f109 0908 	add.w	r9, r9, #8
  401abe:	2b00      	cmp	r3, #0
  401ac0:	d1db      	bne.n	401a7a <__sprint_r.part.0+0x1a>
  401ac2:	2000      	movs	r0, #0
  401ac4:	e7ec      	b.n	401aa0 <__sprint_r.part.0+0x40>
  401ac6:	f001 f9ab 	bl	402e20 <__sfvwrite_r>
  401aca:	2300      	movs	r3, #0
  401acc:	f8ca 3008 	str.w	r3, [sl, #8]
  401ad0:	f8ca 3004 	str.w	r3, [sl, #4]
  401ad4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00401ad8 <_vfiprintf_r>:
  401ad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401adc:	b0ab      	sub	sp, #172	; 0xac
  401ade:	461c      	mov	r4, r3
  401ae0:	9100      	str	r1, [sp, #0]
  401ae2:	4693      	mov	fp, r2
  401ae4:	9304      	str	r3, [sp, #16]
  401ae6:	9001      	str	r0, [sp, #4]
  401ae8:	b118      	cbz	r0, 401af2 <_vfiprintf_r+0x1a>
  401aea:	6b83      	ldr	r3, [r0, #56]	; 0x38
  401aec:	2b00      	cmp	r3, #0
  401aee:	f000 80e3 	beq.w	401cb8 <_vfiprintf_r+0x1e0>
  401af2:	9b00      	ldr	r3, [sp, #0]
  401af4:	8999      	ldrh	r1, [r3, #12]
  401af6:	b28a      	uxth	r2, r1
  401af8:	0490      	lsls	r0, r2, #18
  401afa:	d408      	bmi.n	401b0e <_vfiprintf_r+0x36>
  401afc:	4618      	mov	r0, r3
  401afe:	6e5b      	ldr	r3, [r3, #100]	; 0x64
  401b00:	f441 5200 	orr.w	r2, r1, #8192	; 0x2000
  401b04:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  401b08:	8182      	strh	r2, [r0, #12]
  401b0a:	6643      	str	r3, [r0, #100]	; 0x64
  401b0c:	b292      	uxth	r2, r2
  401b0e:	0711      	lsls	r1, r2, #28
  401b10:	f140 80b2 	bpl.w	401c78 <_vfiprintf_r+0x1a0>
  401b14:	9b00      	ldr	r3, [sp, #0]
  401b16:	691b      	ldr	r3, [r3, #16]
  401b18:	2b00      	cmp	r3, #0
  401b1a:	f000 80ad 	beq.w	401c78 <_vfiprintf_r+0x1a0>
  401b1e:	f002 021a 	and.w	r2, r2, #26
  401b22:	2a0a      	cmp	r2, #10
  401b24:	f000 80b4 	beq.w	401c90 <_vfiprintf_r+0x1b8>
  401b28:	2300      	movs	r3, #0
  401b2a:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
  401b2e:	9309      	str	r3, [sp, #36]	; 0x24
  401b30:	930f      	str	r3, [sp, #60]	; 0x3c
  401b32:	930e      	str	r3, [sp, #56]	; 0x38
  401b34:	9302      	str	r3, [sp, #8]
  401b36:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
  401b3a:	4654      	mov	r4, sl
  401b3c:	f89b 3000 	ldrb.w	r3, [fp]
  401b40:	2b00      	cmp	r3, #0
  401b42:	f000 84a3 	beq.w	40248c <_vfiprintf_r+0x9b4>
  401b46:	2b25      	cmp	r3, #37	; 0x25
  401b48:	f000 84a0 	beq.w	40248c <_vfiprintf_r+0x9b4>
  401b4c:	465a      	mov	r2, fp
  401b4e:	e001      	b.n	401b54 <_vfiprintf_r+0x7c>
  401b50:	2b25      	cmp	r3, #37	; 0x25
  401b52:	d003      	beq.n	401b5c <_vfiprintf_r+0x84>
  401b54:	f812 3f01 	ldrb.w	r3, [r2, #1]!
  401b58:	2b00      	cmp	r3, #0
  401b5a:	d1f9      	bne.n	401b50 <_vfiprintf_r+0x78>
  401b5c:	ebcb 0602 	rsb	r6, fp, r2
  401b60:	4615      	mov	r5, r2
  401b62:	b196      	cbz	r6, 401b8a <_vfiprintf_r+0xb2>
  401b64:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  401b66:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401b68:	f8c4 b000 	str.w	fp, [r4]
  401b6c:	3301      	adds	r3, #1
  401b6e:	4432      	add	r2, r6
  401b70:	2b07      	cmp	r3, #7
  401b72:	6066      	str	r6, [r4, #4]
  401b74:	920f      	str	r2, [sp, #60]	; 0x3c
  401b76:	930e      	str	r3, [sp, #56]	; 0x38
  401b78:	dd79      	ble.n	401c6e <_vfiprintf_r+0x196>
  401b7a:	2a00      	cmp	r2, #0
  401b7c:	f040 84af 	bne.w	4024de <_vfiprintf_r+0xa06>
  401b80:	9b02      	ldr	r3, [sp, #8]
  401b82:	920e      	str	r2, [sp, #56]	; 0x38
  401b84:	4433      	add	r3, r6
  401b86:	4654      	mov	r4, sl
  401b88:	9302      	str	r3, [sp, #8]
  401b8a:	782b      	ldrb	r3, [r5, #0]
  401b8c:	2b00      	cmp	r3, #0
  401b8e:	f000 8360 	beq.w	402252 <_vfiprintf_r+0x77a>
  401b92:	2100      	movs	r1, #0
  401b94:	f04f 0300 	mov.w	r3, #0
  401b98:	f04f 3cff 	mov.w	ip, #4294967295
  401b9c:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  401ba0:	1c68      	adds	r0, r5, #1
  401ba2:	786b      	ldrb	r3, [r5, #1]
  401ba4:	4688      	mov	r8, r1
  401ba6:	460d      	mov	r5, r1
  401ba8:	4666      	mov	r6, ip
  401baa:	f100 0b01 	add.w	fp, r0, #1
  401bae:	f1a3 0220 	sub.w	r2, r3, #32
  401bb2:	2a58      	cmp	r2, #88	; 0x58
  401bb4:	f200 82ab 	bhi.w	40210e <_vfiprintf_r+0x636>
  401bb8:	e8df f012 	tbh	[pc, r2, lsl #1]
  401bbc:	02a9029b 	.word	0x02a9029b
  401bc0:	02a302a9 	.word	0x02a302a9
  401bc4:	02a902a9 	.word	0x02a902a9
  401bc8:	02a902a9 	.word	0x02a902a9
  401bcc:	02a902a9 	.word	0x02a902a9
  401bd0:	02620255 	.word	0x02620255
  401bd4:	010d02a9 	.word	0x010d02a9
  401bd8:	02a9026e 	.word	0x02a9026e
  401bdc:	012f0129 	.word	0x012f0129
  401be0:	012f012f 	.word	0x012f012f
  401be4:	012f012f 	.word	0x012f012f
  401be8:	012f012f 	.word	0x012f012f
  401bec:	012f012f 	.word	0x012f012f
  401bf0:	02a902a9 	.word	0x02a902a9
  401bf4:	02a902a9 	.word	0x02a902a9
  401bf8:	02a902a9 	.word	0x02a902a9
  401bfc:	02a902a9 	.word	0x02a902a9
  401c00:	02a902a9 	.word	0x02a902a9
  401c04:	02a9013d 	.word	0x02a9013d
  401c08:	02a902a9 	.word	0x02a902a9
  401c0c:	02a902a9 	.word	0x02a902a9
  401c10:	02a902a9 	.word	0x02a902a9
  401c14:	02a902a9 	.word	0x02a902a9
  401c18:	017402a9 	.word	0x017402a9
  401c1c:	02a902a9 	.word	0x02a902a9
  401c20:	02a902a9 	.word	0x02a902a9
  401c24:	018b02a9 	.word	0x018b02a9
  401c28:	02a902a9 	.word	0x02a902a9
  401c2c:	02a901a3 	.word	0x02a901a3
  401c30:	02a902a9 	.word	0x02a902a9
  401c34:	02a902a9 	.word	0x02a902a9
  401c38:	02a902a9 	.word	0x02a902a9
  401c3c:	02a902a9 	.word	0x02a902a9
  401c40:	01c702a9 	.word	0x01c702a9
  401c44:	02a901da 	.word	0x02a901da
  401c48:	02a902a9 	.word	0x02a902a9
  401c4c:	01da0123 	.word	0x01da0123
  401c50:	02a902a9 	.word	0x02a902a9
  401c54:	02a9024c 	.word	0x02a9024c
  401c58:	0113028a 	.word	0x0113028a
  401c5c:	020701f3 	.word	0x020701f3
  401c60:	020d02a9 	.word	0x020d02a9
  401c64:	008102a9 	.word	0x008102a9
  401c68:	02a902a9 	.word	0x02a902a9
  401c6c:	0233      	.short	0x0233
  401c6e:	3408      	adds	r4, #8
  401c70:	9b02      	ldr	r3, [sp, #8]
  401c72:	4433      	add	r3, r6
  401c74:	9302      	str	r3, [sp, #8]
  401c76:	e788      	b.n	401b8a <_vfiprintf_r+0xb2>
  401c78:	9801      	ldr	r0, [sp, #4]
  401c7a:	9900      	ldr	r1, [sp, #0]
  401c7c:	f000 fd70 	bl	402760 <__swsetup_r>
  401c80:	b9a8      	cbnz	r0, 401cae <_vfiprintf_r+0x1d6>
  401c82:	9b00      	ldr	r3, [sp, #0]
  401c84:	899a      	ldrh	r2, [r3, #12]
  401c86:	f002 021a 	and.w	r2, r2, #26
  401c8a:	2a0a      	cmp	r2, #10
  401c8c:	f47f af4c 	bne.w	401b28 <_vfiprintf_r+0x50>
  401c90:	9b00      	ldr	r3, [sp, #0]
  401c92:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
  401c96:	2b00      	cmp	r3, #0
  401c98:	f6ff af46 	blt.w	401b28 <_vfiprintf_r+0x50>
  401c9c:	9801      	ldr	r0, [sp, #4]
  401c9e:	9900      	ldr	r1, [sp, #0]
  401ca0:	465a      	mov	r2, fp
  401ca2:	4623      	mov	r3, r4
  401ca4:	f000 fd20 	bl	4026e8 <__sbprintf>
  401ca8:	b02b      	add	sp, #172	; 0xac
  401caa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401cae:	f04f 30ff 	mov.w	r0, #4294967295
  401cb2:	b02b      	add	sp, #172	; 0xac
  401cb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401cb8:	f000 ff02 	bl	402ac0 <__sinit>
  401cbc:	e719      	b.n	401af2 <_vfiprintf_r+0x1a>
  401cbe:	f018 0f20 	tst.w	r8, #32
  401cc2:	9503      	str	r5, [sp, #12]
  401cc4:	46b4      	mov	ip, r6
  401cc6:	f000 810c 	beq.w	401ee2 <_vfiprintf_r+0x40a>
  401cca:	9b04      	ldr	r3, [sp, #16]
  401ccc:	3307      	adds	r3, #7
  401cce:	f023 0307 	bic.w	r3, r3, #7
  401cd2:	f103 0208 	add.w	r2, r3, #8
  401cd6:	e9d3 6700 	ldrd	r6, r7, [r3]
  401cda:	9204      	str	r2, [sp, #16]
  401cdc:	2301      	movs	r3, #1
  401cde:	f04f 0200 	mov.w	r2, #0
  401ce2:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
  401ce6:	46e1      	mov	r9, ip
  401ce8:	2500      	movs	r5, #0
  401cea:	f1bc 0f00 	cmp.w	ip, #0
  401cee:	bfa8      	it	ge
  401cf0:	f028 0880 	bicge.w	r8, r8, #128	; 0x80
  401cf4:	ea56 0207 	orrs.w	r2, r6, r7
  401cf8:	f040 80c4 	bne.w	401e84 <_vfiprintf_r+0x3ac>
  401cfc:	f1bc 0f00 	cmp.w	ip, #0
  401d00:	f000 8381 	beq.w	402406 <_vfiprintf_r+0x92e>
  401d04:	2b01      	cmp	r3, #1
  401d06:	f000 80c5 	beq.w	401e94 <_vfiprintf_r+0x3bc>
  401d0a:	2b02      	cmp	r3, #2
  401d0c:	f000 8387 	beq.w	40241e <_vfiprintf_r+0x946>
  401d10:	4651      	mov	r1, sl
  401d12:	08f2      	lsrs	r2, r6, #3
  401d14:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  401d18:	08f8      	lsrs	r0, r7, #3
  401d1a:	f006 0307 	and.w	r3, r6, #7
  401d1e:	4607      	mov	r7, r0
  401d20:	4616      	mov	r6, r2
  401d22:	3330      	adds	r3, #48	; 0x30
  401d24:	ea56 0207 	orrs.w	r2, r6, r7
  401d28:	f801 3d01 	strb.w	r3, [r1, #-1]!
  401d2c:	d1f1      	bne.n	401d12 <_vfiprintf_r+0x23a>
  401d2e:	f018 0f01 	tst.w	r8, #1
  401d32:	9107      	str	r1, [sp, #28]
  401d34:	f040 83fc 	bne.w	402530 <_vfiprintf_r+0xa58>
  401d38:	ebc1 090a 	rsb	r9, r1, sl
  401d3c:	45e1      	cmp	r9, ip
  401d3e:	464e      	mov	r6, r9
  401d40:	bfb8      	it	lt
  401d42:	4666      	movlt	r6, ip
  401d44:	b105      	cbz	r5, 401d48 <_vfiprintf_r+0x270>
  401d46:	3601      	adds	r6, #1
  401d48:	f018 0302 	ands.w	r3, r8, #2
  401d4c:	9305      	str	r3, [sp, #20]
  401d4e:	bf18      	it	ne
  401d50:	3602      	addne	r6, #2
  401d52:	f018 0384 	ands.w	r3, r8, #132	; 0x84
  401d56:	9306      	str	r3, [sp, #24]
  401d58:	f040 81fa 	bne.w	402150 <_vfiprintf_r+0x678>
  401d5c:	9b03      	ldr	r3, [sp, #12]
  401d5e:	1b9d      	subs	r5, r3, r6
  401d60:	2d00      	cmp	r5, #0
  401d62:	f340 81f5 	ble.w	402150 <_vfiprintf_r+0x678>
  401d66:	2d10      	cmp	r5, #16
  401d68:	f340 848c 	ble.w	402684 <_vfiprintf_r+0xbac>
  401d6c:	f8dd e038 	ldr.w	lr, [sp, #56]	; 0x38
  401d70:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401d72:	4fc6      	ldr	r7, [pc, #792]	; (40208c <_vfiprintf_r+0x5b4>)
  401d74:	4620      	mov	r0, r4
  401d76:	2310      	movs	r3, #16
  401d78:	4664      	mov	r4, ip
  401d7a:	4671      	mov	r1, lr
  401d7c:	4684      	mov	ip, r0
  401d7e:	e007      	b.n	401d90 <_vfiprintf_r+0x2b8>
  401d80:	f101 0e02 	add.w	lr, r1, #2
  401d84:	f10c 0c08 	add.w	ip, ip, #8
  401d88:	4601      	mov	r1, r0
  401d8a:	3d10      	subs	r5, #16
  401d8c:	2d10      	cmp	r5, #16
  401d8e:	dd13      	ble.n	401db8 <_vfiprintf_r+0x2e0>
  401d90:	1c48      	adds	r0, r1, #1
  401d92:	3210      	adds	r2, #16
  401d94:	2807      	cmp	r0, #7
  401d96:	920f      	str	r2, [sp, #60]	; 0x3c
  401d98:	f8cc 7000 	str.w	r7, [ip]
  401d9c:	f8cc 3004 	str.w	r3, [ip, #4]
  401da0:	900e      	str	r0, [sp, #56]	; 0x38
  401da2:	dded      	ble.n	401d80 <_vfiprintf_r+0x2a8>
  401da4:	2a00      	cmp	r2, #0
  401da6:	f040 81c3 	bne.w	402130 <_vfiprintf_r+0x658>
  401daa:	3d10      	subs	r5, #16
  401dac:	2d10      	cmp	r5, #16
  401dae:	4611      	mov	r1, r2
  401db0:	f04f 0e01 	mov.w	lr, #1
  401db4:	46d4      	mov	ip, sl
  401db6:	dceb      	bgt.n	401d90 <_vfiprintf_r+0x2b8>
  401db8:	4663      	mov	r3, ip
  401dba:	4671      	mov	r1, lr
  401dbc:	46a4      	mov	ip, r4
  401dbe:	461c      	mov	r4, r3
  401dc0:	442a      	add	r2, r5
  401dc2:	2907      	cmp	r1, #7
  401dc4:	920f      	str	r2, [sp, #60]	; 0x3c
  401dc6:	6027      	str	r7, [r4, #0]
  401dc8:	6065      	str	r5, [r4, #4]
  401dca:	910e      	str	r1, [sp, #56]	; 0x38
  401dcc:	f300 8346 	bgt.w	40245c <_vfiprintf_r+0x984>
  401dd0:	3408      	adds	r4, #8
  401dd2:	1c48      	adds	r0, r1, #1
  401dd4:	e1bf      	b.n	402156 <_vfiprintf_r+0x67e>
  401dd6:	4658      	mov	r0, fp
  401dd8:	f048 0804 	orr.w	r8, r8, #4
  401ddc:	f89b 3000 	ldrb.w	r3, [fp]
  401de0:	e6e3      	b.n	401baa <_vfiprintf_r+0xd2>
  401de2:	f018 0320 	ands.w	r3, r8, #32
  401de6:	9503      	str	r5, [sp, #12]
  401de8:	46b4      	mov	ip, r6
  401dea:	d062      	beq.n	401eb2 <_vfiprintf_r+0x3da>
  401dec:	9b04      	ldr	r3, [sp, #16]
  401dee:	3307      	adds	r3, #7
  401df0:	f023 0307 	bic.w	r3, r3, #7
  401df4:	f103 0208 	add.w	r2, r3, #8
  401df8:	e9d3 6700 	ldrd	r6, r7, [r3]
  401dfc:	9204      	str	r2, [sp, #16]
  401dfe:	2300      	movs	r3, #0
  401e00:	e76d      	b.n	401cde <_vfiprintf_r+0x206>
  401e02:	f048 0840 	orr.w	r8, r8, #64	; 0x40
  401e06:	f89b 3000 	ldrb.w	r3, [fp]
  401e0a:	4658      	mov	r0, fp
  401e0c:	e6cd      	b.n	401baa <_vfiprintf_r+0xd2>
  401e0e:	f048 0880 	orr.w	r8, r8, #128	; 0x80
  401e12:	f89b 3000 	ldrb.w	r3, [fp]
  401e16:	4658      	mov	r0, fp
  401e18:	e6c7      	b.n	401baa <_vfiprintf_r+0xd2>
  401e1a:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  401e1e:	2500      	movs	r5, #0
  401e20:	f81b 3b01 	ldrb.w	r3, [fp], #1
  401e24:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  401e28:	eb02 0545 	add.w	r5, r2, r5, lsl #1
  401e2c:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  401e30:	2a09      	cmp	r2, #9
  401e32:	d9f5      	bls.n	401e20 <_vfiprintf_r+0x348>
  401e34:	e6bb      	b.n	401bae <_vfiprintf_r+0xd6>
  401e36:	f048 0810 	orr.w	r8, r8, #16
  401e3a:	f018 0f20 	tst.w	r8, #32
  401e3e:	9503      	str	r5, [sp, #12]
  401e40:	46b4      	mov	ip, r6
  401e42:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  401e46:	f000 809b 	beq.w	401f80 <_vfiprintf_r+0x4a8>
  401e4a:	9904      	ldr	r1, [sp, #16]
  401e4c:	3107      	adds	r1, #7
  401e4e:	f021 0107 	bic.w	r1, r1, #7
  401e52:	e9d1 2300 	ldrd	r2, r3, [r1]
  401e56:	3108      	adds	r1, #8
  401e58:	9104      	str	r1, [sp, #16]
  401e5a:	4616      	mov	r6, r2
  401e5c:	461f      	mov	r7, r3
  401e5e:	2a00      	cmp	r2, #0
  401e60:	f173 0300 	sbcs.w	r3, r3, #0
  401e64:	f2c0 83a6 	blt.w	4025b4 <_vfiprintf_r+0xadc>
  401e68:	f1bc 0f00 	cmp.w	ip, #0
  401e6c:	bfa8      	it	ge
  401e6e:	f028 0880 	bicge.w	r8, r8, #128	; 0x80
  401e72:	ea56 0207 	orrs.w	r2, r6, r7
  401e76:	f89d 502f 	ldrb.w	r5, [sp, #47]	; 0x2f
  401e7a:	46e1      	mov	r9, ip
  401e7c:	f04f 0301 	mov.w	r3, #1
  401e80:	f43f af3c 	beq.w	401cfc <_vfiprintf_r+0x224>
  401e84:	2b01      	cmp	r3, #1
  401e86:	f47f af40 	bne.w	401d0a <_vfiprintf_r+0x232>
  401e8a:	2f00      	cmp	r7, #0
  401e8c:	bf08      	it	eq
  401e8e:	2e0a      	cmpeq	r6, #10
  401e90:	f080 8334 	bcs.w	4024fc <_vfiprintf_r+0xa24>
  401e94:	ab2a      	add	r3, sp, #168	; 0xa8
  401e96:	3630      	adds	r6, #48	; 0x30
  401e98:	f803 6d41 	strb.w	r6, [r3, #-65]!
  401e9c:	ebc3 090a 	rsb	r9, r3, sl
  401ea0:	9307      	str	r3, [sp, #28]
  401ea2:	e74b      	b.n	401d3c <_vfiprintf_r+0x264>
  401ea4:	f048 0810 	orr.w	r8, r8, #16
  401ea8:	f018 0320 	ands.w	r3, r8, #32
  401eac:	9503      	str	r5, [sp, #12]
  401eae:	46b4      	mov	ip, r6
  401eb0:	d19c      	bne.n	401dec <_vfiprintf_r+0x314>
  401eb2:	f018 0210 	ands.w	r2, r8, #16
  401eb6:	f040 82f7 	bne.w	4024a8 <_vfiprintf_r+0x9d0>
  401eba:	f018 0340 	ands.w	r3, r8, #64	; 0x40
  401ebe:	f000 82f3 	beq.w	4024a8 <_vfiprintf_r+0x9d0>
  401ec2:	9904      	ldr	r1, [sp, #16]
  401ec4:	4613      	mov	r3, r2
  401ec6:	460a      	mov	r2, r1
  401ec8:	3204      	adds	r2, #4
  401eca:	880e      	ldrh	r6, [r1, #0]
  401ecc:	9204      	str	r2, [sp, #16]
  401ece:	2700      	movs	r7, #0
  401ed0:	e705      	b.n	401cde <_vfiprintf_r+0x206>
  401ed2:	f048 0810 	orr.w	r8, r8, #16
  401ed6:	f018 0f20 	tst.w	r8, #32
  401eda:	9503      	str	r5, [sp, #12]
  401edc:	46b4      	mov	ip, r6
  401ede:	f47f aef4 	bne.w	401cca <_vfiprintf_r+0x1f2>
  401ee2:	9a04      	ldr	r2, [sp, #16]
  401ee4:	f018 0f10 	tst.w	r8, #16
  401ee8:	4613      	mov	r3, r2
  401eea:	f040 82e4 	bne.w	4024b6 <_vfiprintf_r+0x9de>
  401eee:	f018 0f40 	tst.w	r8, #64	; 0x40
  401ef2:	f000 82e0 	beq.w	4024b6 <_vfiprintf_r+0x9de>
  401ef6:	8816      	ldrh	r6, [r2, #0]
  401ef8:	3204      	adds	r2, #4
  401efa:	2700      	movs	r7, #0
  401efc:	2301      	movs	r3, #1
  401efe:	9204      	str	r2, [sp, #16]
  401f00:	e6ed      	b.n	401cde <_vfiprintf_r+0x206>
  401f02:	4a63      	ldr	r2, [pc, #396]	; (402090 <_vfiprintf_r+0x5b8>)
  401f04:	9503      	str	r5, [sp, #12]
  401f06:	f018 0f20 	tst.w	r8, #32
  401f0a:	46b4      	mov	ip, r6
  401f0c:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  401f10:	9209      	str	r2, [sp, #36]	; 0x24
  401f12:	f000 8090 	beq.w	402036 <_vfiprintf_r+0x55e>
  401f16:	9a04      	ldr	r2, [sp, #16]
  401f18:	3207      	adds	r2, #7
  401f1a:	f022 0207 	bic.w	r2, r2, #7
  401f1e:	e9d2 6700 	ldrd	r6, r7, [r2]
  401f22:	f102 0108 	add.w	r1, r2, #8
  401f26:	9104      	str	r1, [sp, #16]
  401f28:	f018 0f01 	tst.w	r8, #1
  401f2c:	f000 8290 	beq.w	402450 <_vfiprintf_r+0x978>
  401f30:	ea56 0207 	orrs.w	r2, r6, r7
  401f34:	f000 828c 	beq.w	402450 <_vfiprintf_r+0x978>
  401f38:	2230      	movs	r2, #48	; 0x30
  401f3a:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
  401f3e:	f048 0802 	orr.w	r8, r8, #2
  401f42:	f88d 2030 	strb.w	r2, [sp, #48]	; 0x30
  401f46:	2302      	movs	r3, #2
  401f48:	e6c9      	b.n	401cde <_vfiprintf_r+0x206>
  401f4a:	9a04      	ldr	r2, [sp, #16]
  401f4c:	9503      	str	r5, [sp, #12]
  401f4e:	6813      	ldr	r3, [r2, #0]
  401f50:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
  401f54:	4613      	mov	r3, r2
  401f56:	3304      	adds	r3, #4
  401f58:	2601      	movs	r6, #1
  401f5a:	f04f 0100 	mov.w	r1, #0
  401f5e:	9304      	str	r3, [sp, #16]
  401f60:	ab10      	add	r3, sp, #64	; 0x40
  401f62:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  401f66:	46b1      	mov	r9, r6
  401f68:	9307      	str	r3, [sp, #28]
  401f6a:	f04f 0c00 	mov.w	ip, #0
  401f6e:	e6eb      	b.n	401d48 <_vfiprintf_r+0x270>
  401f70:	f018 0f20 	tst.w	r8, #32
  401f74:	9503      	str	r5, [sp, #12]
  401f76:	46b4      	mov	ip, r6
  401f78:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  401f7c:	f47f af65 	bne.w	401e4a <_vfiprintf_r+0x372>
  401f80:	f018 0f10 	tst.w	r8, #16
  401f84:	f040 82a2 	bne.w	4024cc <_vfiprintf_r+0x9f4>
  401f88:	f018 0f40 	tst.w	r8, #64	; 0x40
  401f8c:	f000 829e 	beq.w	4024cc <_vfiprintf_r+0x9f4>
  401f90:	9904      	ldr	r1, [sp, #16]
  401f92:	f9b1 6000 	ldrsh.w	r6, [r1]
  401f96:	3104      	adds	r1, #4
  401f98:	17f7      	asrs	r7, r6, #31
  401f9a:	4632      	mov	r2, r6
  401f9c:	463b      	mov	r3, r7
  401f9e:	9104      	str	r1, [sp, #16]
  401fa0:	e75d      	b.n	401e5e <_vfiprintf_r+0x386>
  401fa2:	9904      	ldr	r1, [sp, #16]
  401fa4:	9503      	str	r5, [sp, #12]
  401fa6:	2330      	movs	r3, #48	; 0x30
  401fa8:	460a      	mov	r2, r1
  401faa:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
  401fae:	2378      	movs	r3, #120	; 0x78
  401fb0:	3204      	adds	r2, #4
  401fb2:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
  401fb6:	4b37      	ldr	r3, [pc, #220]	; (402094 <_vfiprintf_r+0x5bc>)
  401fb8:	9309      	str	r3, [sp, #36]	; 0x24
  401fba:	46b4      	mov	ip, r6
  401fbc:	f048 0802 	orr.w	r8, r8, #2
  401fc0:	680e      	ldr	r6, [r1, #0]
  401fc2:	9204      	str	r2, [sp, #16]
  401fc4:	2700      	movs	r7, #0
  401fc6:	2302      	movs	r3, #2
  401fc8:	e689      	b.n	401cde <_vfiprintf_r+0x206>
  401fca:	f048 0820 	orr.w	r8, r8, #32
  401fce:	f89b 3000 	ldrb.w	r3, [fp]
  401fd2:	4658      	mov	r0, fp
  401fd4:	e5e9      	b.n	401baa <_vfiprintf_r+0xd2>
  401fd6:	9a04      	ldr	r2, [sp, #16]
  401fd8:	9503      	str	r5, [sp, #12]
  401fda:	6813      	ldr	r3, [r2, #0]
  401fdc:	9307      	str	r3, [sp, #28]
  401fde:	f04f 0100 	mov.w	r1, #0
  401fe2:	46b4      	mov	ip, r6
  401fe4:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  401fe8:	1d16      	adds	r6, r2, #4
  401fea:	2b00      	cmp	r3, #0
  401fec:	f000 8350 	beq.w	402690 <_vfiprintf_r+0xbb8>
  401ff0:	f1bc 0f00 	cmp.w	ip, #0
  401ff4:	f2c0 832a 	blt.w	40264c <_vfiprintf_r+0xb74>
  401ff8:	9d07      	ldr	r5, [sp, #28]
  401ffa:	f8cd c010 	str.w	ip, [sp, #16]
  401ffe:	4662      	mov	r2, ip
  402000:	4628      	mov	r0, r5
  402002:	2100      	movs	r1, #0
  402004:	f001 fbd6 	bl	4037b4 <memchr>
  402008:	f8dd c010 	ldr.w	ip, [sp, #16]
  40200c:	2800      	cmp	r0, #0
  40200e:	f000 8350 	beq.w	4026b2 <_vfiprintf_r+0xbda>
  402012:	ebc5 0900 	rsb	r9, r5, r0
  402016:	9604      	str	r6, [sp, #16]
  402018:	f89d 502f 	ldrb.w	r5, [sp, #47]	; 0x2f
  40201c:	f04f 0c00 	mov.w	ip, #0
  402020:	e68c      	b.n	401d3c <_vfiprintf_r+0x264>
  402022:	4a1c      	ldr	r2, [pc, #112]	; (402094 <_vfiprintf_r+0x5bc>)
  402024:	9503      	str	r5, [sp, #12]
  402026:	f018 0f20 	tst.w	r8, #32
  40202a:	46b4      	mov	ip, r6
  40202c:	9209      	str	r2, [sp, #36]	; 0x24
  40202e:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  402032:	f47f af70 	bne.w	401f16 <_vfiprintf_r+0x43e>
  402036:	9904      	ldr	r1, [sp, #16]
  402038:	f018 0f10 	tst.w	r8, #16
  40203c:	460a      	mov	r2, r1
  40203e:	f040 8240 	bne.w	4024c2 <_vfiprintf_r+0x9ea>
  402042:	f018 0f40 	tst.w	r8, #64	; 0x40
  402046:	f000 823c 	beq.w	4024c2 <_vfiprintf_r+0x9ea>
  40204a:	3204      	adds	r2, #4
  40204c:	880e      	ldrh	r6, [r1, #0]
  40204e:	9204      	str	r2, [sp, #16]
  402050:	2700      	movs	r7, #0
  402052:	e769      	b.n	401f28 <_vfiprintf_r+0x450>
  402054:	f89b 3000 	ldrb.w	r3, [fp]
  402058:	2b6c      	cmp	r3, #108	; 0x6c
  40205a:	f000 82ea 	beq.w	402632 <_vfiprintf_r+0xb5a>
  40205e:	f048 0810 	orr.w	r8, r8, #16
  402062:	4658      	mov	r0, fp
  402064:	e5a1      	b.n	401baa <_vfiprintf_r+0xd2>
  402066:	9a04      	ldr	r2, [sp, #16]
  402068:	6815      	ldr	r5, [r2, #0]
  40206a:	4613      	mov	r3, r2
  40206c:	2d00      	cmp	r5, #0
  40206e:	f103 0304 	add.w	r3, r3, #4
  402072:	f2c0 82e6 	blt.w	402642 <_vfiprintf_r+0xb6a>
  402076:	9304      	str	r3, [sp, #16]
  402078:	f89b 3000 	ldrb.w	r3, [fp]
  40207c:	4658      	mov	r0, fp
  40207e:	e594      	b.n	401baa <_vfiprintf_r+0xd2>
  402080:	f89b 3000 	ldrb.w	r3, [fp]
  402084:	4658      	mov	r0, fp
  402086:	212b      	movs	r1, #43	; 0x2b
  402088:	e58f      	b.n	401baa <_vfiprintf_r+0xd2>
  40208a:	bf00      	nop
  40208c:	00404924 	.word	0x00404924
  402090:	004048f4 	.word	0x004048f4
  402094:	00404908 	.word	0x00404908
  402098:	f89b 3000 	ldrb.w	r3, [fp]
  40209c:	2b2a      	cmp	r3, #42	; 0x2a
  40209e:	f10b 0001 	add.w	r0, fp, #1
  4020a2:	f000 830f 	beq.w	4026c4 <_vfiprintf_r+0xbec>
  4020a6:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  4020aa:	2a09      	cmp	r2, #9
  4020ac:	4683      	mov	fp, r0
  4020ae:	f04f 0600 	mov.w	r6, #0
  4020b2:	f63f ad7c 	bhi.w	401bae <_vfiprintf_r+0xd6>
  4020b6:	f81b 3b01 	ldrb.w	r3, [fp], #1
  4020ba:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  4020be:	eb02 0646 	add.w	r6, r2, r6, lsl #1
  4020c2:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  4020c6:	2a09      	cmp	r2, #9
  4020c8:	d9f5      	bls.n	4020b6 <_vfiprintf_r+0x5de>
  4020ca:	ea46 76e6 	orr.w	r6, r6, r6, asr #31
  4020ce:	e56e      	b.n	401bae <_vfiprintf_r+0xd6>
  4020d0:	f018 0f20 	tst.w	r8, #32
  4020d4:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  4020d8:	f000 8283 	beq.w	4025e2 <_vfiprintf_r+0xb0a>
  4020dc:	9a04      	ldr	r2, [sp, #16]
  4020de:	9902      	ldr	r1, [sp, #8]
  4020e0:	6813      	ldr	r3, [r2, #0]
  4020e2:	17cf      	asrs	r7, r1, #31
  4020e4:	4608      	mov	r0, r1
  4020e6:	3204      	adds	r2, #4
  4020e8:	4639      	mov	r1, r7
  4020ea:	9204      	str	r2, [sp, #16]
  4020ec:	e9c3 0100 	strd	r0, r1, [r3]
  4020f0:	e524      	b.n	401b3c <_vfiprintf_r+0x64>
  4020f2:	4658      	mov	r0, fp
  4020f4:	f89b 3000 	ldrb.w	r3, [fp]
  4020f8:	2900      	cmp	r1, #0
  4020fa:	f47f ad56 	bne.w	401baa <_vfiprintf_r+0xd2>
  4020fe:	2120      	movs	r1, #32
  402100:	e553      	b.n	401baa <_vfiprintf_r+0xd2>
  402102:	f048 0801 	orr.w	r8, r8, #1
  402106:	4658      	mov	r0, fp
  402108:	f89b 3000 	ldrb.w	r3, [fp]
  40210c:	e54d      	b.n	401baa <_vfiprintf_r+0xd2>
  40210e:	9503      	str	r5, [sp, #12]
  402110:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  402114:	2b00      	cmp	r3, #0
  402116:	f000 809c 	beq.w	402252 <_vfiprintf_r+0x77a>
  40211a:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
  40211e:	f04f 0300 	mov.w	r3, #0
  402122:	2601      	movs	r6, #1
  402124:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  402128:	ab10      	add	r3, sp, #64	; 0x40
  40212a:	46b1      	mov	r9, r6
  40212c:	9307      	str	r3, [sp, #28]
  40212e:	e71c      	b.n	401f6a <_vfiprintf_r+0x492>
  402130:	9801      	ldr	r0, [sp, #4]
  402132:	9900      	ldr	r1, [sp, #0]
  402134:	9308      	str	r3, [sp, #32]
  402136:	aa0d      	add	r2, sp, #52	; 0x34
  402138:	f7ff fc92 	bl	401a60 <__sprint_r.part.0>
  40213c:	2800      	cmp	r0, #0
  40213e:	f040 808f 	bne.w	402260 <_vfiprintf_r+0x788>
  402142:	990e      	ldr	r1, [sp, #56]	; 0x38
  402144:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402146:	9b08      	ldr	r3, [sp, #32]
  402148:	f101 0e01 	add.w	lr, r1, #1
  40214c:	46d4      	mov	ip, sl
  40214e:	e61c      	b.n	401d8a <_vfiprintf_r+0x2b2>
  402150:	990e      	ldr	r1, [sp, #56]	; 0x38
  402152:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402154:	1c48      	adds	r0, r1, #1
  402156:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
  40215a:	b16b      	cbz	r3, 402178 <_vfiprintf_r+0x6a0>
  40215c:	3201      	adds	r2, #1
  40215e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
  402162:	2101      	movs	r1, #1
  402164:	2807      	cmp	r0, #7
  402166:	920f      	str	r2, [sp, #60]	; 0x3c
  402168:	900e      	str	r0, [sp, #56]	; 0x38
  40216a:	6023      	str	r3, [r4, #0]
  40216c:	6061      	str	r1, [r4, #4]
  40216e:	f300 8134 	bgt.w	4023da <_vfiprintf_r+0x902>
  402172:	4601      	mov	r1, r0
  402174:	3408      	adds	r4, #8
  402176:	3001      	adds	r0, #1
  402178:	9b05      	ldr	r3, [sp, #20]
  40217a:	b163      	cbz	r3, 402196 <_vfiprintf_r+0x6be>
  40217c:	3202      	adds	r2, #2
  40217e:	a90c      	add	r1, sp, #48	; 0x30
  402180:	2302      	movs	r3, #2
  402182:	2807      	cmp	r0, #7
  402184:	920f      	str	r2, [sp, #60]	; 0x3c
  402186:	900e      	str	r0, [sp, #56]	; 0x38
  402188:	e884 000a 	stmia.w	r4, {r1, r3}
  40218c:	f300 8134 	bgt.w	4023f8 <_vfiprintf_r+0x920>
  402190:	4601      	mov	r1, r0
  402192:	3408      	adds	r4, #8
  402194:	3001      	adds	r0, #1
  402196:	9b06      	ldr	r3, [sp, #24]
  402198:	2b80      	cmp	r3, #128	; 0x80
  40219a:	f000 80d4 	beq.w	402346 <_vfiprintf_r+0x86e>
  40219e:	ebc9 070c 	rsb	r7, r9, ip
  4021a2:	2f00      	cmp	r7, #0
  4021a4:	dd2b      	ble.n	4021fe <_vfiprintf_r+0x726>
  4021a6:	2f10      	cmp	r7, #16
  4021a8:	4daa      	ldr	r5, [pc, #680]	; (402454 <_vfiprintf_r+0x97c>)
  4021aa:	dd1f      	ble.n	4021ec <_vfiprintf_r+0x714>
  4021ac:	46a6      	mov	lr, r4
  4021ae:	2310      	movs	r3, #16
  4021b0:	9c01      	ldr	r4, [sp, #4]
  4021b2:	e007      	b.n	4021c4 <_vfiprintf_r+0x6ec>
  4021b4:	f101 0c02 	add.w	ip, r1, #2
  4021b8:	f10e 0e08 	add.w	lr, lr, #8
  4021bc:	4601      	mov	r1, r0
  4021be:	3f10      	subs	r7, #16
  4021c0:	2f10      	cmp	r7, #16
  4021c2:	dd11      	ble.n	4021e8 <_vfiprintf_r+0x710>
  4021c4:	1c48      	adds	r0, r1, #1
  4021c6:	3210      	adds	r2, #16
  4021c8:	2807      	cmp	r0, #7
  4021ca:	920f      	str	r2, [sp, #60]	; 0x3c
  4021cc:	f8ce 5000 	str.w	r5, [lr]
  4021d0:	f8ce 3004 	str.w	r3, [lr, #4]
  4021d4:	900e      	str	r0, [sp, #56]	; 0x38
  4021d6:	dded      	ble.n	4021b4 <_vfiprintf_r+0x6dc>
  4021d8:	bb6a      	cbnz	r2, 402236 <_vfiprintf_r+0x75e>
  4021da:	3f10      	subs	r7, #16
  4021dc:	2f10      	cmp	r7, #16
  4021de:	f04f 0c01 	mov.w	ip, #1
  4021e2:	4611      	mov	r1, r2
  4021e4:	46d6      	mov	lr, sl
  4021e6:	dced      	bgt.n	4021c4 <_vfiprintf_r+0x6ec>
  4021e8:	4674      	mov	r4, lr
  4021ea:	4660      	mov	r0, ip
  4021ec:	443a      	add	r2, r7
  4021ee:	2807      	cmp	r0, #7
  4021f0:	920f      	str	r2, [sp, #60]	; 0x3c
  4021f2:	e884 00a0 	stmia.w	r4, {r5, r7}
  4021f6:	900e      	str	r0, [sp, #56]	; 0x38
  4021f8:	dc3b      	bgt.n	402272 <_vfiprintf_r+0x79a>
  4021fa:	3408      	adds	r4, #8
  4021fc:	3001      	adds	r0, #1
  4021fe:	eb02 0309 	add.w	r3, r2, r9
  402202:	9a07      	ldr	r2, [sp, #28]
  402204:	930f      	str	r3, [sp, #60]	; 0x3c
  402206:	2807      	cmp	r0, #7
  402208:	e884 0204 	stmia.w	r4, {r2, r9}
  40220c:	900e      	str	r0, [sp, #56]	; 0x38
  40220e:	dd3d      	ble.n	40228c <_vfiprintf_r+0x7b4>
  402210:	2b00      	cmp	r3, #0
  402212:	f040 813e 	bne.w	402492 <_vfiprintf_r+0x9ba>
  402216:	f018 0f04 	tst.w	r8, #4
  40221a:	930e      	str	r3, [sp, #56]	; 0x38
  40221c:	f040 812f 	bne.w	40247e <_vfiprintf_r+0x9a6>
  402220:	9b02      	ldr	r3, [sp, #8]
  402222:	9a03      	ldr	r2, [sp, #12]
  402224:	4296      	cmp	r6, r2
  402226:	bfac      	ite	ge
  402228:	199b      	addge	r3, r3, r6
  40222a:	189b      	addlt	r3, r3, r2
  40222c:	9302      	str	r3, [sp, #8]
  40222e:	2300      	movs	r3, #0
  402230:	930e      	str	r3, [sp, #56]	; 0x38
  402232:	4654      	mov	r4, sl
  402234:	e482      	b.n	401b3c <_vfiprintf_r+0x64>
  402236:	4620      	mov	r0, r4
  402238:	9900      	ldr	r1, [sp, #0]
  40223a:	9305      	str	r3, [sp, #20]
  40223c:	aa0d      	add	r2, sp, #52	; 0x34
  40223e:	f7ff fc0f 	bl	401a60 <__sprint_r.part.0>
  402242:	b968      	cbnz	r0, 402260 <_vfiprintf_r+0x788>
  402244:	990e      	ldr	r1, [sp, #56]	; 0x38
  402246:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402248:	9b05      	ldr	r3, [sp, #20]
  40224a:	f101 0c01 	add.w	ip, r1, #1
  40224e:	46d6      	mov	lr, sl
  402250:	e7b5      	b.n	4021be <_vfiprintf_r+0x6e6>
  402252:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  402254:	b123      	cbz	r3, 402260 <_vfiprintf_r+0x788>
  402256:	9801      	ldr	r0, [sp, #4]
  402258:	9900      	ldr	r1, [sp, #0]
  40225a:	aa0d      	add	r2, sp, #52	; 0x34
  40225c:	f7ff fc00 	bl	401a60 <__sprint_r.part.0>
  402260:	9b00      	ldr	r3, [sp, #0]
  402262:	899b      	ldrh	r3, [r3, #12]
  402264:	065b      	lsls	r3, r3, #25
  402266:	f53f ad22 	bmi.w	401cae <_vfiprintf_r+0x1d6>
  40226a:	9802      	ldr	r0, [sp, #8]
  40226c:	b02b      	add	sp, #172	; 0xac
  40226e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402272:	2a00      	cmp	r2, #0
  402274:	f040 8191 	bne.w	40259a <_vfiprintf_r+0xac2>
  402278:	2201      	movs	r2, #1
  40227a:	9907      	ldr	r1, [sp, #28]
  40227c:	f8cd 906c 	str.w	r9, [sp, #108]	; 0x6c
  402280:	464b      	mov	r3, r9
  402282:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  402286:	911a      	str	r1, [sp, #104]	; 0x68
  402288:	920e      	str	r2, [sp, #56]	; 0x38
  40228a:	4654      	mov	r4, sl
  40228c:	f104 0208 	add.w	r2, r4, #8
  402290:	f018 0f04 	tst.w	r8, #4
  402294:	d039      	beq.n	40230a <_vfiprintf_r+0x832>
  402296:	9903      	ldr	r1, [sp, #12]
  402298:	1b8d      	subs	r5, r1, r6
  40229a:	2d00      	cmp	r5, #0
  40229c:	dd35      	ble.n	40230a <_vfiprintf_r+0x832>
  40229e:	2d10      	cmp	r5, #16
  4022a0:	f340 8202 	ble.w	4026a8 <_vfiprintf_r+0xbd0>
  4022a4:	980e      	ldr	r0, [sp, #56]	; 0x38
  4022a6:	4f6c      	ldr	r7, [pc, #432]	; (402458 <_vfiprintf_r+0x980>)
  4022a8:	f8dd 8004 	ldr.w	r8, [sp, #4]
  4022ac:	f8dd 9000 	ldr.w	r9, [sp]
  4022b0:	2410      	movs	r4, #16
  4022b2:	e006      	b.n	4022c2 <_vfiprintf_r+0x7ea>
  4022b4:	f100 0e02 	add.w	lr, r0, #2
  4022b8:	3208      	adds	r2, #8
  4022ba:	4608      	mov	r0, r1
  4022bc:	3d10      	subs	r5, #16
  4022be:	2d10      	cmp	r5, #16
  4022c0:	dd10      	ble.n	4022e4 <_vfiprintf_r+0x80c>
  4022c2:	1c41      	adds	r1, r0, #1
  4022c4:	3310      	adds	r3, #16
  4022c6:	2907      	cmp	r1, #7
  4022c8:	930f      	str	r3, [sp, #60]	; 0x3c
  4022ca:	6017      	str	r7, [r2, #0]
  4022cc:	6054      	str	r4, [r2, #4]
  4022ce:	910e      	str	r1, [sp, #56]	; 0x38
  4022d0:	ddf0      	ble.n	4022b4 <_vfiprintf_r+0x7dc>
  4022d2:	2b00      	cmp	r3, #0
  4022d4:	d12a      	bne.n	40232c <_vfiprintf_r+0x854>
  4022d6:	3d10      	subs	r5, #16
  4022d8:	2d10      	cmp	r5, #16
  4022da:	f04f 0e01 	mov.w	lr, #1
  4022de:	4618      	mov	r0, r3
  4022e0:	4652      	mov	r2, sl
  4022e2:	dcee      	bgt.n	4022c2 <_vfiprintf_r+0x7ea>
  4022e4:	442b      	add	r3, r5
  4022e6:	f1be 0f07 	cmp.w	lr, #7
  4022ea:	930f      	str	r3, [sp, #60]	; 0x3c
  4022ec:	6017      	str	r7, [r2, #0]
  4022ee:	6055      	str	r5, [r2, #4]
  4022f0:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  4022f4:	dd09      	ble.n	40230a <_vfiprintf_r+0x832>
  4022f6:	2b00      	cmp	r3, #0
  4022f8:	d092      	beq.n	402220 <_vfiprintf_r+0x748>
  4022fa:	9801      	ldr	r0, [sp, #4]
  4022fc:	9900      	ldr	r1, [sp, #0]
  4022fe:	aa0d      	add	r2, sp, #52	; 0x34
  402300:	f7ff fbae 	bl	401a60 <__sprint_r.part.0>
  402304:	2800      	cmp	r0, #0
  402306:	d1ab      	bne.n	402260 <_vfiprintf_r+0x788>
  402308:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40230a:	9a02      	ldr	r2, [sp, #8]
  40230c:	9903      	ldr	r1, [sp, #12]
  40230e:	428e      	cmp	r6, r1
  402310:	bfac      	ite	ge
  402312:	1992      	addge	r2, r2, r6
  402314:	1852      	addlt	r2, r2, r1
  402316:	9202      	str	r2, [sp, #8]
  402318:	2b00      	cmp	r3, #0
  40231a:	d088      	beq.n	40222e <_vfiprintf_r+0x756>
  40231c:	9801      	ldr	r0, [sp, #4]
  40231e:	9900      	ldr	r1, [sp, #0]
  402320:	aa0d      	add	r2, sp, #52	; 0x34
  402322:	f7ff fb9d 	bl	401a60 <__sprint_r.part.0>
  402326:	2800      	cmp	r0, #0
  402328:	d081      	beq.n	40222e <_vfiprintf_r+0x756>
  40232a:	e799      	b.n	402260 <_vfiprintf_r+0x788>
  40232c:	4640      	mov	r0, r8
  40232e:	4649      	mov	r1, r9
  402330:	aa0d      	add	r2, sp, #52	; 0x34
  402332:	f7ff fb95 	bl	401a60 <__sprint_r.part.0>
  402336:	2800      	cmp	r0, #0
  402338:	d192      	bne.n	402260 <_vfiprintf_r+0x788>
  40233a:	980e      	ldr	r0, [sp, #56]	; 0x38
  40233c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40233e:	f100 0e01 	add.w	lr, r0, #1
  402342:	4652      	mov	r2, sl
  402344:	e7ba      	b.n	4022bc <_vfiprintf_r+0x7e4>
  402346:	9b03      	ldr	r3, [sp, #12]
  402348:	1b9f      	subs	r7, r3, r6
  40234a:	2f00      	cmp	r7, #0
  40234c:	f77f af27 	ble.w	40219e <_vfiprintf_r+0x6c6>
  402350:	2f10      	cmp	r7, #16
  402352:	4d40      	ldr	r5, [pc, #256]	; (402454 <_vfiprintf_r+0x97c>)
  402354:	f340 81b4 	ble.w	4026c0 <_vfiprintf_r+0xbe8>
  402358:	4620      	mov	r0, r4
  40235a:	2310      	movs	r3, #16
  40235c:	4664      	mov	r4, ip
  40235e:	4684      	mov	ip, r0
  402360:	e007      	b.n	402372 <_vfiprintf_r+0x89a>
  402362:	f101 0e02 	add.w	lr, r1, #2
  402366:	f10c 0c08 	add.w	ip, ip, #8
  40236a:	4601      	mov	r1, r0
  40236c:	3f10      	subs	r7, #16
  40236e:	2f10      	cmp	r7, #16
  402370:	dd11      	ble.n	402396 <_vfiprintf_r+0x8be>
  402372:	1c48      	adds	r0, r1, #1
  402374:	3210      	adds	r2, #16
  402376:	2807      	cmp	r0, #7
  402378:	920f      	str	r2, [sp, #60]	; 0x3c
  40237a:	f8cc 5000 	str.w	r5, [ip]
  40237e:	f8cc 3004 	str.w	r3, [ip, #4]
  402382:	900e      	str	r0, [sp, #56]	; 0x38
  402384:	dded      	ble.n	402362 <_vfiprintf_r+0x88a>
  402386:	b9c2      	cbnz	r2, 4023ba <_vfiprintf_r+0x8e2>
  402388:	3f10      	subs	r7, #16
  40238a:	2f10      	cmp	r7, #16
  40238c:	f04f 0e01 	mov.w	lr, #1
  402390:	4611      	mov	r1, r2
  402392:	46d4      	mov	ip, sl
  402394:	dced      	bgt.n	402372 <_vfiprintf_r+0x89a>
  402396:	4663      	mov	r3, ip
  402398:	46a4      	mov	ip, r4
  40239a:	461c      	mov	r4, r3
  40239c:	443a      	add	r2, r7
  40239e:	f1be 0f07 	cmp.w	lr, #7
  4023a2:	920f      	str	r2, [sp, #60]	; 0x3c
  4023a4:	e884 00a0 	stmia.w	r4, {r5, r7}
  4023a8:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  4023ac:	f300 80ef 	bgt.w	40258e <_vfiprintf_r+0xab6>
  4023b0:	3408      	adds	r4, #8
  4023b2:	f10e 0001 	add.w	r0, lr, #1
  4023b6:	4671      	mov	r1, lr
  4023b8:	e6f1      	b.n	40219e <_vfiprintf_r+0x6c6>
  4023ba:	9801      	ldr	r0, [sp, #4]
  4023bc:	9900      	ldr	r1, [sp, #0]
  4023be:	9305      	str	r3, [sp, #20]
  4023c0:	aa0d      	add	r2, sp, #52	; 0x34
  4023c2:	f7ff fb4d 	bl	401a60 <__sprint_r.part.0>
  4023c6:	2800      	cmp	r0, #0
  4023c8:	f47f af4a 	bne.w	402260 <_vfiprintf_r+0x788>
  4023cc:	990e      	ldr	r1, [sp, #56]	; 0x38
  4023ce:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4023d0:	9b05      	ldr	r3, [sp, #20]
  4023d2:	f101 0e01 	add.w	lr, r1, #1
  4023d6:	46d4      	mov	ip, sl
  4023d8:	e7c8      	b.n	40236c <_vfiprintf_r+0x894>
  4023da:	2a00      	cmp	r2, #0
  4023dc:	f040 80c6 	bne.w	40256c <_vfiprintf_r+0xa94>
  4023e0:	9b05      	ldr	r3, [sp, #20]
  4023e2:	2b00      	cmp	r3, #0
  4023e4:	f000 8086 	beq.w	4024f4 <_vfiprintf_r+0xa1c>
  4023e8:	aa0c      	add	r2, sp, #48	; 0x30
  4023ea:	2302      	movs	r3, #2
  4023ec:	921a      	str	r2, [sp, #104]	; 0x68
  4023ee:	4608      	mov	r0, r1
  4023f0:	931b      	str	r3, [sp, #108]	; 0x6c
  4023f2:	461a      	mov	r2, r3
  4023f4:	4654      	mov	r4, sl
  4023f6:	e6cb      	b.n	402190 <_vfiprintf_r+0x6b8>
  4023f8:	2a00      	cmp	r2, #0
  4023fa:	f040 80a6 	bne.w	40254a <_vfiprintf_r+0xa72>
  4023fe:	2001      	movs	r0, #1
  402400:	4611      	mov	r1, r2
  402402:	4654      	mov	r4, sl
  402404:	e6c7      	b.n	402196 <_vfiprintf_r+0x6be>
  402406:	bb03      	cbnz	r3, 40244a <_vfiprintf_r+0x972>
  402408:	f018 0f01 	tst.w	r8, #1
  40240c:	d01d      	beq.n	40244a <_vfiprintf_r+0x972>
  40240e:	ab2a      	add	r3, sp, #168	; 0xa8
  402410:	2230      	movs	r2, #48	; 0x30
  402412:	f803 2d41 	strb.w	r2, [r3, #-65]!
  402416:	ebc3 090a 	rsb	r9, r3, sl
  40241a:	9307      	str	r3, [sp, #28]
  40241c:	e48e      	b.n	401d3c <_vfiprintf_r+0x264>
  40241e:	9809      	ldr	r0, [sp, #36]	; 0x24
  402420:	46d1      	mov	r9, sl
  402422:	0933      	lsrs	r3, r6, #4
  402424:	f006 010f 	and.w	r1, r6, #15
  402428:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  40242c:	093a      	lsrs	r2, r7, #4
  40242e:	461e      	mov	r6, r3
  402430:	4617      	mov	r7, r2
  402432:	5c43      	ldrb	r3, [r0, r1]
  402434:	f809 3d01 	strb.w	r3, [r9, #-1]!
  402438:	ea56 0307 	orrs.w	r3, r6, r7
  40243c:	d1f1      	bne.n	402422 <_vfiprintf_r+0x94a>
  40243e:	464b      	mov	r3, r9
  402440:	f8cd 901c 	str.w	r9, [sp, #28]
  402444:	ebc3 090a 	rsb	r9, r3, sl
  402448:	e478      	b.n	401d3c <_vfiprintf_r+0x264>
  40244a:	f8cd a01c 	str.w	sl, [sp, #28]
  40244e:	e475      	b.n	401d3c <_vfiprintf_r+0x264>
  402450:	2302      	movs	r3, #2
  402452:	e444      	b.n	401cde <_vfiprintf_r+0x206>
  402454:	004048e4 	.word	0x004048e4
  402458:	00404924 	.word	0x00404924
  40245c:	2a00      	cmp	r2, #0
  40245e:	f040 80d7 	bne.w	402610 <_vfiprintf_r+0xb38>
  402462:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
  402466:	2b00      	cmp	r3, #0
  402468:	f000 80ae 	beq.w	4025c8 <_vfiprintf_r+0xaf0>
  40246c:	2301      	movs	r3, #1
  40246e:	f10d 012f 	add.w	r1, sp, #47	; 0x2f
  402472:	4618      	mov	r0, r3
  402474:	931b      	str	r3, [sp, #108]	; 0x6c
  402476:	461a      	mov	r2, r3
  402478:	911a      	str	r1, [sp, #104]	; 0x68
  40247a:	4654      	mov	r4, sl
  40247c:	e679      	b.n	402172 <_vfiprintf_r+0x69a>
  40247e:	9a03      	ldr	r2, [sp, #12]
  402480:	1b95      	subs	r5, r2, r6
  402482:	2d00      	cmp	r5, #0
  402484:	4652      	mov	r2, sl
  402486:	f73f af0a 	bgt.w	40229e <_vfiprintf_r+0x7c6>
  40248a:	e6c9      	b.n	402220 <_vfiprintf_r+0x748>
  40248c:	465d      	mov	r5, fp
  40248e:	f7ff bb7c 	b.w	401b8a <_vfiprintf_r+0xb2>
  402492:	9801      	ldr	r0, [sp, #4]
  402494:	9900      	ldr	r1, [sp, #0]
  402496:	aa0d      	add	r2, sp, #52	; 0x34
  402498:	f7ff fae2 	bl	401a60 <__sprint_r.part.0>
  40249c:	2800      	cmp	r0, #0
  40249e:	f47f aedf 	bne.w	402260 <_vfiprintf_r+0x788>
  4024a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4024a4:	4652      	mov	r2, sl
  4024a6:	e6f3      	b.n	402290 <_vfiprintf_r+0x7b8>
  4024a8:	9904      	ldr	r1, [sp, #16]
  4024aa:	460a      	mov	r2, r1
  4024ac:	3204      	adds	r2, #4
  4024ae:	680e      	ldr	r6, [r1, #0]
  4024b0:	9204      	str	r2, [sp, #16]
  4024b2:	2700      	movs	r7, #0
  4024b4:	e413      	b.n	401cde <_vfiprintf_r+0x206>
  4024b6:	3204      	adds	r2, #4
  4024b8:	681e      	ldr	r6, [r3, #0]
  4024ba:	9204      	str	r2, [sp, #16]
  4024bc:	2301      	movs	r3, #1
  4024be:	2700      	movs	r7, #0
  4024c0:	e40d      	b.n	401cde <_vfiprintf_r+0x206>
  4024c2:	6816      	ldr	r6, [r2, #0]
  4024c4:	3204      	adds	r2, #4
  4024c6:	9204      	str	r2, [sp, #16]
  4024c8:	2700      	movs	r7, #0
  4024ca:	e52d      	b.n	401f28 <_vfiprintf_r+0x450>
  4024cc:	9a04      	ldr	r2, [sp, #16]
  4024ce:	6816      	ldr	r6, [r2, #0]
  4024d0:	4613      	mov	r3, r2
  4024d2:	3304      	adds	r3, #4
  4024d4:	17f7      	asrs	r7, r6, #31
  4024d6:	9304      	str	r3, [sp, #16]
  4024d8:	4632      	mov	r2, r6
  4024da:	463b      	mov	r3, r7
  4024dc:	e4bf      	b.n	401e5e <_vfiprintf_r+0x386>
  4024de:	9801      	ldr	r0, [sp, #4]
  4024e0:	9900      	ldr	r1, [sp, #0]
  4024e2:	aa0d      	add	r2, sp, #52	; 0x34
  4024e4:	f7ff fabc 	bl	401a60 <__sprint_r.part.0>
  4024e8:	2800      	cmp	r0, #0
  4024ea:	f47f aeb9 	bne.w	402260 <_vfiprintf_r+0x788>
  4024ee:	4654      	mov	r4, sl
  4024f0:	f7ff bbbe 	b.w	401c70 <_vfiprintf_r+0x198>
  4024f4:	4608      	mov	r0, r1
  4024f6:	4654      	mov	r4, sl
  4024f8:	4611      	mov	r1, r2
  4024fa:	e64c      	b.n	402196 <_vfiprintf_r+0x6be>
  4024fc:	46d1      	mov	r9, sl
  4024fe:	f8cd c014 	str.w	ip, [sp, #20]
  402502:	4630      	mov	r0, r6
  402504:	4639      	mov	r1, r7
  402506:	220a      	movs	r2, #10
  402508:	2300      	movs	r3, #0
  40250a:	f001 fe7d 	bl	404208 <__aeabi_uldivmod>
  40250e:	3230      	adds	r2, #48	; 0x30
  402510:	4630      	mov	r0, r6
  402512:	4639      	mov	r1, r7
  402514:	f809 2d01 	strb.w	r2, [r9, #-1]!
  402518:	2300      	movs	r3, #0
  40251a:	220a      	movs	r2, #10
  40251c:	f001 fe74 	bl	404208 <__aeabi_uldivmod>
  402520:	4606      	mov	r6, r0
  402522:	460f      	mov	r7, r1
  402524:	ea56 0307 	orrs.w	r3, r6, r7
  402528:	d1eb      	bne.n	402502 <_vfiprintf_r+0xa2a>
  40252a:	f8dd c014 	ldr.w	ip, [sp, #20]
  40252e:	e786      	b.n	40243e <_vfiprintf_r+0x966>
  402530:	2b30      	cmp	r3, #48	; 0x30
  402532:	9b07      	ldr	r3, [sp, #28]
  402534:	d086      	beq.n	402444 <_vfiprintf_r+0x96c>
  402536:	3b01      	subs	r3, #1
  402538:	461a      	mov	r2, r3
  40253a:	9307      	str	r3, [sp, #28]
  40253c:	2330      	movs	r3, #48	; 0x30
  40253e:	ebc2 090a 	rsb	r9, r2, sl
  402542:	f801 3c01 	strb.w	r3, [r1, #-1]
  402546:	f7ff bbf9 	b.w	401d3c <_vfiprintf_r+0x264>
  40254a:	9801      	ldr	r0, [sp, #4]
  40254c:	9900      	ldr	r1, [sp, #0]
  40254e:	f8cd c014 	str.w	ip, [sp, #20]
  402552:	aa0d      	add	r2, sp, #52	; 0x34
  402554:	f7ff fa84 	bl	401a60 <__sprint_r.part.0>
  402558:	2800      	cmp	r0, #0
  40255a:	f47f ae81 	bne.w	402260 <_vfiprintf_r+0x788>
  40255e:	990e      	ldr	r1, [sp, #56]	; 0x38
  402560:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402562:	f8dd c014 	ldr.w	ip, [sp, #20]
  402566:	1c48      	adds	r0, r1, #1
  402568:	4654      	mov	r4, sl
  40256a:	e614      	b.n	402196 <_vfiprintf_r+0x6be>
  40256c:	9801      	ldr	r0, [sp, #4]
  40256e:	9900      	ldr	r1, [sp, #0]
  402570:	f8cd c020 	str.w	ip, [sp, #32]
  402574:	aa0d      	add	r2, sp, #52	; 0x34
  402576:	f7ff fa73 	bl	401a60 <__sprint_r.part.0>
  40257a:	2800      	cmp	r0, #0
  40257c:	f47f ae70 	bne.w	402260 <_vfiprintf_r+0x788>
  402580:	990e      	ldr	r1, [sp, #56]	; 0x38
  402582:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402584:	f8dd c020 	ldr.w	ip, [sp, #32]
  402588:	1c48      	adds	r0, r1, #1
  40258a:	4654      	mov	r4, sl
  40258c:	e5f4      	b.n	402178 <_vfiprintf_r+0x6a0>
  40258e:	2a00      	cmp	r2, #0
  402590:	d167      	bne.n	402662 <_vfiprintf_r+0xb8a>
  402592:	2001      	movs	r0, #1
  402594:	4611      	mov	r1, r2
  402596:	4654      	mov	r4, sl
  402598:	e601      	b.n	40219e <_vfiprintf_r+0x6c6>
  40259a:	9801      	ldr	r0, [sp, #4]
  40259c:	9900      	ldr	r1, [sp, #0]
  40259e:	aa0d      	add	r2, sp, #52	; 0x34
  4025a0:	f7ff fa5e 	bl	401a60 <__sprint_r.part.0>
  4025a4:	2800      	cmp	r0, #0
  4025a6:	f47f ae5b 	bne.w	402260 <_vfiprintf_r+0x788>
  4025aa:	980e      	ldr	r0, [sp, #56]	; 0x38
  4025ac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4025ae:	3001      	adds	r0, #1
  4025b0:	4654      	mov	r4, sl
  4025b2:	e624      	b.n	4021fe <_vfiprintf_r+0x726>
  4025b4:	252d      	movs	r5, #45	; 0x2d
  4025b6:	4276      	negs	r6, r6
  4025b8:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  4025bc:	f88d 502f 	strb.w	r5, [sp, #47]	; 0x2f
  4025c0:	46e1      	mov	r9, ip
  4025c2:	2301      	movs	r3, #1
  4025c4:	f7ff bb91 	b.w	401cea <_vfiprintf_r+0x212>
  4025c8:	9b05      	ldr	r3, [sp, #20]
  4025ca:	4611      	mov	r1, r2
  4025cc:	2001      	movs	r0, #1
  4025ce:	4654      	mov	r4, sl
  4025d0:	2b00      	cmp	r3, #0
  4025d2:	f43f ade4 	beq.w	40219e <_vfiprintf_r+0x6c6>
  4025d6:	aa0c      	add	r2, sp, #48	; 0x30
  4025d8:	2302      	movs	r3, #2
  4025da:	e88a 000c 	stmia.w	sl, {r2, r3}
  4025de:	461a      	mov	r2, r3
  4025e0:	e5d6      	b.n	402190 <_vfiprintf_r+0x6b8>
  4025e2:	f018 0f10 	tst.w	r8, #16
  4025e6:	d10b      	bne.n	402600 <_vfiprintf_r+0xb28>
  4025e8:	f018 0f40 	tst.w	r8, #64	; 0x40
  4025ec:	d008      	beq.n	402600 <_vfiprintf_r+0xb28>
  4025ee:	9a04      	ldr	r2, [sp, #16]
  4025f0:	6813      	ldr	r3, [r2, #0]
  4025f2:	3204      	adds	r2, #4
  4025f4:	9204      	str	r2, [sp, #16]
  4025f6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
  4025fa:	801a      	strh	r2, [r3, #0]
  4025fc:	f7ff ba9e 	b.w	401b3c <_vfiprintf_r+0x64>
  402600:	9a04      	ldr	r2, [sp, #16]
  402602:	6813      	ldr	r3, [r2, #0]
  402604:	3204      	adds	r2, #4
  402606:	9204      	str	r2, [sp, #16]
  402608:	9a02      	ldr	r2, [sp, #8]
  40260a:	601a      	str	r2, [r3, #0]
  40260c:	f7ff ba96 	b.w	401b3c <_vfiprintf_r+0x64>
  402610:	9801      	ldr	r0, [sp, #4]
  402612:	9900      	ldr	r1, [sp, #0]
  402614:	f8cd c020 	str.w	ip, [sp, #32]
  402618:	aa0d      	add	r2, sp, #52	; 0x34
  40261a:	f7ff fa21 	bl	401a60 <__sprint_r.part.0>
  40261e:	2800      	cmp	r0, #0
  402620:	f47f ae1e 	bne.w	402260 <_vfiprintf_r+0x788>
  402624:	990e      	ldr	r1, [sp, #56]	; 0x38
  402626:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402628:	f8dd c020 	ldr.w	ip, [sp, #32]
  40262c:	1c48      	adds	r0, r1, #1
  40262e:	4654      	mov	r4, sl
  402630:	e591      	b.n	402156 <_vfiprintf_r+0x67e>
  402632:	f048 0820 	orr.w	r8, r8, #32
  402636:	f10b 0001 	add.w	r0, fp, #1
  40263a:	f89b 3001 	ldrb.w	r3, [fp, #1]
  40263e:	f7ff bab4 	b.w	401baa <_vfiprintf_r+0xd2>
  402642:	426d      	negs	r5, r5
  402644:	9304      	str	r3, [sp, #16]
  402646:	4658      	mov	r0, fp
  402648:	f7ff bbc6 	b.w	401dd8 <_vfiprintf_r+0x300>
  40264c:	9807      	ldr	r0, [sp, #28]
  40264e:	9604      	str	r6, [sp, #16]
  402650:	f7ff f9d8 	bl	401a04 <strlen>
  402654:	f89d 502f 	ldrb.w	r5, [sp, #47]	; 0x2f
  402658:	4681      	mov	r9, r0
  40265a:	f04f 0c00 	mov.w	ip, #0
  40265e:	f7ff bb6d 	b.w	401d3c <_vfiprintf_r+0x264>
  402662:	9801      	ldr	r0, [sp, #4]
  402664:	9900      	ldr	r1, [sp, #0]
  402666:	f8cd c014 	str.w	ip, [sp, #20]
  40266a:	aa0d      	add	r2, sp, #52	; 0x34
  40266c:	f7ff f9f8 	bl	401a60 <__sprint_r.part.0>
  402670:	2800      	cmp	r0, #0
  402672:	f47f adf5 	bne.w	402260 <_vfiprintf_r+0x788>
  402676:	990e      	ldr	r1, [sp, #56]	; 0x38
  402678:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40267a:	f8dd c014 	ldr.w	ip, [sp, #20]
  40267e:	1c48      	adds	r0, r1, #1
  402680:	4654      	mov	r4, sl
  402682:	e58c      	b.n	40219e <_vfiprintf_r+0x6c6>
  402684:	990e      	ldr	r1, [sp, #56]	; 0x38
  402686:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402688:	4f15      	ldr	r7, [pc, #84]	; (4026e0 <_vfiprintf_r+0xc08>)
  40268a:	3101      	adds	r1, #1
  40268c:	f7ff bb98 	b.w	401dc0 <_vfiprintf_r+0x2e8>
  402690:	f1bc 0f06 	cmp.w	ip, #6
  402694:	bf28      	it	cs
  402696:	f04f 0c06 	movcs.w	ip, #6
  40269a:	4b12      	ldr	r3, [pc, #72]	; (4026e4 <_vfiprintf_r+0xc0c>)
  40269c:	9604      	str	r6, [sp, #16]
  40269e:	46e1      	mov	r9, ip
  4026a0:	ea2c 76ec 	bic.w	r6, ip, ip, asr #31
  4026a4:	9307      	str	r3, [sp, #28]
  4026a6:	e460      	b.n	401f6a <_vfiprintf_r+0x492>
  4026a8:	990e      	ldr	r1, [sp, #56]	; 0x38
  4026aa:	4f0d      	ldr	r7, [pc, #52]	; (4026e0 <_vfiprintf_r+0xc08>)
  4026ac:	f101 0e01 	add.w	lr, r1, #1
  4026b0:	e618      	b.n	4022e4 <_vfiprintf_r+0x80c>
  4026b2:	46e1      	mov	r9, ip
  4026b4:	f89d 502f 	ldrb.w	r5, [sp, #47]	; 0x2f
  4026b8:	9604      	str	r6, [sp, #16]
  4026ba:	4684      	mov	ip, r0
  4026bc:	f7ff bb3e 	b.w	401d3c <_vfiprintf_r+0x264>
  4026c0:	4686      	mov	lr, r0
  4026c2:	e66b      	b.n	40239c <_vfiprintf_r+0x8c4>
  4026c4:	9a04      	ldr	r2, [sp, #16]
  4026c6:	f89b 3001 	ldrb.w	r3, [fp, #1]
  4026ca:	6816      	ldr	r6, [r2, #0]
  4026cc:	3204      	adds	r2, #4
  4026ce:	2e00      	cmp	r6, #0
  4026d0:	9204      	str	r2, [sp, #16]
  4026d2:	f6bf aa6a 	bge.w	401baa <_vfiprintf_r+0xd2>
  4026d6:	f04f 36ff 	mov.w	r6, #4294967295
  4026da:	f7ff ba66 	b.w	401baa <_vfiprintf_r+0xd2>
  4026de:	bf00      	nop
  4026e0:	00404924 	.word	0x00404924
  4026e4:	0040491c 	.word	0x0040491c

004026e8 <__sbprintf>:
  4026e8:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
  4026ec:	460c      	mov	r4, r1
  4026ee:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  4026f2:	f8b1 e00c 	ldrh.w	lr, [r1, #12]
  4026f6:	69e7      	ldr	r7, [r4, #28]
  4026f8:	6e49      	ldr	r1, [r1, #100]	; 0x64
  4026fa:	f8b4 900e 	ldrh.w	r9, [r4, #14]
  4026fe:	9119      	str	r1, [sp, #100]	; 0x64
  402700:	ad1a      	add	r5, sp, #104	; 0x68
  402702:	f44f 6680 	mov.w	r6, #1024	; 0x400
  402706:	f02e 0e02 	bic.w	lr, lr, #2
  40270a:	f04f 0c00 	mov.w	ip, #0
  40270e:	9707      	str	r7, [sp, #28]
  402710:	4669      	mov	r1, sp
  402712:	6a67      	ldr	r7, [r4, #36]	; 0x24
  402714:	9500      	str	r5, [sp, #0]
  402716:	9504      	str	r5, [sp, #16]
  402718:	9602      	str	r6, [sp, #8]
  40271a:	9605      	str	r6, [sp, #20]
  40271c:	f8ad e00c 	strh.w	lr, [sp, #12]
  402720:	f8ad 900e 	strh.w	r9, [sp, #14]
  402724:	9709      	str	r7, [sp, #36]	; 0x24
  402726:	f8cd c018 	str.w	ip, [sp, #24]
  40272a:	4606      	mov	r6, r0
  40272c:	f7ff f9d4 	bl	401ad8 <_vfiprintf_r>
  402730:	1e05      	subs	r5, r0, #0
  402732:	db07      	blt.n	402744 <__sbprintf+0x5c>
  402734:	4630      	mov	r0, r6
  402736:	4669      	mov	r1, sp
  402738:	f000 f92e 	bl	402998 <_fflush_r>
  40273c:	2800      	cmp	r0, #0
  40273e:	bf18      	it	ne
  402740:	f04f 35ff 	movne.w	r5, #4294967295
  402744:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  402748:	065b      	lsls	r3, r3, #25
  40274a:	d503      	bpl.n	402754 <__sbprintf+0x6c>
  40274c:	89a3      	ldrh	r3, [r4, #12]
  40274e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402752:	81a3      	strh	r3, [r4, #12]
  402754:	4628      	mov	r0, r5
  402756:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  40275a:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
  40275e:	bf00      	nop

00402760 <__swsetup_r>:
  402760:	b538      	push	{r3, r4, r5, lr}
  402762:	4b2f      	ldr	r3, [pc, #188]	; (402820 <__swsetup_r+0xc0>)
  402764:	681b      	ldr	r3, [r3, #0]
  402766:	4605      	mov	r5, r0
  402768:	460c      	mov	r4, r1
  40276a:	b113      	cbz	r3, 402772 <__swsetup_r+0x12>
  40276c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  40276e:	2a00      	cmp	r2, #0
  402770:	d036      	beq.n	4027e0 <__swsetup_r+0x80>
  402772:	89a2      	ldrh	r2, [r4, #12]
  402774:	b293      	uxth	r3, r2
  402776:	0718      	lsls	r0, r3, #28
  402778:	d50c      	bpl.n	402794 <__swsetup_r+0x34>
  40277a:	6920      	ldr	r0, [r4, #16]
  40277c:	b1a8      	cbz	r0, 4027aa <__swsetup_r+0x4a>
  40277e:	f013 0201 	ands.w	r2, r3, #1
  402782:	d01e      	beq.n	4027c2 <__swsetup_r+0x62>
  402784:	6963      	ldr	r3, [r4, #20]
  402786:	2200      	movs	r2, #0
  402788:	425b      	negs	r3, r3
  40278a:	61a3      	str	r3, [r4, #24]
  40278c:	60a2      	str	r2, [r4, #8]
  40278e:	b1f0      	cbz	r0, 4027ce <__swsetup_r+0x6e>
  402790:	2000      	movs	r0, #0
  402792:	bd38      	pop	{r3, r4, r5, pc}
  402794:	06d9      	lsls	r1, r3, #27
  402796:	d53b      	bpl.n	402810 <__swsetup_r+0xb0>
  402798:	0758      	lsls	r0, r3, #29
  40279a:	d425      	bmi.n	4027e8 <__swsetup_r+0x88>
  40279c:	6920      	ldr	r0, [r4, #16]
  40279e:	f042 0308 	orr.w	r3, r2, #8
  4027a2:	81a3      	strh	r3, [r4, #12]
  4027a4:	b29b      	uxth	r3, r3
  4027a6:	2800      	cmp	r0, #0
  4027a8:	d1e9      	bne.n	40277e <__swsetup_r+0x1e>
  4027aa:	f403 7220 	and.w	r2, r3, #640	; 0x280
  4027ae:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  4027b2:	d0e4      	beq.n	40277e <__swsetup_r+0x1e>
  4027b4:	4628      	mov	r0, r5
  4027b6:	4621      	mov	r1, r4
  4027b8:	f000 fcf2 	bl	4031a0 <__smakebuf_r>
  4027bc:	89a3      	ldrh	r3, [r4, #12]
  4027be:	6920      	ldr	r0, [r4, #16]
  4027c0:	e7dd      	b.n	40277e <__swsetup_r+0x1e>
  4027c2:	0799      	lsls	r1, r3, #30
  4027c4:	bf58      	it	pl
  4027c6:	6962      	ldrpl	r2, [r4, #20]
  4027c8:	60a2      	str	r2, [r4, #8]
  4027ca:	2800      	cmp	r0, #0
  4027cc:	d1e0      	bne.n	402790 <__swsetup_r+0x30>
  4027ce:	89a3      	ldrh	r3, [r4, #12]
  4027d0:	061a      	lsls	r2, r3, #24
  4027d2:	d5de      	bpl.n	402792 <__swsetup_r+0x32>
  4027d4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4027d8:	81a3      	strh	r3, [r4, #12]
  4027da:	f04f 30ff 	mov.w	r0, #4294967295
  4027de:	bd38      	pop	{r3, r4, r5, pc}
  4027e0:	4618      	mov	r0, r3
  4027e2:	f000 f96d 	bl	402ac0 <__sinit>
  4027e6:	e7c4      	b.n	402772 <__swsetup_r+0x12>
  4027e8:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4027ea:	b149      	cbz	r1, 402800 <__swsetup_r+0xa0>
  4027ec:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4027f0:	4299      	cmp	r1, r3
  4027f2:	d003      	beq.n	4027fc <__swsetup_r+0x9c>
  4027f4:	4628      	mov	r0, r5
  4027f6:	f000 fa3b 	bl	402c70 <_free_r>
  4027fa:	89a2      	ldrh	r2, [r4, #12]
  4027fc:	2300      	movs	r3, #0
  4027fe:	6323      	str	r3, [r4, #48]	; 0x30
  402800:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  402804:	2300      	movs	r3, #0
  402806:	6920      	ldr	r0, [r4, #16]
  402808:	6063      	str	r3, [r4, #4]
  40280a:	b292      	uxth	r2, r2
  40280c:	6020      	str	r0, [r4, #0]
  40280e:	e7c6      	b.n	40279e <__swsetup_r+0x3e>
  402810:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  402814:	2309      	movs	r3, #9
  402816:	602b      	str	r3, [r5, #0]
  402818:	f04f 30ff 	mov.w	r0, #4294967295
  40281c:	81a2      	strh	r2, [r4, #12]
  40281e:	bd38      	pop	{r3, r4, r5, pc}
  402820:	20000430 	.word	0x20000430

00402824 <register_fini>:
  402824:	4b02      	ldr	r3, [pc, #8]	; (402830 <register_fini+0xc>)
  402826:	b113      	cbz	r3, 40282e <register_fini+0xa>
  402828:	4802      	ldr	r0, [pc, #8]	; (402834 <register_fini+0x10>)
  40282a:	f000 b805 	b.w	402838 <atexit>
  40282e:	4770      	bx	lr
  402830:	00000000 	.word	0x00000000
  402834:	00402ad5 	.word	0x00402ad5

00402838 <atexit>:
  402838:	4601      	mov	r1, r0
  40283a:	2000      	movs	r0, #0
  40283c:	4602      	mov	r2, r0
  40283e:	4603      	mov	r3, r0
  402840:	f001 bbee 	b.w	404020 <__register_exitproc>

00402844 <__sflush_r>:
  402844:	898b      	ldrh	r3, [r1, #12]
  402846:	b29a      	uxth	r2, r3
  402848:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40284c:	460d      	mov	r5, r1
  40284e:	0711      	lsls	r1, r2, #28
  402850:	4680      	mov	r8, r0
  402852:	d43c      	bmi.n	4028ce <__sflush_r+0x8a>
  402854:	686a      	ldr	r2, [r5, #4]
  402856:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  40285a:	2a00      	cmp	r2, #0
  40285c:	81ab      	strh	r3, [r5, #12]
  40285e:	dd65      	ble.n	40292c <__sflush_r+0xe8>
  402860:	6aae      	ldr	r6, [r5, #40]	; 0x28
  402862:	2e00      	cmp	r6, #0
  402864:	d04b      	beq.n	4028fe <__sflush_r+0xba>
  402866:	b29b      	uxth	r3, r3
  402868:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
  40286c:	2100      	movs	r1, #0
  40286e:	b292      	uxth	r2, r2
  402870:	f8d8 4000 	ldr.w	r4, [r8]
  402874:	f8c8 1000 	str.w	r1, [r8]
  402878:	2a00      	cmp	r2, #0
  40287a:	d05b      	beq.n	402934 <__sflush_r+0xf0>
  40287c:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  40287e:	075f      	lsls	r7, r3, #29
  402880:	d505      	bpl.n	40288e <__sflush_r+0x4a>
  402882:	6869      	ldr	r1, [r5, #4]
  402884:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  402886:	1a52      	subs	r2, r2, r1
  402888:	b10b      	cbz	r3, 40288e <__sflush_r+0x4a>
  40288a:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  40288c:	1ad2      	subs	r2, r2, r3
  40288e:	4640      	mov	r0, r8
  402890:	69e9      	ldr	r1, [r5, #28]
  402892:	2300      	movs	r3, #0
  402894:	47b0      	blx	r6
  402896:	1c46      	adds	r6, r0, #1
  402898:	d056      	beq.n	402948 <__sflush_r+0x104>
  40289a:	89ab      	ldrh	r3, [r5, #12]
  40289c:	692a      	ldr	r2, [r5, #16]
  40289e:	602a      	str	r2, [r5, #0]
  4028a0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  4028a4:	b29b      	uxth	r3, r3
  4028a6:	2200      	movs	r2, #0
  4028a8:	606a      	str	r2, [r5, #4]
  4028aa:	04da      	lsls	r2, r3, #19
  4028ac:	81ab      	strh	r3, [r5, #12]
  4028ae:	d43b      	bmi.n	402928 <__sflush_r+0xe4>
  4028b0:	6b29      	ldr	r1, [r5, #48]	; 0x30
  4028b2:	f8c8 4000 	str.w	r4, [r8]
  4028b6:	b311      	cbz	r1, 4028fe <__sflush_r+0xba>
  4028b8:	f105 0340 	add.w	r3, r5, #64	; 0x40
  4028bc:	4299      	cmp	r1, r3
  4028be:	d002      	beq.n	4028c6 <__sflush_r+0x82>
  4028c0:	4640      	mov	r0, r8
  4028c2:	f000 f9d5 	bl	402c70 <_free_r>
  4028c6:	2000      	movs	r0, #0
  4028c8:	6328      	str	r0, [r5, #48]	; 0x30
  4028ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4028ce:	692e      	ldr	r6, [r5, #16]
  4028d0:	b1ae      	cbz	r6, 4028fe <__sflush_r+0xba>
  4028d2:	682c      	ldr	r4, [r5, #0]
  4028d4:	602e      	str	r6, [r5, #0]
  4028d6:	0791      	lsls	r1, r2, #30
  4028d8:	bf0c      	ite	eq
  4028da:	696b      	ldreq	r3, [r5, #20]
  4028dc:	2300      	movne	r3, #0
  4028de:	1ba4      	subs	r4, r4, r6
  4028e0:	60ab      	str	r3, [r5, #8]
  4028e2:	e00a      	b.n	4028fa <__sflush_r+0xb6>
  4028e4:	4632      	mov	r2, r6
  4028e6:	4623      	mov	r3, r4
  4028e8:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  4028ea:	69e9      	ldr	r1, [r5, #28]
  4028ec:	4640      	mov	r0, r8
  4028ee:	47b8      	blx	r7
  4028f0:	2800      	cmp	r0, #0
  4028f2:	eba4 0400 	sub.w	r4, r4, r0
  4028f6:	4406      	add	r6, r0
  4028f8:	dd04      	ble.n	402904 <__sflush_r+0xc0>
  4028fa:	2c00      	cmp	r4, #0
  4028fc:	dcf2      	bgt.n	4028e4 <__sflush_r+0xa0>
  4028fe:	2000      	movs	r0, #0
  402900:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402904:	89ab      	ldrh	r3, [r5, #12]
  402906:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40290a:	81ab      	strh	r3, [r5, #12]
  40290c:	f04f 30ff 	mov.w	r0, #4294967295
  402910:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402914:	89ab      	ldrh	r3, [r5, #12]
  402916:	692a      	ldr	r2, [r5, #16]
  402918:	6069      	str	r1, [r5, #4]
  40291a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  40291e:	b29b      	uxth	r3, r3
  402920:	81ab      	strh	r3, [r5, #12]
  402922:	04db      	lsls	r3, r3, #19
  402924:	602a      	str	r2, [r5, #0]
  402926:	d5c3      	bpl.n	4028b0 <__sflush_r+0x6c>
  402928:	6528      	str	r0, [r5, #80]	; 0x50
  40292a:	e7c1      	b.n	4028b0 <__sflush_r+0x6c>
  40292c:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  40292e:	2a00      	cmp	r2, #0
  402930:	dc96      	bgt.n	402860 <__sflush_r+0x1c>
  402932:	e7e4      	b.n	4028fe <__sflush_r+0xba>
  402934:	2301      	movs	r3, #1
  402936:	4640      	mov	r0, r8
  402938:	69e9      	ldr	r1, [r5, #28]
  40293a:	47b0      	blx	r6
  40293c:	1c43      	adds	r3, r0, #1
  40293e:	4602      	mov	r2, r0
  402940:	d019      	beq.n	402976 <__sflush_r+0x132>
  402942:	89ab      	ldrh	r3, [r5, #12]
  402944:	6aae      	ldr	r6, [r5, #40]	; 0x28
  402946:	e79a      	b.n	40287e <__sflush_r+0x3a>
  402948:	f8d8 1000 	ldr.w	r1, [r8]
  40294c:	2900      	cmp	r1, #0
  40294e:	d0e1      	beq.n	402914 <__sflush_r+0xd0>
  402950:	291d      	cmp	r1, #29
  402952:	d007      	beq.n	402964 <__sflush_r+0x120>
  402954:	2916      	cmp	r1, #22
  402956:	d005      	beq.n	402964 <__sflush_r+0x120>
  402958:	89ab      	ldrh	r3, [r5, #12]
  40295a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40295e:	81ab      	strh	r3, [r5, #12]
  402960:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402964:	89ab      	ldrh	r3, [r5, #12]
  402966:	692a      	ldr	r2, [r5, #16]
  402968:	602a      	str	r2, [r5, #0]
  40296a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  40296e:	2200      	movs	r2, #0
  402970:	81ab      	strh	r3, [r5, #12]
  402972:	606a      	str	r2, [r5, #4]
  402974:	e79c      	b.n	4028b0 <__sflush_r+0x6c>
  402976:	f8d8 3000 	ldr.w	r3, [r8]
  40297a:	2b00      	cmp	r3, #0
  40297c:	d0e1      	beq.n	402942 <__sflush_r+0xfe>
  40297e:	2b1d      	cmp	r3, #29
  402980:	d007      	beq.n	402992 <__sflush_r+0x14e>
  402982:	2b16      	cmp	r3, #22
  402984:	d005      	beq.n	402992 <__sflush_r+0x14e>
  402986:	89ab      	ldrh	r3, [r5, #12]
  402988:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40298c:	81ab      	strh	r3, [r5, #12]
  40298e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402992:	f8c8 4000 	str.w	r4, [r8]
  402996:	e7b2      	b.n	4028fe <__sflush_r+0xba>

00402998 <_fflush_r>:
  402998:	b510      	push	{r4, lr}
  40299a:	4604      	mov	r4, r0
  40299c:	b082      	sub	sp, #8
  40299e:	b108      	cbz	r0, 4029a4 <_fflush_r+0xc>
  4029a0:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4029a2:	b153      	cbz	r3, 4029ba <_fflush_r+0x22>
  4029a4:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
  4029a8:	b908      	cbnz	r0, 4029ae <_fflush_r+0x16>
  4029aa:	b002      	add	sp, #8
  4029ac:	bd10      	pop	{r4, pc}
  4029ae:	4620      	mov	r0, r4
  4029b0:	b002      	add	sp, #8
  4029b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4029b6:	f7ff bf45 	b.w	402844 <__sflush_r>
  4029ba:	9101      	str	r1, [sp, #4]
  4029bc:	f000 f880 	bl	402ac0 <__sinit>
  4029c0:	9901      	ldr	r1, [sp, #4]
  4029c2:	e7ef      	b.n	4029a4 <_fflush_r+0xc>

004029c4 <_cleanup_r>:
  4029c4:	4901      	ldr	r1, [pc, #4]	; (4029cc <_cleanup_r+0x8>)
  4029c6:	f000 bbb7 	b.w	403138 <_fwalk_reent>
  4029ca:	bf00      	nop
  4029cc:	004040e9 	.word	0x004040e9

004029d0 <__sinit.part.1>:
  4029d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4029d4:	4b35      	ldr	r3, [pc, #212]	; (402aac <__sinit.part.1+0xdc>)
  4029d6:	6845      	ldr	r5, [r0, #4]
  4029d8:	63c3      	str	r3, [r0, #60]	; 0x3c
  4029da:	2400      	movs	r4, #0
  4029dc:	4607      	mov	r7, r0
  4029de:	f500 723b 	add.w	r2, r0, #748	; 0x2ec
  4029e2:	2304      	movs	r3, #4
  4029e4:	2103      	movs	r1, #3
  4029e6:	f8c0 12e4 	str.w	r1, [r0, #740]	; 0x2e4
  4029ea:	f8c0 22e8 	str.w	r2, [r0, #744]	; 0x2e8
  4029ee:	f8c0 42e0 	str.w	r4, [r0, #736]	; 0x2e0
  4029f2:	b083      	sub	sp, #12
  4029f4:	602c      	str	r4, [r5, #0]
  4029f6:	606c      	str	r4, [r5, #4]
  4029f8:	60ac      	str	r4, [r5, #8]
  4029fa:	666c      	str	r4, [r5, #100]	; 0x64
  4029fc:	81ec      	strh	r4, [r5, #14]
  4029fe:	612c      	str	r4, [r5, #16]
  402a00:	616c      	str	r4, [r5, #20]
  402a02:	61ac      	str	r4, [r5, #24]
  402a04:	81ab      	strh	r3, [r5, #12]
  402a06:	4621      	mov	r1, r4
  402a08:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  402a0c:	2208      	movs	r2, #8
  402a0e:	f7fe fef1 	bl	4017f4 <memset>
  402a12:	68be      	ldr	r6, [r7, #8]
  402a14:	f8df b098 	ldr.w	fp, [pc, #152]	; 402ab0 <__sinit.part.1+0xe0>
  402a18:	f8df a098 	ldr.w	sl, [pc, #152]	; 402ab4 <__sinit.part.1+0xe4>
  402a1c:	f8df 9098 	ldr.w	r9, [pc, #152]	; 402ab8 <__sinit.part.1+0xe8>
  402a20:	f8df 8098 	ldr.w	r8, [pc, #152]	; 402abc <__sinit.part.1+0xec>
  402a24:	f8c5 b020 	str.w	fp, [r5, #32]
  402a28:	2301      	movs	r3, #1
  402a2a:	2209      	movs	r2, #9
  402a2c:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  402a30:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  402a34:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  402a38:	61ed      	str	r5, [r5, #28]
  402a3a:	4621      	mov	r1, r4
  402a3c:	81f3      	strh	r3, [r6, #14]
  402a3e:	81b2      	strh	r2, [r6, #12]
  402a40:	f106 005c 	add.w	r0, r6, #92	; 0x5c
  402a44:	6034      	str	r4, [r6, #0]
  402a46:	6074      	str	r4, [r6, #4]
  402a48:	60b4      	str	r4, [r6, #8]
  402a4a:	6674      	str	r4, [r6, #100]	; 0x64
  402a4c:	6134      	str	r4, [r6, #16]
  402a4e:	6174      	str	r4, [r6, #20]
  402a50:	61b4      	str	r4, [r6, #24]
  402a52:	2208      	movs	r2, #8
  402a54:	9301      	str	r3, [sp, #4]
  402a56:	f7fe fecd 	bl	4017f4 <memset>
  402a5a:	68fd      	ldr	r5, [r7, #12]
  402a5c:	61f6      	str	r6, [r6, #28]
  402a5e:	2012      	movs	r0, #18
  402a60:	2202      	movs	r2, #2
  402a62:	f8c6 b020 	str.w	fp, [r6, #32]
  402a66:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
  402a6a:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
  402a6e:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
  402a72:	4621      	mov	r1, r4
  402a74:	81a8      	strh	r0, [r5, #12]
  402a76:	81ea      	strh	r2, [r5, #14]
  402a78:	602c      	str	r4, [r5, #0]
  402a7a:	606c      	str	r4, [r5, #4]
  402a7c:	60ac      	str	r4, [r5, #8]
  402a7e:	666c      	str	r4, [r5, #100]	; 0x64
  402a80:	612c      	str	r4, [r5, #16]
  402a82:	616c      	str	r4, [r5, #20]
  402a84:	61ac      	str	r4, [r5, #24]
  402a86:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  402a8a:	2208      	movs	r2, #8
  402a8c:	f7fe feb2 	bl	4017f4 <memset>
  402a90:	9b01      	ldr	r3, [sp, #4]
  402a92:	61ed      	str	r5, [r5, #28]
  402a94:	f8c5 b020 	str.w	fp, [r5, #32]
  402a98:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  402a9c:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  402aa0:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  402aa4:	63bb      	str	r3, [r7, #56]	; 0x38
  402aa6:	b003      	add	sp, #12
  402aa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402aac:	004029c5 	.word	0x004029c5
  402ab0:	00403e5d 	.word	0x00403e5d
  402ab4:	00403e81 	.word	0x00403e81
  402ab8:	00403eb9 	.word	0x00403eb9
  402abc:	00403ed9 	.word	0x00403ed9

00402ac0 <__sinit>:
  402ac0:	6b83      	ldr	r3, [r0, #56]	; 0x38
  402ac2:	b103      	cbz	r3, 402ac6 <__sinit+0x6>
  402ac4:	4770      	bx	lr
  402ac6:	f7ff bf83 	b.w	4029d0 <__sinit.part.1>
  402aca:	bf00      	nop

00402acc <__sfp_lock_acquire>:
  402acc:	4770      	bx	lr
  402ace:	bf00      	nop

00402ad0 <__sfp_lock_release>:
  402ad0:	4770      	bx	lr
  402ad2:	bf00      	nop

00402ad4 <__libc_fini_array>:
  402ad4:	b538      	push	{r3, r4, r5, lr}
  402ad6:	4b08      	ldr	r3, [pc, #32]	; (402af8 <__libc_fini_array+0x24>)
  402ad8:	4d08      	ldr	r5, [pc, #32]	; (402afc <__libc_fini_array+0x28>)
  402ada:	1aed      	subs	r5, r5, r3
  402adc:	10ac      	asrs	r4, r5, #2
  402ade:	bf18      	it	ne
  402ae0:	18ed      	addne	r5, r5, r3
  402ae2:	d005      	beq.n	402af0 <__libc_fini_array+0x1c>
  402ae4:	3c01      	subs	r4, #1
  402ae6:	f855 3d04 	ldr.w	r3, [r5, #-4]!
  402aea:	4798      	blx	r3
  402aec:	2c00      	cmp	r4, #0
  402aee:	d1f9      	bne.n	402ae4 <__libc_fini_array+0x10>
  402af0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  402af4:	f001 bf28 	b.w	404948 <_fini>
  402af8:	00404954 	.word	0x00404954
  402afc:	00404958 	.word	0x00404958

00402b00 <__fputwc>:
  402b00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402b04:	b082      	sub	sp, #8
  402b06:	4607      	mov	r7, r0
  402b08:	460e      	mov	r6, r1
  402b0a:	4614      	mov	r4, r2
  402b0c:	f000 fb42 	bl	403194 <__locale_mb_cur_max>
  402b10:	2801      	cmp	r0, #1
  402b12:	d041      	beq.n	402b98 <__fputwc+0x98>
  402b14:	4638      	mov	r0, r7
  402b16:	a901      	add	r1, sp, #4
  402b18:	4632      	mov	r2, r6
  402b1a:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  402b1e:	f001 fa33 	bl	403f88 <_wcrtomb_r>
  402b22:	f1b0 3fff 	cmp.w	r0, #4294967295
  402b26:	4680      	mov	r8, r0
  402b28:	d02f      	beq.n	402b8a <__fputwc+0x8a>
  402b2a:	2800      	cmp	r0, #0
  402b2c:	d03c      	beq.n	402ba8 <__fputwc+0xa8>
  402b2e:	f89d 1004 	ldrb.w	r1, [sp, #4]
  402b32:	2500      	movs	r5, #0
  402b34:	e009      	b.n	402b4a <__fputwc+0x4a>
  402b36:	6823      	ldr	r3, [r4, #0]
  402b38:	7019      	strb	r1, [r3, #0]
  402b3a:	6823      	ldr	r3, [r4, #0]
  402b3c:	3301      	adds	r3, #1
  402b3e:	6023      	str	r3, [r4, #0]
  402b40:	3501      	adds	r5, #1
  402b42:	45a8      	cmp	r8, r5
  402b44:	d930      	bls.n	402ba8 <__fputwc+0xa8>
  402b46:	ab01      	add	r3, sp, #4
  402b48:	5d59      	ldrb	r1, [r3, r5]
  402b4a:	68a3      	ldr	r3, [r4, #8]
  402b4c:	3b01      	subs	r3, #1
  402b4e:	2b00      	cmp	r3, #0
  402b50:	60a3      	str	r3, [r4, #8]
  402b52:	daf0      	bge.n	402b36 <__fputwc+0x36>
  402b54:	69a2      	ldr	r2, [r4, #24]
  402b56:	4293      	cmp	r3, r2
  402b58:	db07      	blt.n	402b6a <__fputwc+0x6a>
  402b5a:	6823      	ldr	r3, [r4, #0]
  402b5c:	7019      	strb	r1, [r3, #0]
  402b5e:	6823      	ldr	r3, [r4, #0]
  402b60:	7819      	ldrb	r1, [r3, #0]
  402b62:	290a      	cmp	r1, #10
  402b64:	f103 0301 	add.w	r3, r3, #1
  402b68:	d1e9      	bne.n	402b3e <__fputwc+0x3e>
  402b6a:	4638      	mov	r0, r7
  402b6c:	4622      	mov	r2, r4
  402b6e:	f001 f9b7 	bl	403ee0 <__swbuf_r>
  402b72:	f1a0 30ff 	sub.w	r0, r0, #4294967295
  402b76:	fab0 f080 	clz	r0, r0
  402b7a:	0940      	lsrs	r0, r0, #5
  402b7c:	2800      	cmp	r0, #0
  402b7e:	d0df      	beq.n	402b40 <__fputwc+0x40>
  402b80:	f04f 30ff 	mov.w	r0, #4294967295
  402b84:	b002      	add	sp, #8
  402b86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402b8a:	89a3      	ldrh	r3, [r4, #12]
  402b8c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402b90:	81a3      	strh	r3, [r4, #12]
  402b92:	b002      	add	sp, #8
  402b94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402b98:	1e73      	subs	r3, r6, #1
  402b9a:	2bfe      	cmp	r3, #254	; 0xfe
  402b9c:	d8ba      	bhi.n	402b14 <__fputwc+0x14>
  402b9e:	b2f1      	uxtb	r1, r6
  402ba0:	4680      	mov	r8, r0
  402ba2:	f88d 1004 	strb.w	r1, [sp, #4]
  402ba6:	e7c4      	b.n	402b32 <__fputwc+0x32>
  402ba8:	4630      	mov	r0, r6
  402baa:	b002      	add	sp, #8
  402bac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00402bb0 <_fputwc_r>:
  402bb0:	8993      	ldrh	r3, [r2, #12]
  402bb2:	f413 5f00 	tst.w	r3, #8192	; 0x2000
  402bb6:	d10b      	bne.n	402bd0 <_fputwc_r+0x20>
  402bb8:	b410      	push	{r4}
  402bba:	6e54      	ldr	r4, [r2, #100]	; 0x64
  402bbc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  402bc0:	f444 5400 	orr.w	r4, r4, #8192	; 0x2000
  402bc4:	6654      	str	r4, [r2, #100]	; 0x64
  402bc6:	8193      	strh	r3, [r2, #12]
  402bc8:	f85d 4b04 	ldr.w	r4, [sp], #4
  402bcc:	f7ff bf98 	b.w	402b00 <__fputwc>
  402bd0:	f7ff bf96 	b.w	402b00 <__fputwc>

00402bd4 <_malloc_trim_r>:
  402bd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  402bd6:	4f23      	ldr	r7, [pc, #140]	; (402c64 <_malloc_trim_r+0x90>)
  402bd8:	460c      	mov	r4, r1
  402bda:	4606      	mov	r6, r0
  402bdc:	f000 ff32 	bl	403a44 <__malloc_lock>
  402be0:	68bb      	ldr	r3, [r7, #8]
  402be2:	685d      	ldr	r5, [r3, #4]
  402be4:	f025 0503 	bic.w	r5, r5, #3
  402be8:	1b29      	subs	r1, r5, r4
  402bea:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
  402bee:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  402bf2:	f021 010f 	bic.w	r1, r1, #15
  402bf6:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  402bfa:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  402bfe:	db07      	blt.n	402c10 <_malloc_trim_r+0x3c>
  402c00:	4630      	mov	r0, r6
  402c02:	2100      	movs	r1, #0
  402c04:	f001 f918 	bl	403e38 <_sbrk_r>
  402c08:	68bb      	ldr	r3, [r7, #8]
  402c0a:	442b      	add	r3, r5
  402c0c:	4298      	cmp	r0, r3
  402c0e:	d004      	beq.n	402c1a <_malloc_trim_r+0x46>
  402c10:	4630      	mov	r0, r6
  402c12:	f000 ff19 	bl	403a48 <__malloc_unlock>
  402c16:	2000      	movs	r0, #0
  402c18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402c1a:	4630      	mov	r0, r6
  402c1c:	4261      	negs	r1, r4
  402c1e:	f001 f90b 	bl	403e38 <_sbrk_r>
  402c22:	3001      	adds	r0, #1
  402c24:	d00d      	beq.n	402c42 <_malloc_trim_r+0x6e>
  402c26:	4b10      	ldr	r3, [pc, #64]	; (402c68 <_malloc_trim_r+0x94>)
  402c28:	68ba      	ldr	r2, [r7, #8]
  402c2a:	6819      	ldr	r1, [r3, #0]
  402c2c:	1b2d      	subs	r5, r5, r4
  402c2e:	f045 0501 	orr.w	r5, r5, #1
  402c32:	4630      	mov	r0, r6
  402c34:	1b09      	subs	r1, r1, r4
  402c36:	6055      	str	r5, [r2, #4]
  402c38:	6019      	str	r1, [r3, #0]
  402c3a:	f000 ff05 	bl	403a48 <__malloc_unlock>
  402c3e:	2001      	movs	r0, #1
  402c40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402c42:	4630      	mov	r0, r6
  402c44:	2100      	movs	r1, #0
  402c46:	f001 f8f7 	bl	403e38 <_sbrk_r>
  402c4a:	68ba      	ldr	r2, [r7, #8]
  402c4c:	1a83      	subs	r3, r0, r2
  402c4e:	2b0f      	cmp	r3, #15
  402c50:	ddde      	ble.n	402c10 <_malloc_trim_r+0x3c>
  402c52:	4c06      	ldr	r4, [pc, #24]	; (402c6c <_malloc_trim_r+0x98>)
  402c54:	4904      	ldr	r1, [pc, #16]	; (402c68 <_malloc_trim_r+0x94>)
  402c56:	6824      	ldr	r4, [r4, #0]
  402c58:	f043 0301 	orr.w	r3, r3, #1
  402c5c:	1b00      	subs	r0, r0, r4
  402c5e:	6053      	str	r3, [r2, #4]
  402c60:	6008      	str	r0, [r1, #0]
  402c62:	e7d5      	b.n	402c10 <_malloc_trim_r+0x3c>
  402c64:	20000458 	.word	0x20000458
  402c68:	2000090c 	.word	0x2000090c
  402c6c:	20000864 	.word	0x20000864

00402c70 <_free_r>:
  402c70:	2900      	cmp	r1, #0
  402c72:	d04e      	beq.n	402d12 <_free_r+0xa2>
  402c74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402c78:	460c      	mov	r4, r1
  402c7a:	4680      	mov	r8, r0
  402c7c:	f000 fee2 	bl	403a44 <__malloc_lock>
  402c80:	f854 7c04 	ldr.w	r7, [r4, #-4]
  402c84:	4962      	ldr	r1, [pc, #392]	; (402e10 <_free_r+0x1a0>)
  402c86:	f027 0201 	bic.w	r2, r7, #1
  402c8a:	f1a4 0508 	sub.w	r5, r4, #8
  402c8e:	18ab      	adds	r3, r5, r2
  402c90:	688e      	ldr	r6, [r1, #8]
  402c92:	6858      	ldr	r0, [r3, #4]
  402c94:	429e      	cmp	r6, r3
  402c96:	f020 0003 	bic.w	r0, r0, #3
  402c9a:	d05a      	beq.n	402d52 <_free_r+0xe2>
  402c9c:	07fe      	lsls	r6, r7, #31
  402c9e:	6058      	str	r0, [r3, #4]
  402ca0:	d40b      	bmi.n	402cba <_free_r+0x4a>
  402ca2:	f854 7c08 	ldr.w	r7, [r4, #-8]
  402ca6:	1bed      	subs	r5, r5, r7
  402ca8:	f101 0e08 	add.w	lr, r1, #8
  402cac:	68ac      	ldr	r4, [r5, #8]
  402cae:	4574      	cmp	r4, lr
  402cb0:	443a      	add	r2, r7
  402cb2:	d067      	beq.n	402d84 <_free_r+0x114>
  402cb4:	68ef      	ldr	r7, [r5, #12]
  402cb6:	60e7      	str	r7, [r4, #12]
  402cb8:	60bc      	str	r4, [r7, #8]
  402cba:	181c      	adds	r4, r3, r0
  402cbc:	6864      	ldr	r4, [r4, #4]
  402cbe:	07e4      	lsls	r4, r4, #31
  402cc0:	d40c      	bmi.n	402cdc <_free_r+0x6c>
  402cc2:	4f54      	ldr	r7, [pc, #336]	; (402e14 <_free_r+0x1a4>)
  402cc4:	689c      	ldr	r4, [r3, #8]
  402cc6:	42bc      	cmp	r4, r7
  402cc8:	4402      	add	r2, r0
  402cca:	d07c      	beq.n	402dc6 <_free_r+0x156>
  402ccc:	68d8      	ldr	r0, [r3, #12]
  402cce:	60e0      	str	r0, [r4, #12]
  402cd0:	f042 0301 	orr.w	r3, r2, #1
  402cd4:	6084      	str	r4, [r0, #8]
  402cd6:	606b      	str	r3, [r5, #4]
  402cd8:	50aa      	str	r2, [r5, r2]
  402cda:	e003      	b.n	402ce4 <_free_r+0x74>
  402cdc:	f042 0301 	orr.w	r3, r2, #1
  402ce0:	606b      	str	r3, [r5, #4]
  402ce2:	50aa      	str	r2, [r5, r2]
  402ce4:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  402ce8:	d214      	bcs.n	402d14 <_free_r+0xa4>
  402cea:	08d2      	lsrs	r2, r2, #3
  402cec:	eb01 03c2 	add.w	r3, r1, r2, lsl #3
  402cf0:	6848      	ldr	r0, [r1, #4]
  402cf2:	689f      	ldr	r7, [r3, #8]
  402cf4:	60af      	str	r7, [r5, #8]
  402cf6:	1092      	asrs	r2, r2, #2
  402cf8:	2401      	movs	r4, #1
  402cfa:	fa04 f202 	lsl.w	r2, r4, r2
  402cfe:	4310      	orrs	r0, r2
  402d00:	60eb      	str	r3, [r5, #12]
  402d02:	6048      	str	r0, [r1, #4]
  402d04:	609d      	str	r5, [r3, #8]
  402d06:	60fd      	str	r5, [r7, #12]
  402d08:	4640      	mov	r0, r8
  402d0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  402d0e:	f000 be9b 	b.w	403a48 <__malloc_unlock>
  402d12:	4770      	bx	lr
  402d14:	0a53      	lsrs	r3, r2, #9
  402d16:	2b04      	cmp	r3, #4
  402d18:	d847      	bhi.n	402daa <_free_r+0x13a>
  402d1a:	0993      	lsrs	r3, r2, #6
  402d1c:	f103 0438 	add.w	r4, r3, #56	; 0x38
  402d20:	0060      	lsls	r0, r4, #1
  402d22:	eb01 0080 	add.w	r0, r1, r0, lsl #2
  402d26:	493a      	ldr	r1, [pc, #232]	; (402e10 <_free_r+0x1a0>)
  402d28:	6883      	ldr	r3, [r0, #8]
  402d2a:	4283      	cmp	r3, r0
  402d2c:	d043      	beq.n	402db6 <_free_r+0x146>
  402d2e:	6859      	ldr	r1, [r3, #4]
  402d30:	f021 0103 	bic.w	r1, r1, #3
  402d34:	4291      	cmp	r1, r2
  402d36:	d902      	bls.n	402d3e <_free_r+0xce>
  402d38:	689b      	ldr	r3, [r3, #8]
  402d3a:	4298      	cmp	r0, r3
  402d3c:	d1f7      	bne.n	402d2e <_free_r+0xbe>
  402d3e:	68da      	ldr	r2, [r3, #12]
  402d40:	60ea      	str	r2, [r5, #12]
  402d42:	60ab      	str	r3, [r5, #8]
  402d44:	4640      	mov	r0, r8
  402d46:	6095      	str	r5, [r2, #8]
  402d48:	60dd      	str	r5, [r3, #12]
  402d4a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  402d4e:	f000 be7b 	b.w	403a48 <__malloc_unlock>
  402d52:	07ff      	lsls	r7, r7, #31
  402d54:	4402      	add	r2, r0
  402d56:	d407      	bmi.n	402d68 <_free_r+0xf8>
  402d58:	f854 3c08 	ldr.w	r3, [r4, #-8]
  402d5c:	1aed      	subs	r5, r5, r3
  402d5e:	441a      	add	r2, r3
  402d60:	68a8      	ldr	r0, [r5, #8]
  402d62:	68eb      	ldr	r3, [r5, #12]
  402d64:	60c3      	str	r3, [r0, #12]
  402d66:	6098      	str	r0, [r3, #8]
  402d68:	4b2b      	ldr	r3, [pc, #172]	; (402e18 <_free_r+0x1a8>)
  402d6a:	681b      	ldr	r3, [r3, #0]
  402d6c:	f042 0001 	orr.w	r0, r2, #1
  402d70:	429a      	cmp	r2, r3
  402d72:	6068      	str	r0, [r5, #4]
  402d74:	608d      	str	r5, [r1, #8]
  402d76:	d3c7      	bcc.n	402d08 <_free_r+0x98>
  402d78:	4b28      	ldr	r3, [pc, #160]	; (402e1c <_free_r+0x1ac>)
  402d7a:	4640      	mov	r0, r8
  402d7c:	6819      	ldr	r1, [r3, #0]
  402d7e:	f7ff ff29 	bl	402bd4 <_malloc_trim_r>
  402d82:	e7c1      	b.n	402d08 <_free_r+0x98>
  402d84:	1819      	adds	r1, r3, r0
  402d86:	6849      	ldr	r1, [r1, #4]
  402d88:	07c9      	lsls	r1, r1, #31
  402d8a:	d409      	bmi.n	402da0 <_free_r+0x130>
  402d8c:	68d9      	ldr	r1, [r3, #12]
  402d8e:	689b      	ldr	r3, [r3, #8]
  402d90:	4402      	add	r2, r0
  402d92:	f042 0001 	orr.w	r0, r2, #1
  402d96:	60d9      	str	r1, [r3, #12]
  402d98:	608b      	str	r3, [r1, #8]
  402d9a:	6068      	str	r0, [r5, #4]
  402d9c:	50aa      	str	r2, [r5, r2]
  402d9e:	e7b3      	b.n	402d08 <_free_r+0x98>
  402da0:	f042 0301 	orr.w	r3, r2, #1
  402da4:	606b      	str	r3, [r5, #4]
  402da6:	50aa      	str	r2, [r5, r2]
  402da8:	e7ae      	b.n	402d08 <_free_r+0x98>
  402daa:	2b14      	cmp	r3, #20
  402dac:	d814      	bhi.n	402dd8 <_free_r+0x168>
  402dae:	f103 045b 	add.w	r4, r3, #91	; 0x5b
  402db2:	0060      	lsls	r0, r4, #1
  402db4:	e7b5      	b.n	402d22 <_free_r+0xb2>
  402db6:	684a      	ldr	r2, [r1, #4]
  402db8:	10a4      	asrs	r4, r4, #2
  402dba:	2001      	movs	r0, #1
  402dbc:	40a0      	lsls	r0, r4
  402dbe:	4302      	orrs	r2, r0
  402dc0:	604a      	str	r2, [r1, #4]
  402dc2:	461a      	mov	r2, r3
  402dc4:	e7bc      	b.n	402d40 <_free_r+0xd0>
  402dc6:	f042 0301 	orr.w	r3, r2, #1
  402dca:	614d      	str	r5, [r1, #20]
  402dcc:	610d      	str	r5, [r1, #16]
  402dce:	60ec      	str	r4, [r5, #12]
  402dd0:	60ac      	str	r4, [r5, #8]
  402dd2:	606b      	str	r3, [r5, #4]
  402dd4:	50aa      	str	r2, [r5, r2]
  402dd6:	e797      	b.n	402d08 <_free_r+0x98>
  402dd8:	2b54      	cmp	r3, #84	; 0x54
  402dda:	d804      	bhi.n	402de6 <_free_r+0x176>
  402ddc:	0b13      	lsrs	r3, r2, #12
  402dde:	f103 046e 	add.w	r4, r3, #110	; 0x6e
  402de2:	0060      	lsls	r0, r4, #1
  402de4:	e79d      	b.n	402d22 <_free_r+0xb2>
  402de6:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  402dea:	d804      	bhi.n	402df6 <_free_r+0x186>
  402dec:	0bd3      	lsrs	r3, r2, #15
  402dee:	f103 0477 	add.w	r4, r3, #119	; 0x77
  402df2:	0060      	lsls	r0, r4, #1
  402df4:	e795      	b.n	402d22 <_free_r+0xb2>
  402df6:	f240 5054 	movw	r0, #1364	; 0x554
  402dfa:	4283      	cmp	r3, r0
  402dfc:	d804      	bhi.n	402e08 <_free_r+0x198>
  402dfe:	0c93      	lsrs	r3, r2, #18
  402e00:	f103 047c 	add.w	r4, r3, #124	; 0x7c
  402e04:	0060      	lsls	r0, r4, #1
  402e06:	e78c      	b.n	402d22 <_free_r+0xb2>
  402e08:	20fc      	movs	r0, #252	; 0xfc
  402e0a:	247e      	movs	r4, #126	; 0x7e
  402e0c:	e789      	b.n	402d22 <_free_r+0xb2>
  402e0e:	bf00      	nop
  402e10:	20000458 	.word	0x20000458
  402e14:	20000460 	.word	0x20000460
  402e18:	20000860 	.word	0x20000860
  402e1c:	20000908 	.word	0x20000908

00402e20 <__sfvwrite_r>:
  402e20:	6893      	ldr	r3, [r2, #8]
  402e22:	2b00      	cmp	r3, #0
  402e24:	d07a      	beq.n	402f1c <__sfvwrite_r+0xfc>
  402e26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402e2a:	f8b1 e00c 	ldrh.w	lr, [r1, #12]
  402e2e:	f01e 0f08 	tst.w	lr, #8
  402e32:	b083      	sub	sp, #12
  402e34:	460c      	mov	r4, r1
  402e36:	4681      	mov	r9, r0
  402e38:	4616      	mov	r6, r2
  402e3a:	d026      	beq.n	402e8a <__sfvwrite_r+0x6a>
  402e3c:	690b      	ldr	r3, [r1, #16]
  402e3e:	b323      	cbz	r3, 402e8a <__sfvwrite_r+0x6a>
  402e40:	f00e 0802 	and.w	r8, lr, #2
  402e44:	fa1f f088 	uxth.w	r0, r8
  402e48:	6835      	ldr	r5, [r6, #0]
  402e4a:	b370      	cbz	r0, 402eaa <__sfvwrite_r+0x8a>
  402e4c:	f04f 0a00 	mov.w	sl, #0
  402e50:	f8df b2e0 	ldr.w	fp, [pc, #736]	; 403134 <__sfvwrite_r+0x314>
  402e54:	46d0      	mov	r8, sl
  402e56:	45d8      	cmp	r8, fp
  402e58:	4643      	mov	r3, r8
  402e5a:	4652      	mov	r2, sl
  402e5c:	bf28      	it	cs
  402e5e:	465b      	movcs	r3, fp
  402e60:	4648      	mov	r0, r9
  402e62:	f1b8 0f00 	cmp.w	r8, #0
  402e66:	d053      	beq.n	402f10 <__sfvwrite_r+0xf0>
  402e68:	69e1      	ldr	r1, [r4, #28]
  402e6a:	6a67      	ldr	r7, [r4, #36]	; 0x24
  402e6c:	47b8      	blx	r7
  402e6e:	2800      	cmp	r0, #0
  402e70:	dd73      	ble.n	402f5a <__sfvwrite_r+0x13a>
  402e72:	68b3      	ldr	r3, [r6, #8]
  402e74:	1a1b      	subs	r3, r3, r0
  402e76:	4482      	add	sl, r0
  402e78:	ebc0 0808 	rsb	r8, r0, r8
  402e7c:	60b3      	str	r3, [r6, #8]
  402e7e:	2b00      	cmp	r3, #0
  402e80:	d1e9      	bne.n	402e56 <__sfvwrite_r+0x36>
  402e82:	2000      	movs	r0, #0
  402e84:	b003      	add	sp, #12
  402e86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402e8a:	4648      	mov	r0, r9
  402e8c:	4621      	mov	r1, r4
  402e8e:	f7ff fc67 	bl	402760 <__swsetup_r>
  402e92:	2800      	cmp	r0, #0
  402e94:	f040 8145 	bne.w	403122 <__sfvwrite_r+0x302>
  402e98:	f8b4 e00c 	ldrh.w	lr, [r4, #12]
  402e9c:	6835      	ldr	r5, [r6, #0]
  402e9e:	f00e 0802 	and.w	r8, lr, #2
  402ea2:	fa1f f088 	uxth.w	r0, r8
  402ea6:	2800      	cmp	r0, #0
  402ea8:	d1d0      	bne.n	402e4c <__sfvwrite_r+0x2c>
  402eaa:	f01e 0b01 	ands.w	fp, lr, #1
  402eae:	d15d      	bne.n	402f6c <__sfvwrite_r+0x14c>
  402eb0:	46d8      	mov	r8, fp
  402eb2:	f1b8 0f00 	cmp.w	r8, #0
  402eb6:	d025      	beq.n	402f04 <__sfvwrite_r+0xe4>
  402eb8:	f41e 7f00 	tst.w	lr, #512	; 0x200
  402ebc:	68a7      	ldr	r7, [r4, #8]
  402ebe:	d02f      	beq.n	402f20 <__sfvwrite_r+0x100>
  402ec0:	45b8      	cmp	r8, r7
  402ec2:	46ba      	mov	sl, r7
  402ec4:	f0c0 80a9 	bcc.w	40301a <__sfvwrite_r+0x1fa>
  402ec8:	f41e 6f90 	tst.w	lr, #1152	; 0x480
  402ecc:	f040 80b6 	bne.w	40303c <__sfvwrite_r+0x21c>
  402ed0:	6820      	ldr	r0, [r4, #0]
  402ed2:	4652      	mov	r2, sl
  402ed4:	4659      	mov	r1, fp
  402ed6:	f000 fd51 	bl	40397c <memmove>
  402eda:	68a0      	ldr	r0, [r4, #8]
  402edc:	6822      	ldr	r2, [r4, #0]
  402ede:	1bc0      	subs	r0, r0, r7
  402ee0:	eb02 030a 	add.w	r3, r2, sl
  402ee4:	60a0      	str	r0, [r4, #8]
  402ee6:	6023      	str	r3, [r4, #0]
  402ee8:	4640      	mov	r0, r8
  402eea:	68b3      	ldr	r3, [r6, #8]
  402eec:	1a1b      	subs	r3, r3, r0
  402eee:	4483      	add	fp, r0
  402ef0:	ebc0 0808 	rsb	r8, r0, r8
  402ef4:	60b3      	str	r3, [r6, #8]
  402ef6:	2b00      	cmp	r3, #0
  402ef8:	d0c3      	beq.n	402e82 <__sfvwrite_r+0x62>
  402efa:	f8b4 e00c 	ldrh.w	lr, [r4, #12]
  402efe:	f1b8 0f00 	cmp.w	r8, #0
  402f02:	d1d9      	bne.n	402eb8 <__sfvwrite_r+0x98>
  402f04:	f8d5 b000 	ldr.w	fp, [r5]
  402f08:	f8d5 8004 	ldr.w	r8, [r5, #4]
  402f0c:	3508      	adds	r5, #8
  402f0e:	e7d0      	b.n	402eb2 <__sfvwrite_r+0x92>
  402f10:	f8d5 a000 	ldr.w	sl, [r5]
  402f14:	f8d5 8004 	ldr.w	r8, [r5, #4]
  402f18:	3508      	adds	r5, #8
  402f1a:	e79c      	b.n	402e56 <__sfvwrite_r+0x36>
  402f1c:	2000      	movs	r0, #0
  402f1e:	4770      	bx	lr
  402f20:	6820      	ldr	r0, [r4, #0]
  402f22:	6923      	ldr	r3, [r4, #16]
  402f24:	4298      	cmp	r0, r3
  402f26:	d803      	bhi.n	402f30 <__sfvwrite_r+0x110>
  402f28:	6962      	ldr	r2, [r4, #20]
  402f2a:	4590      	cmp	r8, r2
  402f2c:	f080 80b9 	bcs.w	4030a2 <__sfvwrite_r+0x282>
  402f30:	4547      	cmp	r7, r8
  402f32:	bf28      	it	cs
  402f34:	4647      	movcs	r7, r8
  402f36:	463a      	mov	r2, r7
  402f38:	4659      	mov	r1, fp
  402f3a:	f000 fd1f 	bl	40397c <memmove>
  402f3e:	68a3      	ldr	r3, [r4, #8]
  402f40:	6822      	ldr	r2, [r4, #0]
  402f42:	1bdb      	subs	r3, r3, r7
  402f44:	443a      	add	r2, r7
  402f46:	60a3      	str	r3, [r4, #8]
  402f48:	6022      	str	r2, [r4, #0]
  402f4a:	2b00      	cmp	r3, #0
  402f4c:	d14a      	bne.n	402fe4 <__sfvwrite_r+0x1c4>
  402f4e:	4648      	mov	r0, r9
  402f50:	4621      	mov	r1, r4
  402f52:	f7ff fd21 	bl	402998 <_fflush_r>
  402f56:	2800      	cmp	r0, #0
  402f58:	d044      	beq.n	402fe4 <__sfvwrite_r+0x1c4>
  402f5a:	89a3      	ldrh	r3, [r4, #12]
  402f5c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402f60:	f04f 30ff 	mov.w	r0, #4294967295
  402f64:	81a3      	strh	r3, [r4, #12]
  402f66:	b003      	add	sp, #12
  402f68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402f6c:	4680      	mov	r8, r0
  402f6e:	9000      	str	r0, [sp, #0]
  402f70:	4683      	mov	fp, r0
  402f72:	4682      	mov	sl, r0
  402f74:	f1ba 0f00 	cmp.w	sl, #0
  402f78:	d02c      	beq.n	402fd4 <__sfvwrite_r+0x1b4>
  402f7a:	9b00      	ldr	r3, [sp, #0]
  402f7c:	2b00      	cmp	r3, #0
  402f7e:	d050      	beq.n	403022 <__sfvwrite_r+0x202>
  402f80:	6820      	ldr	r0, [r4, #0]
  402f82:	6921      	ldr	r1, [r4, #16]
  402f84:	f8d4 e008 	ldr.w	lr, [r4, #8]
  402f88:	6962      	ldr	r2, [r4, #20]
  402f8a:	45d0      	cmp	r8, sl
  402f8c:	4643      	mov	r3, r8
  402f8e:	bf28      	it	cs
  402f90:	4653      	movcs	r3, sl
  402f92:	4288      	cmp	r0, r1
  402f94:	461f      	mov	r7, r3
  402f96:	d904      	bls.n	402fa2 <__sfvwrite_r+0x182>
  402f98:	eb0e 0c02 	add.w	ip, lr, r2
  402f9c:	4563      	cmp	r3, ip
  402f9e:	f300 8092 	bgt.w	4030c6 <__sfvwrite_r+0x2a6>
  402fa2:	4293      	cmp	r3, r2
  402fa4:	db20      	blt.n	402fe8 <__sfvwrite_r+0x1c8>
  402fa6:	4613      	mov	r3, r2
  402fa8:	6a67      	ldr	r7, [r4, #36]	; 0x24
  402faa:	69e1      	ldr	r1, [r4, #28]
  402fac:	4648      	mov	r0, r9
  402fae:	465a      	mov	r2, fp
  402fb0:	47b8      	blx	r7
  402fb2:	1e07      	subs	r7, r0, #0
  402fb4:	ddd1      	ble.n	402f5a <__sfvwrite_r+0x13a>
  402fb6:	ebb8 0807 	subs.w	r8, r8, r7
  402fba:	d025      	beq.n	403008 <__sfvwrite_r+0x1e8>
  402fbc:	68b3      	ldr	r3, [r6, #8]
  402fbe:	1bdb      	subs	r3, r3, r7
  402fc0:	44bb      	add	fp, r7
  402fc2:	ebc7 0a0a 	rsb	sl, r7, sl
  402fc6:	60b3      	str	r3, [r6, #8]
  402fc8:	2b00      	cmp	r3, #0
  402fca:	f43f af5a 	beq.w	402e82 <__sfvwrite_r+0x62>
  402fce:	f1ba 0f00 	cmp.w	sl, #0
  402fd2:	d1d2      	bne.n	402f7a <__sfvwrite_r+0x15a>
  402fd4:	2300      	movs	r3, #0
  402fd6:	f8d5 b000 	ldr.w	fp, [r5]
  402fda:	f8d5 a004 	ldr.w	sl, [r5, #4]
  402fde:	9300      	str	r3, [sp, #0]
  402fe0:	3508      	adds	r5, #8
  402fe2:	e7c7      	b.n	402f74 <__sfvwrite_r+0x154>
  402fe4:	4638      	mov	r0, r7
  402fe6:	e780      	b.n	402eea <__sfvwrite_r+0xca>
  402fe8:	461a      	mov	r2, r3
  402fea:	4659      	mov	r1, fp
  402fec:	9301      	str	r3, [sp, #4]
  402fee:	f000 fcc5 	bl	40397c <memmove>
  402ff2:	68a2      	ldr	r2, [r4, #8]
  402ff4:	6821      	ldr	r1, [r4, #0]
  402ff6:	9b01      	ldr	r3, [sp, #4]
  402ff8:	ebb8 0807 	subs.w	r8, r8, r7
  402ffc:	eba2 0203 	sub.w	r2, r2, r3
  403000:	440b      	add	r3, r1
  403002:	60a2      	str	r2, [r4, #8]
  403004:	6023      	str	r3, [r4, #0]
  403006:	d1d9      	bne.n	402fbc <__sfvwrite_r+0x19c>
  403008:	4648      	mov	r0, r9
  40300a:	4621      	mov	r1, r4
  40300c:	f7ff fcc4 	bl	402998 <_fflush_r>
  403010:	2800      	cmp	r0, #0
  403012:	d1a2      	bne.n	402f5a <__sfvwrite_r+0x13a>
  403014:	f8cd 8000 	str.w	r8, [sp]
  403018:	e7d0      	b.n	402fbc <__sfvwrite_r+0x19c>
  40301a:	6820      	ldr	r0, [r4, #0]
  40301c:	4647      	mov	r7, r8
  40301e:	46c2      	mov	sl, r8
  403020:	e757      	b.n	402ed2 <__sfvwrite_r+0xb2>
  403022:	4658      	mov	r0, fp
  403024:	210a      	movs	r1, #10
  403026:	4652      	mov	r2, sl
  403028:	f000 fbc4 	bl	4037b4 <memchr>
  40302c:	2800      	cmp	r0, #0
  40302e:	d073      	beq.n	403118 <__sfvwrite_r+0x2f8>
  403030:	3001      	adds	r0, #1
  403032:	2301      	movs	r3, #1
  403034:	ebcb 0800 	rsb	r8, fp, r0
  403038:	9300      	str	r3, [sp, #0]
  40303a:	e7a1      	b.n	402f80 <__sfvwrite_r+0x160>
  40303c:	6967      	ldr	r7, [r4, #20]
  40303e:	6921      	ldr	r1, [r4, #16]
  403040:	6823      	ldr	r3, [r4, #0]
  403042:	eb07 0747 	add.w	r7, r7, r7, lsl #1
  403046:	1a5b      	subs	r3, r3, r1
  403048:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
  40304c:	1c58      	adds	r0, r3, #1
  40304e:	107f      	asrs	r7, r7, #1
  403050:	4440      	add	r0, r8
  403052:	4287      	cmp	r7, r0
  403054:	463a      	mov	r2, r7
  403056:	bf3c      	itt	cc
  403058:	4607      	movcc	r7, r0
  40305a:	463a      	movcc	r2, r7
  40305c:	f41e 6f80 	tst.w	lr, #1024	; 0x400
  403060:	9300      	str	r3, [sp, #0]
  403062:	d046      	beq.n	4030f2 <__sfvwrite_r+0x2d2>
  403064:	4611      	mov	r1, r2
  403066:	4648      	mov	r0, r9
  403068:	f000 f912 	bl	403290 <_malloc_r>
  40306c:	9b00      	ldr	r3, [sp, #0]
  40306e:	4682      	mov	sl, r0
  403070:	2800      	cmp	r0, #0
  403072:	d059      	beq.n	403128 <__sfvwrite_r+0x308>
  403074:	461a      	mov	r2, r3
  403076:	6921      	ldr	r1, [r4, #16]
  403078:	9300      	str	r3, [sp, #0]
  40307a:	f000 fbe5 	bl	403848 <memcpy>
  40307e:	89a2      	ldrh	r2, [r4, #12]
  403080:	9b00      	ldr	r3, [sp, #0]
  403082:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  403086:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  40308a:	81a2      	strh	r2, [r4, #12]
  40308c:	eb0a 0003 	add.w	r0, sl, r3
  403090:	1afb      	subs	r3, r7, r3
  403092:	f8c4 a010 	str.w	sl, [r4, #16]
  403096:	6167      	str	r7, [r4, #20]
  403098:	6020      	str	r0, [r4, #0]
  40309a:	60a3      	str	r3, [r4, #8]
  40309c:	4647      	mov	r7, r8
  40309e:	46c2      	mov	sl, r8
  4030a0:	e717      	b.n	402ed2 <__sfvwrite_r+0xb2>
  4030a2:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
  4030a6:	4543      	cmp	r3, r8
  4030a8:	bf28      	it	cs
  4030aa:	4643      	movcs	r3, r8
  4030ac:	6a67      	ldr	r7, [r4, #36]	; 0x24
  4030ae:	fb93 f3f2 	sdiv	r3, r3, r2
  4030b2:	4648      	mov	r0, r9
  4030b4:	fb03 f302 	mul.w	r3, r3, r2
  4030b8:	69e1      	ldr	r1, [r4, #28]
  4030ba:	465a      	mov	r2, fp
  4030bc:	47b8      	blx	r7
  4030be:	2800      	cmp	r0, #0
  4030c0:	f73f af13 	bgt.w	402eea <__sfvwrite_r+0xca>
  4030c4:	e749      	b.n	402f5a <__sfvwrite_r+0x13a>
  4030c6:	4662      	mov	r2, ip
  4030c8:	4659      	mov	r1, fp
  4030ca:	f8cd c004 	str.w	ip, [sp, #4]
  4030ce:	f000 fc55 	bl	40397c <memmove>
  4030d2:	6823      	ldr	r3, [r4, #0]
  4030d4:	f8dd c004 	ldr.w	ip, [sp, #4]
  4030d8:	4463      	add	r3, ip
  4030da:	6023      	str	r3, [r4, #0]
  4030dc:	4648      	mov	r0, r9
  4030de:	4621      	mov	r1, r4
  4030e0:	f7ff fc5a 	bl	402998 <_fflush_r>
  4030e4:	f8dd c004 	ldr.w	ip, [sp, #4]
  4030e8:	2800      	cmp	r0, #0
  4030ea:	f47f af36 	bne.w	402f5a <__sfvwrite_r+0x13a>
  4030ee:	4667      	mov	r7, ip
  4030f0:	e761      	b.n	402fb6 <__sfvwrite_r+0x196>
  4030f2:	4648      	mov	r0, r9
  4030f4:	f000 fcaa 	bl	403a4c <_realloc_r>
  4030f8:	9b00      	ldr	r3, [sp, #0]
  4030fa:	4682      	mov	sl, r0
  4030fc:	2800      	cmp	r0, #0
  4030fe:	d1c5      	bne.n	40308c <__sfvwrite_r+0x26c>
  403100:	4648      	mov	r0, r9
  403102:	6921      	ldr	r1, [r4, #16]
  403104:	f7ff fdb4 	bl	402c70 <_free_r>
  403108:	89a3      	ldrh	r3, [r4, #12]
  40310a:	220c      	movs	r2, #12
  40310c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  403110:	b29b      	uxth	r3, r3
  403112:	f8c9 2000 	str.w	r2, [r9]
  403116:	e721      	b.n	402f5c <__sfvwrite_r+0x13c>
  403118:	2301      	movs	r3, #1
  40311a:	f10a 0801 	add.w	r8, sl, #1
  40311e:	9300      	str	r3, [sp, #0]
  403120:	e72e      	b.n	402f80 <__sfvwrite_r+0x160>
  403122:	f04f 30ff 	mov.w	r0, #4294967295
  403126:	e6ad      	b.n	402e84 <__sfvwrite_r+0x64>
  403128:	230c      	movs	r3, #12
  40312a:	f8c9 3000 	str.w	r3, [r9]
  40312e:	89a3      	ldrh	r3, [r4, #12]
  403130:	e714      	b.n	402f5c <__sfvwrite_r+0x13c>
  403132:	bf00      	nop
  403134:	7ffffc00 	.word	0x7ffffc00

00403138 <_fwalk_reent>:
  403138:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40313c:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  403140:	d01f      	beq.n	403182 <_fwalk_reent+0x4a>
  403142:	4688      	mov	r8, r1
  403144:	4606      	mov	r6, r0
  403146:	f04f 0900 	mov.w	r9, #0
  40314a:	687d      	ldr	r5, [r7, #4]
  40314c:	68bc      	ldr	r4, [r7, #8]
  40314e:	3d01      	subs	r5, #1
  403150:	d411      	bmi.n	403176 <_fwalk_reent+0x3e>
  403152:	89a3      	ldrh	r3, [r4, #12]
  403154:	2b01      	cmp	r3, #1
  403156:	f105 35ff 	add.w	r5, r5, #4294967295
  40315a:	d908      	bls.n	40316e <_fwalk_reent+0x36>
  40315c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  403160:	3301      	adds	r3, #1
  403162:	4621      	mov	r1, r4
  403164:	4630      	mov	r0, r6
  403166:	d002      	beq.n	40316e <_fwalk_reent+0x36>
  403168:	47c0      	blx	r8
  40316a:	ea49 0900 	orr.w	r9, r9, r0
  40316e:	1c6b      	adds	r3, r5, #1
  403170:	f104 0468 	add.w	r4, r4, #104	; 0x68
  403174:	d1ed      	bne.n	403152 <_fwalk_reent+0x1a>
  403176:	683f      	ldr	r7, [r7, #0]
  403178:	2f00      	cmp	r7, #0
  40317a:	d1e6      	bne.n	40314a <_fwalk_reent+0x12>
  40317c:	4648      	mov	r0, r9
  40317e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  403182:	46b9      	mov	r9, r7
  403184:	4648      	mov	r0, r9
  403186:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40318a:	bf00      	nop

0040318c <__locale_charset>:
  40318c:	4800      	ldr	r0, [pc, #0]	; (403190 <__locale_charset+0x4>)
  40318e:	4770      	bx	lr
  403190:	20000434 	.word	0x20000434

00403194 <__locale_mb_cur_max>:
  403194:	4b01      	ldr	r3, [pc, #4]	; (40319c <__locale_mb_cur_max+0x8>)
  403196:	6818      	ldr	r0, [r3, #0]
  403198:	4770      	bx	lr
  40319a:	bf00      	nop
  40319c:	20000454 	.word	0x20000454

004031a0 <__smakebuf_r>:
  4031a0:	898b      	ldrh	r3, [r1, #12]
  4031a2:	b29a      	uxth	r2, r3
  4031a4:	f012 0f02 	tst.w	r2, #2
  4031a8:	d13c      	bne.n	403224 <__smakebuf_r+0x84>
  4031aa:	b5f0      	push	{r4, r5, r6, r7, lr}
  4031ac:	460c      	mov	r4, r1
  4031ae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4031b2:	2900      	cmp	r1, #0
  4031b4:	b091      	sub	sp, #68	; 0x44
  4031b6:	4605      	mov	r5, r0
  4031b8:	db19      	blt.n	4031ee <__smakebuf_r+0x4e>
  4031ba:	aa01      	add	r2, sp, #4
  4031bc:	f000 ffd6 	bl	40416c <_fstat_r>
  4031c0:	2800      	cmp	r0, #0
  4031c2:	db12      	blt.n	4031ea <__smakebuf_r+0x4a>
  4031c4:	9b02      	ldr	r3, [sp, #8]
  4031c6:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  4031ca:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
  4031ce:	f5a3 5700 	sub.w	r7, r3, #8192	; 0x2000
  4031d2:	fab7 f787 	clz	r7, r7
  4031d6:	ea4f 1757 	mov.w	r7, r7, lsr #5
  4031da:	d02a      	beq.n	403232 <__smakebuf_r+0x92>
  4031dc:	89a3      	ldrh	r3, [r4, #12]
  4031de:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  4031e2:	81a3      	strh	r3, [r4, #12]
  4031e4:	f44f 6680 	mov.w	r6, #1024	; 0x400
  4031e8:	e00b      	b.n	403202 <__smakebuf_r+0x62>
  4031ea:	89a3      	ldrh	r3, [r4, #12]
  4031ec:	b29a      	uxth	r2, r3
  4031ee:	f012 0f80 	tst.w	r2, #128	; 0x80
  4031f2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  4031f6:	81a3      	strh	r3, [r4, #12]
  4031f8:	bf0c      	ite	eq
  4031fa:	f44f 6680 	moveq.w	r6, #1024	; 0x400
  4031fe:	2640      	movne	r6, #64	; 0x40
  403200:	2700      	movs	r7, #0
  403202:	4628      	mov	r0, r5
  403204:	4631      	mov	r1, r6
  403206:	f000 f843 	bl	403290 <_malloc_r>
  40320a:	89a3      	ldrh	r3, [r4, #12]
  40320c:	b340      	cbz	r0, 403260 <__smakebuf_r+0xc0>
  40320e:	4a1a      	ldr	r2, [pc, #104]	; (403278 <__smakebuf_r+0xd8>)
  403210:	63ea      	str	r2, [r5, #60]	; 0x3c
  403212:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  403216:	81a3      	strh	r3, [r4, #12]
  403218:	6020      	str	r0, [r4, #0]
  40321a:	6120      	str	r0, [r4, #16]
  40321c:	6166      	str	r6, [r4, #20]
  40321e:	b99f      	cbnz	r7, 403248 <__smakebuf_r+0xa8>
  403220:	b011      	add	sp, #68	; 0x44
  403222:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403224:	f101 0343 	add.w	r3, r1, #67	; 0x43
  403228:	2201      	movs	r2, #1
  40322a:	600b      	str	r3, [r1, #0]
  40322c:	610b      	str	r3, [r1, #16]
  40322e:	614a      	str	r2, [r1, #20]
  403230:	4770      	bx	lr
  403232:	4b12      	ldr	r3, [pc, #72]	; (40327c <__smakebuf_r+0xdc>)
  403234:	6aa2      	ldr	r2, [r4, #40]	; 0x28
  403236:	429a      	cmp	r2, r3
  403238:	d1d0      	bne.n	4031dc <__smakebuf_r+0x3c>
  40323a:	89a3      	ldrh	r3, [r4, #12]
  40323c:	f44f 6680 	mov.w	r6, #1024	; 0x400
  403240:	4333      	orrs	r3, r6
  403242:	81a3      	strh	r3, [r4, #12]
  403244:	64e6      	str	r6, [r4, #76]	; 0x4c
  403246:	e7dc      	b.n	403202 <__smakebuf_r+0x62>
  403248:	4628      	mov	r0, r5
  40324a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  40324e:	f000 ffa1 	bl	404194 <_isatty_r>
  403252:	2800      	cmp	r0, #0
  403254:	d0e4      	beq.n	403220 <__smakebuf_r+0x80>
  403256:	89a3      	ldrh	r3, [r4, #12]
  403258:	f043 0301 	orr.w	r3, r3, #1
  40325c:	81a3      	strh	r3, [r4, #12]
  40325e:	e7df      	b.n	403220 <__smakebuf_r+0x80>
  403260:	059a      	lsls	r2, r3, #22
  403262:	d4dd      	bmi.n	403220 <__smakebuf_r+0x80>
  403264:	f104 0243 	add.w	r2, r4, #67	; 0x43
  403268:	f043 0302 	orr.w	r3, r3, #2
  40326c:	2101      	movs	r1, #1
  40326e:	81a3      	strh	r3, [r4, #12]
  403270:	6022      	str	r2, [r4, #0]
  403272:	6122      	str	r2, [r4, #16]
  403274:	6161      	str	r1, [r4, #20]
  403276:	e7d3      	b.n	403220 <__smakebuf_r+0x80>
  403278:	004029c5 	.word	0x004029c5
  40327c:	00403eb9 	.word	0x00403eb9

00403280 <malloc>:
  403280:	4b02      	ldr	r3, [pc, #8]	; (40328c <malloc+0xc>)
  403282:	4601      	mov	r1, r0
  403284:	6818      	ldr	r0, [r3, #0]
  403286:	f000 b803 	b.w	403290 <_malloc_r>
  40328a:	bf00      	nop
  40328c:	20000430 	.word	0x20000430

00403290 <_malloc_r>:
  403290:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403294:	f101 050b 	add.w	r5, r1, #11
  403298:	2d16      	cmp	r5, #22
  40329a:	b083      	sub	sp, #12
  40329c:	4606      	mov	r6, r0
  40329e:	d927      	bls.n	4032f0 <_malloc_r+0x60>
  4032a0:	f035 0507 	bics.w	r5, r5, #7
  4032a4:	f100 80b6 	bmi.w	403414 <_malloc_r+0x184>
  4032a8:	42a9      	cmp	r1, r5
  4032aa:	f200 80b3 	bhi.w	403414 <_malloc_r+0x184>
  4032ae:	f000 fbc9 	bl	403a44 <__malloc_lock>
  4032b2:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
  4032b6:	d222      	bcs.n	4032fe <_malloc_r+0x6e>
  4032b8:	4fc2      	ldr	r7, [pc, #776]	; (4035c4 <_malloc_r+0x334>)
  4032ba:	08e8      	lsrs	r0, r5, #3
  4032bc:	eb07 03c0 	add.w	r3, r7, r0, lsl #3
  4032c0:	68dc      	ldr	r4, [r3, #12]
  4032c2:	429c      	cmp	r4, r3
  4032c4:	f000 81c8 	beq.w	403658 <_malloc_r+0x3c8>
  4032c8:	6863      	ldr	r3, [r4, #4]
  4032ca:	68e1      	ldr	r1, [r4, #12]
  4032cc:	68a5      	ldr	r5, [r4, #8]
  4032ce:	f023 0303 	bic.w	r3, r3, #3
  4032d2:	4423      	add	r3, r4
  4032d4:	4630      	mov	r0, r6
  4032d6:	685a      	ldr	r2, [r3, #4]
  4032d8:	60e9      	str	r1, [r5, #12]
  4032da:	f042 0201 	orr.w	r2, r2, #1
  4032de:	608d      	str	r5, [r1, #8]
  4032e0:	605a      	str	r2, [r3, #4]
  4032e2:	f000 fbb1 	bl	403a48 <__malloc_unlock>
  4032e6:	3408      	adds	r4, #8
  4032e8:	4620      	mov	r0, r4
  4032ea:	b003      	add	sp, #12
  4032ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4032f0:	2910      	cmp	r1, #16
  4032f2:	f200 808f 	bhi.w	403414 <_malloc_r+0x184>
  4032f6:	f000 fba5 	bl	403a44 <__malloc_lock>
  4032fa:	2510      	movs	r5, #16
  4032fc:	e7dc      	b.n	4032b8 <_malloc_r+0x28>
  4032fe:	0a68      	lsrs	r0, r5, #9
  403300:	f000 808f 	beq.w	403422 <_malloc_r+0x192>
  403304:	2804      	cmp	r0, #4
  403306:	f200 8154 	bhi.w	4035b2 <_malloc_r+0x322>
  40330a:	09a8      	lsrs	r0, r5, #6
  40330c:	3038      	adds	r0, #56	; 0x38
  40330e:	0041      	lsls	r1, r0, #1
  403310:	4fac      	ldr	r7, [pc, #688]	; (4035c4 <_malloc_r+0x334>)
  403312:	eb07 0181 	add.w	r1, r7, r1, lsl #2
  403316:	68cc      	ldr	r4, [r1, #12]
  403318:	42a1      	cmp	r1, r4
  40331a:	d106      	bne.n	40332a <_malloc_r+0x9a>
  40331c:	e00c      	b.n	403338 <_malloc_r+0xa8>
  40331e:	2a00      	cmp	r2, #0
  403320:	f280 8082 	bge.w	403428 <_malloc_r+0x198>
  403324:	68e4      	ldr	r4, [r4, #12]
  403326:	42a1      	cmp	r1, r4
  403328:	d006      	beq.n	403338 <_malloc_r+0xa8>
  40332a:	6863      	ldr	r3, [r4, #4]
  40332c:	f023 0303 	bic.w	r3, r3, #3
  403330:	1b5a      	subs	r2, r3, r5
  403332:	2a0f      	cmp	r2, #15
  403334:	ddf3      	ble.n	40331e <_malloc_r+0x8e>
  403336:	3801      	subs	r0, #1
  403338:	3001      	adds	r0, #1
  40333a:	49a2      	ldr	r1, [pc, #648]	; (4035c4 <_malloc_r+0x334>)
  40333c:	693c      	ldr	r4, [r7, #16]
  40333e:	f101 0e08 	add.w	lr, r1, #8
  403342:	4574      	cmp	r4, lr
  403344:	f000 817d 	beq.w	403642 <_malloc_r+0x3b2>
  403348:	6863      	ldr	r3, [r4, #4]
  40334a:	f023 0303 	bic.w	r3, r3, #3
  40334e:	1b5a      	subs	r2, r3, r5
  403350:	2a0f      	cmp	r2, #15
  403352:	f300 8163 	bgt.w	40361c <_malloc_r+0x38c>
  403356:	2a00      	cmp	r2, #0
  403358:	f8c1 e014 	str.w	lr, [r1, #20]
  40335c:	f8c1 e010 	str.w	lr, [r1, #16]
  403360:	da73      	bge.n	40344a <_malloc_r+0x1ba>
  403362:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  403366:	f080 8139 	bcs.w	4035dc <_malloc_r+0x34c>
  40336a:	08db      	lsrs	r3, r3, #3
  40336c:	eb01 08c3 	add.w	r8, r1, r3, lsl #3
  403370:	ea4f 0ca3 	mov.w	ip, r3, asr #2
  403374:	684a      	ldr	r2, [r1, #4]
  403376:	f8d8 9008 	ldr.w	r9, [r8, #8]
  40337a:	f8c4 9008 	str.w	r9, [r4, #8]
  40337e:	2301      	movs	r3, #1
  403380:	fa03 f30c 	lsl.w	r3, r3, ip
  403384:	4313      	orrs	r3, r2
  403386:	f8c4 800c 	str.w	r8, [r4, #12]
  40338a:	604b      	str	r3, [r1, #4]
  40338c:	f8c8 4008 	str.w	r4, [r8, #8]
  403390:	f8c9 400c 	str.w	r4, [r9, #12]
  403394:	1082      	asrs	r2, r0, #2
  403396:	2401      	movs	r4, #1
  403398:	4094      	lsls	r4, r2
  40339a:	429c      	cmp	r4, r3
  40339c:	d862      	bhi.n	403464 <_malloc_r+0x1d4>
  40339e:	4223      	tst	r3, r4
  4033a0:	d106      	bne.n	4033b0 <_malloc_r+0x120>
  4033a2:	f020 0003 	bic.w	r0, r0, #3
  4033a6:	0064      	lsls	r4, r4, #1
  4033a8:	4223      	tst	r3, r4
  4033aa:	f100 0004 	add.w	r0, r0, #4
  4033ae:	d0fa      	beq.n	4033a6 <_malloc_r+0x116>
  4033b0:	eb07 08c0 	add.w	r8, r7, r0, lsl #3
  4033b4:	46c4      	mov	ip, r8
  4033b6:	4681      	mov	r9, r0
  4033b8:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4033bc:	459c      	cmp	ip, r3
  4033be:	d107      	bne.n	4033d0 <_malloc_r+0x140>
  4033c0:	e141      	b.n	403646 <_malloc_r+0x3b6>
  4033c2:	2900      	cmp	r1, #0
  4033c4:	f280 8151 	bge.w	40366a <_malloc_r+0x3da>
  4033c8:	68db      	ldr	r3, [r3, #12]
  4033ca:	459c      	cmp	ip, r3
  4033cc:	f000 813b 	beq.w	403646 <_malloc_r+0x3b6>
  4033d0:	685a      	ldr	r2, [r3, #4]
  4033d2:	f022 0203 	bic.w	r2, r2, #3
  4033d6:	1b51      	subs	r1, r2, r5
  4033d8:	290f      	cmp	r1, #15
  4033da:	ddf2      	ble.n	4033c2 <_malloc_r+0x132>
  4033dc:	461c      	mov	r4, r3
  4033de:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4033e2:	f854 8f08 	ldr.w	r8, [r4, #8]!
  4033e6:	195a      	adds	r2, r3, r5
  4033e8:	f045 0901 	orr.w	r9, r5, #1
  4033ec:	f041 0501 	orr.w	r5, r1, #1
  4033f0:	f8c3 9004 	str.w	r9, [r3, #4]
  4033f4:	4630      	mov	r0, r6
  4033f6:	f8c8 c00c 	str.w	ip, [r8, #12]
  4033fa:	f8cc 8008 	str.w	r8, [ip, #8]
  4033fe:	617a      	str	r2, [r7, #20]
  403400:	613a      	str	r2, [r7, #16]
  403402:	f8c2 e00c 	str.w	lr, [r2, #12]
  403406:	f8c2 e008 	str.w	lr, [r2, #8]
  40340a:	6055      	str	r5, [r2, #4]
  40340c:	5051      	str	r1, [r2, r1]
  40340e:	f000 fb1b 	bl	403a48 <__malloc_unlock>
  403412:	e769      	b.n	4032e8 <_malloc_r+0x58>
  403414:	2400      	movs	r4, #0
  403416:	230c      	movs	r3, #12
  403418:	4620      	mov	r0, r4
  40341a:	6033      	str	r3, [r6, #0]
  40341c:	b003      	add	sp, #12
  40341e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403422:	217e      	movs	r1, #126	; 0x7e
  403424:	203f      	movs	r0, #63	; 0x3f
  403426:	e773      	b.n	403310 <_malloc_r+0x80>
  403428:	4423      	add	r3, r4
  40342a:	68e1      	ldr	r1, [r4, #12]
  40342c:	685a      	ldr	r2, [r3, #4]
  40342e:	68a5      	ldr	r5, [r4, #8]
  403430:	f042 0201 	orr.w	r2, r2, #1
  403434:	60e9      	str	r1, [r5, #12]
  403436:	4630      	mov	r0, r6
  403438:	608d      	str	r5, [r1, #8]
  40343a:	605a      	str	r2, [r3, #4]
  40343c:	f000 fb04 	bl	403a48 <__malloc_unlock>
  403440:	3408      	adds	r4, #8
  403442:	4620      	mov	r0, r4
  403444:	b003      	add	sp, #12
  403446:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40344a:	4423      	add	r3, r4
  40344c:	4630      	mov	r0, r6
  40344e:	685a      	ldr	r2, [r3, #4]
  403450:	f042 0201 	orr.w	r2, r2, #1
  403454:	605a      	str	r2, [r3, #4]
  403456:	f000 faf7 	bl	403a48 <__malloc_unlock>
  40345a:	3408      	adds	r4, #8
  40345c:	4620      	mov	r0, r4
  40345e:	b003      	add	sp, #12
  403460:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403464:	68bc      	ldr	r4, [r7, #8]
  403466:	6863      	ldr	r3, [r4, #4]
  403468:	f023 0803 	bic.w	r8, r3, #3
  40346c:	4545      	cmp	r5, r8
  40346e:	d804      	bhi.n	40347a <_malloc_r+0x1ea>
  403470:	ebc5 0308 	rsb	r3, r5, r8
  403474:	2b0f      	cmp	r3, #15
  403476:	f300 808c 	bgt.w	403592 <_malloc_r+0x302>
  40347a:	4b53      	ldr	r3, [pc, #332]	; (4035c8 <_malloc_r+0x338>)
  40347c:	f8df a158 	ldr.w	sl, [pc, #344]	; 4035d8 <_malloc_r+0x348>
  403480:	681a      	ldr	r2, [r3, #0]
  403482:	f8da 3000 	ldr.w	r3, [sl]
  403486:	3301      	adds	r3, #1
  403488:	442a      	add	r2, r5
  40348a:	eb04 0b08 	add.w	fp, r4, r8
  40348e:	f000 8150 	beq.w	403732 <_malloc_r+0x4a2>
  403492:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
  403496:	320f      	adds	r2, #15
  403498:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
  40349c:	f022 020f 	bic.w	r2, r2, #15
  4034a0:	4611      	mov	r1, r2
  4034a2:	4630      	mov	r0, r6
  4034a4:	9201      	str	r2, [sp, #4]
  4034a6:	f000 fcc7 	bl	403e38 <_sbrk_r>
  4034aa:	f1b0 3fff 	cmp.w	r0, #4294967295
  4034ae:	4681      	mov	r9, r0
  4034b0:	9a01      	ldr	r2, [sp, #4]
  4034b2:	f000 8147 	beq.w	403744 <_malloc_r+0x4b4>
  4034b6:	4583      	cmp	fp, r0
  4034b8:	f200 80ee 	bhi.w	403698 <_malloc_r+0x408>
  4034bc:	4b43      	ldr	r3, [pc, #268]	; (4035cc <_malloc_r+0x33c>)
  4034be:	6819      	ldr	r1, [r3, #0]
  4034c0:	45cb      	cmp	fp, r9
  4034c2:	4411      	add	r1, r2
  4034c4:	6019      	str	r1, [r3, #0]
  4034c6:	f000 8142 	beq.w	40374e <_malloc_r+0x4be>
  4034ca:	f8da 0000 	ldr.w	r0, [sl]
  4034ce:	f8df e108 	ldr.w	lr, [pc, #264]	; 4035d8 <_malloc_r+0x348>
  4034d2:	3001      	adds	r0, #1
  4034d4:	bf1b      	ittet	ne
  4034d6:	ebcb 0b09 	rsbne	fp, fp, r9
  4034da:	4459      	addne	r1, fp
  4034dc:	f8ce 9000 	streq.w	r9, [lr]
  4034e0:	6019      	strne	r1, [r3, #0]
  4034e2:	f019 0107 	ands.w	r1, r9, #7
  4034e6:	f000 8107 	beq.w	4036f8 <_malloc_r+0x468>
  4034ea:	f1c1 0008 	rsb	r0, r1, #8
  4034ee:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  4034f2:	4481      	add	r9, r0
  4034f4:	3108      	adds	r1, #8
  4034f6:	444a      	add	r2, r9
  4034f8:	f3c2 020b 	ubfx	r2, r2, #0, #12
  4034fc:	ebc2 0a01 	rsb	sl, r2, r1
  403500:	4651      	mov	r1, sl
  403502:	4630      	mov	r0, r6
  403504:	9301      	str	r3, [sp, #4]
  403506:	f000 fc97 	bl	403e38 <_sbrk_r>
  40350a:	1c43      	adds	r3, r0, #1
  40350c:	9b01      	ldr	r3, [sp, #4]
  40350e:	f000 812c 	beq.w	40376a <_malloc_r+0x4da>
  403512:	ebc9 0200 	rsb	r2, r9, r0
  403516:	4452      	add	r2, sl
  403518:	f042 0201 	orr.w	r2, r2, #1
  40351c:	6819      	ldr	r1, [r3, #0]
  40351e:	f8c7 9008 	str.w	r9, [r7, #8]
  403522:	4451      	add	r1, sl
  403524:	42bc      	cmp	r4, r7
  403526:	f8c9 2004 	str.w	r2, [r9, #4]
  40352a:	6019      	str	r1, [r3, #0]
  40352c:	f8df a09c 	ldr.w	sl, [pc, #156]	; 4035cc <_malloc_r+0x33c>
  403530:	d016      	beq.n	403560 <_malloc_r+0x2d0>
  403532:	f1b8 0f0f 	cmp.w	r8, #15
  403536:	f240 80ee 	bls.w	403716 <_malloc_r+0x486>
  40353a:	6862      	ldr	r2, [r4, #4]
  40353c:	f1a8 030c 	sub.w	r3, r8, #12
  403540:	f023 0307 	bic.w	r3, r3, #7
  403544:	18e0      	adds	r0, r4, r3
  403546:	f002 0201 	and.w	r2, r2, #1
  40354a:	f04f 0e05 	mov.w	lr, #5
  40354e:	431a      	orrs	r2, r3
  403550:	2b0f      	cmp	r3, #15
  403552:	6062      	str	r2, [r4, #4]
  403554:	f8c0 e004 	str.w	lr, [r0, #4]
  403558:	f8c0 e008 	str.w	lr, [r0, #8]
  40355c:	f200 8109 	bhi.w	403772 <_malloc_r+0x4e2>
  403560:	4b1b      	ldr	r3, [pc, #108]	; (4035d0 <_malloc_r+0x340>)
  403562:	68bc      	ldr	r4, [r7, #8]
  403564:	681a      	ldr	r2, [r3, #0]
  403566:	4291      	cmp	r1, r2
  403568:	bf88      	it	hi
  40356a:	6019      	strhi	r1, [r3, #0]
  40356c:	4b19      	ldr	r3, [pc, #100]	; (4035d4 <_malloc_r+0x344>)
  40356e:	681a      	ldr	r2, [r3, #0]
  403570:	4291      	cmp	r1, r2
  403572:	6862      	ldr	r2, [r4, #4]
  403574:	bf88      	it	hi
  403576:	6019      	strhi	r1, [r3, #0]
  403578:	f022 0203 	bic.w	r2, r2, #3
  40357c:	4295      	cmp	r5, r2
  40357e:	eba2 0305 	sub.w	r3, r2, r5
  403582:	d801      	bhi.n	403588 <_malloc_r+0x2f8>
  403584:	2b0f      	cmp	r3, #15
  403586:	dc04      	bgt.n	403592 <_malloc_r+0x302>
  403588:	4630      	mov	r0, r6
  40358a:	f000 fa5d 	bl	403a48 <__malloc_unlock>
  40358e:	2400      	movs	r4, #0
  403590:	e6aa      	b.n	4032e8 <_malloc_r+0x58>
  403592:	1962      	adds	r2, r4, r5
  403594:	f043 0301 	orr.w	r3, r3, #1
  403598:	f045 0501 	orr.w	r5, r5, #1
  40359c:	6065      	str	r5, [r4, #4]
  40359e:	4630      	mov	r0, r6
  4035a0:	60ba      	str	r2, [r7, #8]
  4035a2:	6053      	str	r3, [r2, #4]
  4035a4:	f000 fa50 	bl	403a48 <__malloc_unlock>
  4035a8:	3408      	adds	r4, #8
  4035aa:	4620      	mov	r0, r4
  4035ac:	b003      	add	sp, #12
  4035ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4035b2:	2814      	cmp	r0, #20
  4035b4:	d968      	bls.n	403688 <_malloc_r+0x3f8>
  4035b6:	2854      	cmp	r0, #84	; 0x54
  4035b8:	f200 8097 	bhi.w	4036ea <_malloc_r+0x45a>
  4035bc:	0b28      	lsrs	r0, r5, #12
  4035be:	306e      	adds	r0, #110	; 0x6e
  4035c0:	0041      	lsls	r1, r0, #1
  4035c2:	e6a5      	b.n	403310 <_malloc_r+0x80>
  4035c4:	20000458 	.word	0x20000458
  4035c8:	20000908 	.word	0x20000908
  4035cc:	2000090c 	.word	0x2000090c
  4035d0:	20000904 	.word	0x20000904
  4035d4:	20000900 	.word	0x20000900
  4035d8:	20000864 	.word	0x20000864
  4035dc:	0a5a      	lsrs	r2, r3, #9
  4035de:	2a04      	cmp	r2, #4
  4035e0:	d955      	bls.n	40368e <_malloc_r+0x3fe>
  4035e2:	2a14      	cmp	r2, #20
  4035e4:	f200 80a7 	bhi.w	403736 <_malloc_r+0x4a6>
  4035e8:	325b      	adds	r2, #91	; 0x5b
  4035ea:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  4035ee:	eb07 0c8c 	add.w	ip, r7, ip, lsl #2
  4035f2:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 4037b0 <_malloc_r+0x520>
  4035f6:	f8dc 1008 	ldr.w	r1, [ip, #8]
  4035fa:	4561      	cmp	r1, ip
  4035fc:	d07f      	beq.n	4036fe <_malloc_r+0x46e>
  4035fe:	684a      	ldr	r2, [r1, #4]
  403600:	f022 0203 	bic.w	r2, r2, #3
  403604:	4293      	cmp	r3, r2
  403606:	d202      	bcs.n	40360e <_malloc_r+0x37e>
  403608:	6889      	ldr	r1, [r1, #8]
  40360a:	458c      	cmp	ip, r1
  40360c:	d1f7      	bne.n	4035fe <_malloc_r+0x36e>
  40360e:	68ca      	ldr	r2, [r1, #12]
  403610:	687b      	ldr	r3, [r7, #4]
  403612:	60e2      	str	r2, [r4, #12]
  403614:	60a1      	str	r1, [r4, #8]
  403616:	6094      	str	r4, [r2, #8]
  403618:	60cc      	str	r4, [r1, #12]
  40361a:	e6bb      	b.n	403394 <_malloc_r+0x104>
  40361c:	1963      	adds	r3, r4, r5
  40361e:	f042 0701 	orr.w	r7, r2, #1
  403622:	f045 0501 	orr.w	r5, r5, #1
  403626:	6065      	str	r5, [r4, #4]
  403628:	4630      	mov	r0, r6
  40362a:	614b      	str	r3, [r1, #20]
  40362c:	610b      	str	r3, [r1, #16]
  40362e:	f8c3 e00c 	str.w	lr, [r3, #12]
  403632:	f8c3 e008 	str.w	lr, [r3, #8]
  403636:	605f      	str	r7, [r3, #4]
  403638:	509a      	str	r2, [r3, r2]
  40363a:	3408      	adds	r4, #8
  40363c:	f000 fa04 	bl	403a48 <__malloc_unlock>
  403640:	e652      	b.n	4032e8 <_malloc_r+0x58>
  403642:	684b      	ldr	r3, [r1, #4]
  403644:	e6a6      	b.n	403394 <_malloc_r+0x104>
  403646:	f109 0901 	add.w	r9, r9, #1
  40364a:	f019 0f03 	tst.w	r9, #3
  40364e:	f10c 0c08 	add.w	ip, ip, #8
  403652:	f47f aeb1 	bne.w	4033b8 <_malloc_r+0x128>
  403656:	e02c      	b.n	4036b2 <_malloc_r+0x422>
  403658:	f104 0308 	add.w	r3, r4, #8
  40365c:	6964      	ldr	r4, [r4, #20]
  40365e:	42a3      	cmp	r3, r4
  403660:	bf08      	it	eq
  403662:	3002      	addeq	r0, #2
  403664:	f43f ae69 	beq.w	40333a <_malloc_r+0xaa>
  403668:	e62e      	b.n	4032c8 <_malloc_r+0x38>
  40366a:	441a      	add	r2, r3
  40366c:	461c      	mov	r4, r3
  40366e:	6851      	ldr	r1, [r2, #4]
  403670:	68db      	ldr	r3, [r3, #12]
  403672:	f854 5f08 	ldr.w	r5, [r4, #8]!
  403676:	f041 0101 	orr.w	r1, r1, #1
  40367a:	6051      	str	r1, [r2, #4]
  40367c:	4630      	mov	r0, r6
  40367e:	60eb      	str	r3, [r5, #12]
  403680:	609d      	str	r5, [r3, #8]
  403682:	f000 f9e1 	bl	403a48 <__malloc_unlock>
  403686:	e62f      	b.n	4032e8 <_malloc_r+0x58>
  403688:	305b      	adds	r0, #91	; 0x5b
  40368a:	0041      	lsls	r1, r0, #1
  40368c:	e640      	b.n	403310 <_malloc_r+0x80>
  40368e:	099a      	lsrs	r2, r3, #6
  403690:	3238      	adds	r2, #56	; 0x38
  403692:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  403696:	e7aa      	b.n	4035ee <_malloc_r+0x35e>
  403698:	42bc      	cmp	r4, r7
  40369a:	4b45      	ldr	r3, [pc, #276]	; (4037b0 <_malloc_r+0x520>)
  40369c:	f43f af0e 	beq.w	4034bc <_malloc_r+0x22c>
  4036a0:	689c      	ldr	r4, [r3, #8]
  4036a2:	6862      	ldr	r2, [r4, #4]
  4036a4:	f022 0203 	bic.w	r2, r2, #3
  4036a8:	e768      	b.n	40357c <_malloc_r+0x2ec>
  4036aa:	f8d8 8000 	ldr.w	r8, [r8]
  4036ae:	4598      	cmp	r8, r3
  4036b0:	d17c      	bne.n	4037ac <_malloc_r+0x51c>
  4036b2:	f010 0f03 	tst.w	r0, #3
  4036b6:	f1a8 0308 	sub.w	r3, r8, #8
  4036ba:	f100 30ff 	add.w	r0, r0, #4294967295
  4036be:	d1f4      	bne.n	4036aa <_malloc_r+0x41a>
  4036c0:	687b      	ldr	r3, [r7, #4]
  4036c2:	ea23 0304 	bic.w	r3, r3, r4
  4036c6:	607b      	str	r3, [r7, #4]
  4036c8:	0064      	lsls	r4, r4, #1
  4036ca:	429c      	cmp	r4, r3
  4036cc:	f63f aeca 	bhi.w	403464 <_malloc_r+0x1d4>
  4036d0:	2c00      	cmp	r4, #0
  4036d2:	f43f aec7 	beq.w	403464 <_malloc_r+0x1d4>
  4036d6:	4223      	tst	r3, r4
  4036d8:	4648      	mov	r0, r9
  4036da:	f47f ae69 	bne.w	4033b0 <_malloc_r+0x120>
  4036de:	0064      	lsls	r4, r4, #1
  4036e0:	4223      	tst	r3, r4
  4036e2:	f100 0004 	add.w	r0, r0, #4
  4036e6:	d0fa      	beq.n	4036de <_malloc_r+0x44e>
  4036e8:	e662      	b.n	4033b0 <_malloc_r+0x120>
  4036ea:	f5b0 7faa 	cmp.w	r0, #340	; 0x154
  4036ee:	d818      	bhi.n	403722 <_malloc_r+0x492>
  4036f0:	0be8      	lsrs	r0, r5, #15
  4036f2:	3077      	adds	r0, #119	; 0x77
  4036f4:	0041      	lsls	r1, r0, #1
  4036f6:	e60b      	b.n	403310 <_malloc_r+0x80>
  4036f8:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  4036fc:	e6fb      	b.n	4034f6 <_malloc_r+0x266>
  4036fe:	f8d8 3004 	ldr.w	r3, [r8, #4]
  403702:	1092      	asrs	r2, r2, #2
  403704:	f04f 0c01 	mov.w	ip, #1
  403708:	fa0c f202 	lsl.w	r2, ip, r2
  40370c:	4313      	orrs	r3, r2
  40370e:	f8c8 3004 	str.w	r3, [r8, #4]
  403712:	460a      	mov	r2, r1
  403714:	e77d      	b.n	403612 <_malloc_r+0x382>
  403716:	2301      	movs	r3, #1
  403718:	f8c9 3004 	str.w	r3, [r9, #4]
  40371c:	464c      	mov	r4, r9
  40371e:	2200      	movs	r2, #0
  403720:	e72c      	b.n	40357c <_malloc_r+0x2ec>
  403722:	f240 5354 	movw	r3, #1364	; 0x554
  403726:	4298      	cmp	r0, r3
  403728:	d81c      	bhi.n	403764 <_malloc_r+0x4d4>
  40372a:	0ca8      	lsrs	r0, r5, #18
  40372c:	307c      	adds	r0, #124	; 0x7c
  40372e:	0041      	lsls	r1, r0, #1
  403730:	e5ee      	b.n	403310 <_malloc_r+0x80>
  403732:	3210      	adds	r2, #16
  403734:	e6b4      	b.n	4034a0 <_malloc_r+0x210>
  403736:	2a54      	cmp	r2, #84	; 0x54
  403738:	d823      	bhi.n	403782 <_malloc_r+0x4f2>
  40373a:	0b1a      	lsrs	r2, r3, #12
  40373c:	326e      	adds	r2, #110	; 0x6e
  40373e:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  403742:	e754      	b.n	4035ee <_malloc_r+0x35e>
  403744:	68bc      	ldr	r4, [r7, #8]
  403746:	6862      	ldr	r2, [r4, #4]
  403748:	f022 0203 	bic.w	r2, r2, #3
  40374c:	e716      	b.n	40357c <_malloc_r+0x2ec>
  40374e:	f3cb 000b 	ubfx	r0, fp, #0, #12
  403752:	2800      	cmp	r0, #0
  403754:	f47f aeb9 	bne.w	4034ca <_malloc_r+0x23a>
  403758:	4442      	add	r2, r8
  40375a:	68bb      	ldr	r3, [r7, #8]
  40375c:	f042 0201 	orr.w	r2, r2, #1
  403760:	605a      	str	r2, [r3, #4]
  403762:	e6fd      	b.n	403560 <_malloc_r+0x2d0>
  403764:	21fc      	movs	r1, #252	; 0xfc
  403766:	207e      	movs	r0, #126	; 0x7e
  403768:	e5d2      	b.n	403310 <_malloc_r+0x80>
  40376a:	2201      	movs	r2, #1
  40376c:	f04f 0a00 	mov.w	sl, #0
  403770:	e6d4      	b.n	40351c <_malloc_r+0x28c>
  403772:	f104 0108 	add.w	r1, r4, #8
  403776:	4630      	mov	r0, r6
  403778:	f7ff fa7a 	bl	402c70 <_free_r>
  40377c:	f8da 1000 	ldr.w	r1, [sl]
  403780:	e6ee      	b.n	403560 <_malloc_r+0x2d0>
  403782:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  403786:	d804      	bhi.n	403792 <_malloc_r+0x502>
  403788:	0bda      	lsrs	r2, r3, #15
  40378a:	3277      	adds	r2, #119	; 0x77
  40378c:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  403790:	e72d      	b.n	4035ee <_malloc_r+0x35e>
  403792:	f240 5154 	movw	r1, #1364	; 0x554
  403796:	428a      	cmp	r2, r1
  403798:	d804      	bhi.n	4037a4 <_malloc_r+0x514>
  40379a:	0c9a      	lsrs	r2, r3, #18
  40379c:	327c      	adds	r2, #124	; 0x7c
  40379e:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  4037a2:	e724      	b.n	4035ee <_malloc_r+0x35e>
  4037a4:	f04f 0cfc 	mov.w	ip, #252	; 0xfc
  4037a8:	227e      	movs	r2, #126	; 0x7e
  4037aa:	e720      	b.n	4035ee <_malloc_r+0x35e>
  4037ac:	687b      	ldr	r3, [r7, #4]
  4037ae:	e78b      	b.n	4036c8 <_malloc_r+0x438>
  4037b0:	20000458 	.word	0x20000458

004037b4 <memchr>:
  4037b4:	0783      	lsls	r3, r0, #30
  4037b6:	b470      	push	{r4, r5, r6}
  4037b8:	b2c9      	uxtb	r1, r1
  4037ba:	d040      	beq.n	40383e <memchr+0x8a>
  4037bc:	1e54      	subs	r4, r2, #1
  4037be:	2a00      	cmp	r2, #0
  4037c0:	d03f      	beq.n	403842 <memchr+0x8e>
  4037c2:	7803      	ldrb	r3, [r0, #0]
  4037c4:	428b      	cmp	r3, r1
  4037c6:	bf18      	it	ne
  4037c8:	1c43      	addne	r3, r0, #1
  4037ca:	d106      	bne.n	4037da <memchr+0x26>
  4037cc:	e01d      	b.n	40380a <memchr+0x56>
  4037ce:	b1f4      	cbz	r4, 40380e <memchr+0x5a>
  4037d0:	7802      	ldrb	r2, [r0, #0]
  4037d2:	428a      	cmp	r2, r1
  4037d4:	f104 34ff 	add.w	r4, r4, #4294967295
  4037d8:	d017      	beq.n	40380a <memchr+0x56>
  4037da:	f013 0f03 	tst.w	r3, #3
  4037de:	4618      	mov	r0, r3
  4037e0:	f103 0301 	add.w	r3, r3, #1
  4037e4:	d1f3      	bne.n	4037ce <memchr+0x1a>
  4037e6:	2c03      	cmp	r4, #3
  4037e8:	d814      	bhi.n	403814 <memchr+0x60>
  4037ea:	b184      	cbz	r4, 40380e <memchr+0x5a>
  4037ec:	7803      	ldrb	r3, [r0, #0]
  4037ee:	428b      	cmp	r3, r1
  4037f0:	d00b      	beq.n	40380a <memchr+0x56>
  4037f2:	1905      	adds	r5, r0, r4
  4037f4:	1c43      	adds	r3, r0, #1
  4037f6:	e002      	b.n	4037fe <memchr+0x4a>
  4037f8:	7802      	ldrb	r2, [r0, #0]
  4037fa:	428a      	cmp	r2, r1
  4037fc:	d005      	beq.n	40380a <memchr+0x56>
  4037fe:	42ab      	cmp	r3, r5
  403800:	4618      	mov	r0, r3
  403802:	f103 0301 	add.w	r3, r3, #1
  403806:	d1f7      	bne.n	4037f8 <memchr+0x44>
  403808:	2000      	movs	r0, #0
  40380a:	bc70      	pop	{r4, r5, r6}
  40380c:	4770      	bx	lr
  40380e:	4620      	mov	r0, r4
  403810:	bc70      	pop	{r4, r5, r6}
  403812:	4770      	bx	lr
  403814:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
  403818:	4602      	mov	r2, r0
  40381a:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
  40381e:	4610      	mov	r0, r2
  403820:	3204      	adds	r2, #4
  403822:	6803      	ldr	r3, [r0, #0]
  403824:	4073      	eors	r3, r6
  403826:	f1a3 3501 	sub.w	r5, r3, #16843009	; 0x1010101
  40382a:	ea25 0303 	bic.w	r3, r5, r3
  40382e:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
  403832:	d1da      	bne.n	4037ea <memchr+0x36>
  403834:	3c04      	subs	r4, #4
  403836:	2c03      	cmp	r4, #3
  403838:	4610      	mov	r0, r2
  40383a:	d8f0      	bhi.n	40381e <memchr+0x6a>
  40383c:	e7d5      	b.n	4037ea <memchr+0x36>
  40383e:	4614      	mov	r4, r2
  403840:	e7d1      	b.n	4037e6 <memchr+0x32>
  403842:	4610      	mov	r0, r2
  403844:	e7e1      	b.n	40380a <memchr+0x56>
  403846:	bf00      	nop

00403848 <memcpy>:
  403848:	4684      	mov	ip, r0
  40384a:	ea41 0300 	orr.w	r3, r1, r0
  40384e:	f013 0303 	ands.w	r3, r3, #3
  403852:	d16d      	bne.n	403930 <memcpy+0xe8>
  403854:	3a40      	subs	r2, #64	; 0x40
  403856:	d341      	bcc.n	4038dc <memcpy+0x94>
  403858:	f851 3b04 	ldr.w	r3, [r1], #4
  40385c:	f840 3b04 	str.w	r3, [r0], #4
  403860:	f851 3b04 	ldr.w	r3, [r1], #4
  403864:	f840 3b04 	str.w	r3, [r0], #4
  403868:	f851 3b04 	ldr.w	r3, [r1], #4
  40386c:	f840 3b04 	str.w	r3, [r0], #4
  403870:	f851 3b04 	ldr.w	r3, [r1], #4
  403874:	f840 3b04 	str.w	r3, [r0], #4
  403878:	f851 3b04 	ldr.w	r3, [r1], #4
  40387c:	f840 3b04 	str.w	r3, [r0], #4
  403880:	f851 3b04 	ldr.w	r3, [r1], #4
  403884:	f840 3b04 	str.w	r3, [r0], #4
  403888:	f851 3b04 	ldr.w	r3, [r1], #4
  40388c:	f840 3b04 	str.w	r3, [r0], #4
  403890:	f851 3b04 	ldr.w	r3, [r1], #4
  403894:	f840 3b04 	str.w	r3, [r0], #4
  403898:	f851 3b04 	ldr.w	r3, [r1], #4
  40389c:	f840 3b04 	str.w	r3, [r0], #4
  4038a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4038a4:	f840 3b04 	str.w	r3, [r0], #4
  4038a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4038ac:	f840 3b04 	str.w	r3, [r0], #4
  4038b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4038b4:	f840 3b04 	str.w	r3, [r0], #4
  4038b8:	f851 3b04 	ldr.w	r3, [r1], #4
  4038bc:	f840 3b04 	str.w	r3, [r0], #4
  4038c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4038c4:	f840 3b04 	str.w	r3, [r0], #4
  4038c8:	f851 3b04 	ldr.w	r3, [r1], #4
  4038cc:	f840 3b04 	str.w	r3, [r0], #4
  4038d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4038d4:	f840 3b04 	str.w	r3, [r0], #4
  4038d8:	3a40      	subs	r2, #64	; 0x40
  4038da:	d2bd      	bcs.n	403858 <memcpy+0x10>
  4038dc:	3230      	adds	r2, #48	; 0x30
  4038de:	d311      	bcc.n	403904 <memcpy+0xbc>
  4038e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4038e4:	f840 3b04 	str.w	r3, [r0], #4
  4038e8:	f851 3b04 	ldr.w	r3, [r1], #4
  4038ec:	f840 3b04 	str.w	r3, [r0], #4
  4038f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4038f4:	f840 3b04 	str.w	r3, [r0], #4
  4038f8:	f851 3b04 	ldr.w	r3, [r1], #4
  4038fc:	f840 3b04 	str.w	r3, [r0], #4
  403900:	3a10      	subs	r2, #16
  403902:	d2ed      	bcs.n	4038e0 <memcpy+0x98>
  403904:	320c      	adds	r2, #12
  403906:	d305      	bcc.n	403914 <memcpy+0xcc>
  403908:	f851 3b04 	ldr.w	r3, [r1], #4
  40390c:	f840 3b04 	str.w	r3, [r0], #4
  403910:	3a04      	subs	r2, #4
  403912:	d2f9      	bcs.n	403908 <memcpy+0xc0>
  403914:	3204      	adds	r2, #4
  403916:	d008      	beq.n	40392a <memcpy+0xe2>
  403918:	07d2      	lsls	r2, r2, #31
  40391a:	bf1c      	itt	ne
  40391c:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403920:	f800 3b01 	strbne.w	r3, [r0], #1
  403924:	d301      	bcc.n	40392a <memcpy+0xe2>
  403926:	880b      	ldrh	r3, [r1, #0]
  403928:	8003      	strh	r3, [r0, #0]
  40392a:	4660      	mov	r0, ip
  40392c:	4770      	bx	lr
  40392e:	bf00      	nop
  403930:	2a08      	cmp	r2, #8
  403932:	d313      	bcc.n	40395c <memcpy+0x114>
  403934:	078b      	lsls	r3, r1, #30
  403936:	d08d      	beq.n	403854 <memcpy+0xc>
  403938:	f010 0303 	ands.w	r3, r0, #3
  40393c:	d08a      	beq.n	403854 <memcpy+0xc>
  40393e:	f1c3 0304 	rsb	r3, r3, #4
  403942:	1ad2      	subs	r2, r2, r3
  403944:	07db      	lsls	r3, r3, #31
  403946:	bf1c      	itt	ne
  403948:	f811 3b01 	ldrbne.w	r3, [r1], #1
  40394c:	f800 3b01 	strbne.w	r3, [r0], #1
  403950:	d380      	bcc.n	403854 <memcpy+0xc>
  403952:	f831 3b02 	ldrh.w	r3, [r1], #2
  403956:	f820 3b02 	strh.w	r3, [r0], #2
  40395a:	e77b      	b.n	403854 <memcpy+0xc>
  40395c:	3a04      	subs	r2, #4
  40395e:	d3d9      	bcc.n	403914 <memcpy+0xcc>
  403960:	3a01      	subs	r2, #1
  403962:	f811 3b01 	ldrb.w	r3, [r1], #1
  403966:	f800 3b01 	strb.w	r3, [r0], #1
  40396a:	d2f9      	bcs.n	403960 <memcpy+0x118>
  40396c:	780b      	ldrb	r3, [r1, #0]
  40396e:	7003      	strb	r3, [r0, #0]
  403970:	784b      	ldrb	r3, [r1, #1]
  403972:	7043      	strb	r3, [r0, #1]
  403974:	788b      	ldrb	r3, [r1, #2]
  403976:	7083      	strb	r3, [r0, #2]
  403978:	4660      	mov	r0, ip
  40397a:	4770      	bx	lr

0040397c <memmove>:
  40397c:	4288      	cmp	r0, r1
  40397e:	b5f0      	push	{r4, r5, r6, r7, lr}
  403980:	d90d      	bls.n	40399e <memmove+0x22>
  403982:	188b      	adds	r3, r1, r2
  403984:	4298      	cmp	r0, r3
  403986:	d20a      	bcs.n	40399e <memmove+0x22>
  403988:	1881      	adds	r1, r0, r2
  40398a:	2a00      	cmp	r2, #0
  40398c:	d054      	beq.n	403a38 <memmove+0xbc>
  40398e:	1a9a      	subs	r2, r3, r2
  403990:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  403994:	f801 4d01 	strb.w	r4, [r1, #-1]!
  403998:	4293      	cmp	r3, r2
  40399a:	d1f9      	bne.n	403990 <memmove+0x14>
  40399c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40399e:	2a0f      	cmp	r2, #15
  4039a0:	d948      	bls.n	403a34 <memmove+0xb8>
  4039a2:	ea40 0301 	orr.w	r3, r0, r1
  4039a6:	079b      	lsls	r3, r3, #30
  4039a8:	d147      	bne.n	403a3a <memmove+0xbe>
  4039aa:	f100 0410 	add.w	r4, r0, #16
  4039ae:	f101 0310 	add.w	r3, r1, #16
  4039b2:	4615      	mov	r5, r2
  4039b4:	f853 6c10 	ldr.w	r6, [r3, #-16]
  4039b8:	f844 6c10 	str.w	r6, [r4, #-16]
  4039bc:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  4039c0:	f844 6c0c 	str.w	r6, [r4, #-12]
  4039c4:	f853 6c08 	ldr.w	r6, [r3, #-8]
  4039c8:	f844 6c08 	str.w	r6, [r4, #-8]
  4039cc:	3d10      	subs	r5, #16
  4039ce:	f853 6c04 	ldr.w	r6, [r3, #-4]
  4039d2:	f844 6c04 	str.w	r6, [r4, #-4]
  4039d6:	2d0f      	cmp	r5, #15
  4039d8:	f103 0310 	add.w	r3, r3, #16
  4039dc:	f104 0410 	add.w	r4, r4, #16
  4039e0:	d8e8      	bhi.n	4039b4 <memmove+0x38>
  4039e2:	f1a2 0310 	sub.w	r3, r2, #16
  4039e6:	f023 030f 	bic.w	r3, r3, #15
  4039ea:	f002 0e0f 	and.w	lr, r2, #15
  4039ee:	3310      	adds	r3, #16
  4039f0:	f1be 0f03 	cmp.w	lr, #3
  4039f4:	4419      	add	r1, r3
  4039f6:	4403      	add	r3, r0
  4039f8:	d921      	bls.n	403a3e <memmove+0xc2>
  4039fa:	1f1e      	subs	r6, r3, #4
  4039fc:	460d      	mov	r5, r1
  4039fe:	4674      	mov	r4, lr
  403a00:	3c04      	subs	r4, #4
  403a02:	f855 7b04 	ldr.w	r7, [r5], #4
  403a06:	f846 7f04 	str.w	r7, [r6, #4]!
  403a0a:	2c03      	cmp	r4, #3
  403a0c:	d8f8      	bhi.n	403a00 <memmove+0x84>
  403a0e:	f1ae 0404 	sub.w	r4, lr, #4
  403a12:	f024 0403 	bic.w	r4, r4, #3
  403a16:	3404      	adds	r4, #4
  403a18:	4423      	add	r3, r4
  403a1a:	4421      	add	r1, r4
  403a1c:	f002 0203 	and.w	r2, r2, #3
  403a20:	b152      	cbz	r2, 403a38 <memmove+0xbc>
  403a22:	3b01      	subs	r3, #1
  403a24:	440a      	add	r2, r1
  403a26:	f811 4b01 	ldrb.w	r4, [r1], #1
  403a2a:	f803 4f01 	strb.w	r4, [r3, #1]!
  403a2e:	4291      	cmp	r1, r2
  403a30:	d1f9      	bne.n	403a26 <memmove+0xaa>
  403a32:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403a34:	4603      	mov	r3, r0
  403a36:	e7f3      	b.n	403a20 <memmove+0xa4>
  403a38:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403a3a:	4603      	mov	r3, r0
  403a3c:	e7f1      	b.n	403a22 <memmove+0xa6>
  403a3e:	4672      	mov	r2, lr
  403a40:	e7ee      	b.n	403a20 <memmove+0xa4>
  403a42:	bf00      	nop

00403a44 <__malloc_lock>:
  403a44:	4770      	bx	lr
  403a46:	bf00      	nop

00403a48 <__malloc_unlock>:
  403a48:	4770      	bx	lr
  403a4a:	bf00      	nop

00403a4c <_realloc_r>:
  403a4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403a50:	4617      	mov	r7, r2
  403a52:	b083      	sub	sp, #12
  403a54:	460e      	mov	r6, r1
  403a56:	2900      	cmp	r1, #0
  403a58:	f000 80e7 	beq.w	403c2a <_realloc_r+0x1de>
  403a5c:	4681      	mov	r9, r0
  403a5e:	f107 050b 	add.w	r5, r7, #11
  403a62:	f7ff ffef 	bl	403a44 <__malloc_lock>
  403a66:	f856 3c04 	ldr.w	r3, [r6, #-4]
  403a6a:	2d16      	cmp	r5, #22
  403a6c:	f023 0403 	bic.w	r4, r3, #3
  403a70:	f1a6 0808 	sub.w	r8, r6, #8
  403a74:	d84c      	bhi.n	403b10 <_realloc_r+0xc4>
  403a76:	2210      	movs	r2, #16
  403a78:	4615      	mov	r5, r2
  403a7a:	42af      	cmp	r7, r5
  403a7c:	d84d      	bhi.n	403b1a <_realloc_r+0xce>
  403a7e:	4294      	cmp	r4, r2
  403a80:	f280 8084 	bge.w	403b8c <_realloc_r+0x140>
  403a84:	f8df b3ac 	ldr.w	fp, [pc, #940]	; 403e34 <_realloc_r+0x3e8>
  403a88:	f8db 0008 	ldr.w	r0, [fp, #8]
  403a8c:	eb08 0104 	add.w	r1, r8, r4
  403a90:	4288      	cmp	r0, r1
  403a92:	f000 80d6 	beq.w	403c42 <_realloc_r+0x1f6>
  403a96:	6848      	ldr	r0, [r1, #4]
  403a98:	f020 0e01 	bic.w	lr, r0, #1
  403a9c:	448e      	add	lr, r1
  403a9e:	f8de e004 	ldr.w	lr, [lr, #4]
  403aa2:	f01e 0f01 	tst.w	lr, #1
  403aa6:	d13f      	bne.n	403b28 <_realloc_r+0xdc>
  403aa8:	f020 0003 	bic.w	r0, r0, #3
  403aac:	4420      	add	r0, r4
  403aae:	4290      	cmp	r0, r2
  403ab0:	f280 80c1 	bge.w	403c36 <_realloc_r+0x1ea>
  403ab4:	07db      	lsls	r3, r3, #31
  403ab6:	f100 808f 	bmi.w	403bd8 <_realloc_r+0x18c>
  403aba:	f856 3c08 	ldr.w	r3, [r6, #-8]
  403abe:	ebc3 0a08 	rsb	sl, r3, r8
  403ac2:	f8da 3004 	ldr.w	r3, [sl, #4]
  403ac6:	f023 0303 	bic.w	r3, r3, #3
  403aca:	eb00 0e03 	add.w	lr, r0, r3
  403ace:	4596      	cmp	lr, r2
  403ad0:	db34      	blt.n	403b3c <_realloc_r+0xf0>
  403ad2:	68cb      	ldr	r3, [r1, #12]
  403ad4:	688a      	ldr	r2, [r1, #8]
  403ad6:	4657      	mov	r7, sl
  403ad8:	60d3      	str	r3, [r2, #12]
  403ada:	609a      	str	r2, [r3, #8]
  403adc:	f857 1f08 	ldr.w	r1, [r7, #8]!
  403ae0:	f8da 300c 	ldr.w	r3, [sl, #12]
  403ae4:	60cb      	str	r3, [r1, #12]
  403ae6:	1f22      	subs	r2, r4, #4
  403ae8:	2a24      	cmp	r2, #36	; 0x24
  403aea:	6099      	str	r1, [r3, #8]
  403aec:	f200 8136 	bhi.w	403d5c <_realloc_r+0x310>
  403af0:	2a13      	cmp	r2, #19
  403af2:	f240 80fd 	bls.w	403cf0 <_realloc_r+0x2a4>
  403af6:	6833      	ldr	r3, [r6, #0]
  403af8:	f8ca 3008 	str.w	r3, [sl, #8]
  403afc:	6873      	ldr	r3, [r6, #4]
  403afe:	f8ca 300c 	str.w	r3, [sl, #12]
  403b02:	2a1b      	cmp	r2, #27
  403b04:	f200 8140 	bhi.w	403d88 <_realloc_r+0x33c>
  403b08:	3608      	adds	r6, #8
  403b0a:	f10a 0310 	add.w	r3, sl, #16
  403b0e:	e0f0      	b.n	403cf2 <_realloc_r+0x2a6>
  403b10:	f025 0507 	bic.w	r5, r5, #7
  403b14:	2d00      	cmp	r5, #0
  403b16:	462a      	mov	r2, r5
  403b18:	daaf      	bge.n	403a7a <_realloc_r+0x2e>
  403b1a:	230c      	movs	r3, #12
  403b1c:	2000      	movs	r0, #0
  403b1e:	f8c9 3000 	str.w	r3, [r9]
  403b22:	b003      	add	sp, #12
  403b24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403b28:	07d9      	lsls	r1, r3, #31
  403b2a:	d455      	bmi.n	403bd8 <_realloc_r+0x18c>
  403b2c:	f856 3c08 	ldr.w	r3, [r6, #-8]
  403b30:	ebc3 0a08 	rsb	sl, r3, r8
  403b34:	f8da 3004 	ldr.w	r3, [sl, #4]
  403b38:	f023 0303 	bic.w	r3, r3, #3
  403b3c:	4423      	add	r3, r4
  403b3e:	4293      	cmp	r3, r2
  403b40:	db4a      	blt.n	403bd8 <_realloc_r+0x18c>
  403b42:	4657      	mov	r7, sl
  403b44:	f8da 100c 	ldr.w	r1, [sl, #12]
  403b48:	f857 0f08 	ldr.w	r0, [r7, #8]!
  403b4c:	1f22      	subs	r2, r4, #4
  403b4e:	2a24      	cmp	r2, #36	; 0x24
  403b50:	60c1      	str	r1, [r0, #12]
  403b52:	6088      	str	r0, [r1, #8]
  403b54:	f200 810e 	bhi.w	403d74 <_realloc_r+0x328>
  403b58:	2a13      	cmp	r2, #19
  403b5a:	f240 8109 	bls.w	403d70 <_realloc_r+0x324>
  403b5e:	6831      	ldr	r1, [r6, #0]
  403b60:	f8ca 1008 	str.w	r1, [sl, #8]
  403b64:	6871      	ldr	r1, [r6, #4]
  403b66:	f8ca 100c 	str.w	r1, [sl, #12]
  403b6a:	2a1b      	cmp	r2, #27
  403b6c:	f200 8121 	bhi.w	403db2 <_realloc_r+0x366>
  403b70:	3608      	adds	r6, #8
  403b72:	f10a 0210 	add.w	r2, sl, #16
  403b76:	6831      	ldr	r1, [r6, #0]
  403b78:	6011      	str	r1, [r2, #0]
  403b7a:	6871      	ldr	r1, [r6, #4]
  403b7c:	6051      	str	r1, [r2, #4]
  403b7e:	68b1      	ldr	r1, [r6, #8]
  403b80:	6091      	str	r1, [r2, #8]
  403b82:	461c      	mov	r4, r3
  403b84:	f8da 3004 	ldr.w	r3, [sl, #4]
  403b88:	463e      	mov	r6, r7
  403b8a:	46d0      	mov	r8, sl
  403b8c:	1b62      	subs	r2, r4, r5
  403b8e:	2a0f      	cmp	r2, #15
  403b90:	f003 0301 	and.w	r3, r3, #1
  403b94:	d80e      	bhi.n	403bb4 <_realloc_r+0x168>
  403b96:	4323      	orrs	r3, r4
  403b98:	4444      	add	r4, r8
  403b9a:	f8c8 3004 	str.w	r3, [r8, #4]
  403b9e:	6863      	ldr	r3, [r4, #4]
  403ba0:	f043 0301 	orr.w	r3, r3, #1
  403ba4:	6063      	str	r3, [r4, #4]
  403ba6:	4648      	mov	r0, r9
  403ba8:	f7ff ff4e 	bl	403a48 <__malloc_unlock>
  403bac:	4630      	mov	r0, r6
  403bae:	b003      	add	sp, #12
  403bb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403bb4:	eb08 0105 	add.w	r1, r8, r5
  403bb8:	431d      	orrs	r5, r3
  403bba:	f042 0301 	orr.w	r3, r2, #1
  403bbe:	440a      	add	r2, r1
  403bc0:	f8c8 5004 	str.w	r5, [r8, #4]
  403bc4:	604b      	str	r3, [r1, #4]
  403bc6:	6853      	ldr	r3, [r2, #4]
  403bc8:	f043 0301 	orr.w	r3, r3, #1
  403bcc:	3108      	adds	r1, #8
  403bce:	6053      	str	r3, [r2, #4]
  403bd0:	4648      	mov	r0, r9
  403bd2:	f7ff f84d 	bl	402c70 <_free_r>
  403bd6:	e7e6      	b.n	403ba6 <_realloc_r+0x15a>
  403bd8:	4639      	mov	r1, r7
  403bda:	4648      	mov	r0, r9
  403bdc:	f7ff fb58 	bl	403290 <_malloc_r>
  403be0:	4607      	mov	r7, r0
  403be2:	b1d8      	cbz	r0, 403c1c <_realloc_r+0x1d0>
  403be4:	f856 3c04 	ldr.w	r3, [r6, #-4]
  403be8:	f023 0201 	bic.w	r2, r3, #1
  403bec:	4442      	add	r2, r8
  403bee:	f1a0 0108 	sub.w	r1, r0, #8
  403bf2:	4291      	cmp	r1, r2
  403bf4:	f000 80ac 	beq.w	403d50 <_realloc_r+0x304>
  403bf8:	1f22      	subs	r2, r4, #4
  403bfa:	2a24      	cmp	r2, #36	; 0x24
  403bfc:	f200 8099 	bhi.w	403d32 <_realloc_r+0x2e6>
  403c00:	2a13      	cmp	r2, #19
  403c02:	d86a      	bhi.n	403cda <_realloc_r+0x28e>
  403c04:	4603      	mov	r3, r0
  403c06:	4632      	mov	r2, r6
  403c08:	6811      	ldr	r1, [r2, #0]
  403c0a:	6019      	str	r1, [r3, #0]
  403c0c:	6851      	ldr	r1, [r2, #4]
  403c0e:	6059      	str	r1, [r3, #4]
  403c10:	6892      	ldr	r2, [r2, #8]
  403c12:	609a      	str	r2, [r3, #8]
  403c14:	4631      	mov	r1, r6
  403c16:	4648      	mov	r0, r9
  403c18:	f7ff f82a 	bl	402c70 <_free_r>
  403c1c:	4648      	mov	r0, r9
  403c1e:	f7ff ff13 	bl	403a48 <__malloc_unlock>
  403c22:	4638      	mov	r0, r7
  403c24:	b003      	add	sp, #12
  403c26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403c2a:	4611      	mov	r1, r2
  403c2c:	b003      	add	sp, #12
  403c2e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403c32:	f7ff bb2d 	b.w	403290 <_malloc_r>
  403c36:	68ca      	ldr	r2, [r1, #12]
  403c38:	6889      	ldr	r1, [r1, #8]
  403c3a:	4604      	mov	r4, r0
  403c3c:	60ca      	str	r2, [r1, #12]
  403c3e:	6091      	str	r1, [r2, #8]
  403c40:	e7a4      	b.n	403b8c <_realloc_r+0x140>
  403c42:	6841      	ldr	r1, [r0, #4]
  403c44:	f021 0103 	bic.w	r1, r1, #3
  403c48:	4421      	add	r1, r4
  403c4a:	f105 0010 	add.w	r0, r5, #16
  403c4e:	4281      	cmp	r1, r0
  403c50:	da5b      	bge.n	403d0a <_realloc_r+0x2be>
  403c52:	07db      	lsls	r3, r3, #31
  403c54:	d4c0      	bmi.n	403bd8 <_realloc_r+0x18c>
  403c56:	f856 3c08 	ldr.w	r3, [r6, #-8]
  403c5a:	ebc3 0a08 	rsb	sl, r3, r8
  403c5e:	f8da 3004 	ldr.w	r3, [sl, #4]
  403c62:	f023 0303 	bic.w	r3, r3, #3
  403c66:	eb01 0c03 	add.w	ip, r1, r3
  403c6a:	4560      	cmp	r0, ip
  403c6c:	f73f af66 	bgt.w	403b3c <_realloc_r+0xf0>
  403c70:	4657      	mov	r7, sl
  403c72:	f8da 300c 	ldr.w	r3, [sl, #12]
  403c76:	f857 1f08 	ldr.w	r1, [r7, #8]!
  403c7a:	1f22      	subs	r2, r4, #4
  403c7c:	2a24      	cmp	r2, #36	; 0x24
  403c7e:	60cb      	str	r3, [r1, #12]
  403c80:	6099      	str	r1, [r3, #8]
  403c82:	f200 80b8 	bhi.w	403df6 <_realloc_r+0x3aa>
  403c86:	2a13      	cmp	r2, #19
  403c88:	f240 80a9 	bls.w	403dde <_realloc_r+0x392>
  403c8c:	6833      	ldr	r3, [r6, #0]
  403c8e:	f8ca 3008 	str.w	r3, [sl, #8]
  403c92:	6873      	ldr	r3, [r6, #4]
  403c94:	f8ca 300c 	str.w	r3, [sl, #12]
  403c98:	2a1b      	cmp	r2, #27
  403c9a:	f200 80b5 	bhi.w	403e08 <_realloc_r+0x3bc>
  403c9e:	3608      	adds	r6, #8
  403ca0:	f10a 0310 	add.w	r3, sl, #16
  403ca4:	6832      	ldr	r2, [r6, #0]
  403ca6:	601a      	str	r2, [r3, #0]
  403ca8:	6872      	ldr	r2, [r6, #4]
  403caa:	605a      	str	r2, [r3, #4]
  403cac:	68b2      	ldr	r2, [r6, #8]
  403cae:	609a      	str	r2, [r3, #8]
  403cb0:	eb0a 0205 	add.w	r2, sl, r5
  403cb4:	ebc5 030c 	rsb	r3, r5, ip
  403cb8:	f043 0301 	orr.w	r3, r3, #1
  403cbc:	f8cb 2008 	str.w	r2, [fp, #8]
  403cc0:	6053      	str	r3, [r2, #4]
  403cc2:	f8da 3004 	ldr.w	r3, [sl, #4]
  403cc6:	f003 0301 	and.w	r3, r3, #1
  403cca:	431d      	orrs	r5, r3
  403ccc:	4648      	mov	r0, r9
  403cce:	f8ca 5004 	str.w	r5, [sl, #4]
  403cd2:	f7ff feb9 	bl	403a48 <__malloc_unlock>
  403cd6:	4638      	mov	r0, r7
  403cd8:	e769      	b.n	403bae <_realloc_r+0x162>
  403cda:	6833      	ldr	r3, [r6, #0]
  403cdc:	6003      	str	r3, [r0, #0]
  403cde:	6873      	ldr	r3, [r6, #4]
  403ce0:	6043      	str	r3, [r0, #4]
  403ce2:	2a1b      	cmp	r2, #27
  403ce4:	d829      	bhi.n	403d3a <_realloc_r+0x2ee>
  403ce6:	f100 0308 	add.w	r3, r0, #8
  403cea:	f106 0208 	add.w	r2, r6, #8
  403cee:	e78b      	b.n	403c08 <_realloc_r+0x1bc>
  403cf0:	463b      	mov	r3, r7
  403cf2:	6832      	ldr	r2, [r6, #0]
  403cf4:	601a      	str	r2, [r3, #0]
  403cf6:	6872      	ldr	r2, [r6, #4]
  403cf8:	605a      	str	r2, [r3, #4]
  403cfa:	68b2      	ldr	r2, [r6, #8]
  403cfc:	609a      	str	r2, [r3, #8]
  403cfe:	463e      	mov	r6, r7
  403d00:	4674      	mov	r4, lr
  403d02:	f8da 3004 	ldr.w	r3, [sl, #4]
  403d06:	46d0      	mov	r8, sl
  403d08:	e740      	b.n	403b8c <_realloc_r+0x140>
  403d0a:	eb08 0205 	add.w	r2, r8, r5
  403d0e:	1b4b      	subs	r3, r1, r5
  403d10:	f043 0301 	orr.w	r3, r3, #1
  403d14:	f8cb 2008 	str.w	r2, [fp, #8]
  403d18:	6053      	str	r3, [r2, #4]
  403d1a:	f856 3c04 	ldr.w	r3, [r6, #-4]
  403d1e:	f003 0301 	and.w	r3, r3, #1
  403d22:	431d      	orrs	r5, r3
  403d24:	4648      	mov	r0, r9
  403d26:	f846 5c04 	str.w	r5, [r6, #-4]
  403d2a:	f7ff fe8d 	bl	403a48 <__malloc_unlock>
  403d2e:	4630      	mov	r0, r6
  403d30:	e73d      	b.n	403bae <_realloc_r+0x162>
  403d32:	4631      	mov	r1, r6
  403d34:	f7ff fe22 	bl	40397c <memmove>
  403d38:	e76c      	b.n	403c14 <_realloc_r+0x1c8>
  403d3a:	68b3      	ldr	r3, [r6, #8]
  403d3c:	6083      	str	r3, [r0, #8]
  403d3e:	68f3      	ldr	r3, [r6, #12]
  403d40:	60c3      	str	r3, [r0, #12]
  403d42:	2a24      	cmp	r2, #36	; 0x24
  403d44:	d02c      	beq.n	403da0 <_realloc_r+0x354>
  403d46:	f100 0310 	add.w	r3, r0, #16
  403d4a:	f106 0210 	add.w	r2, r6, #16
  403d4e:	e75b      	b.n	403c08 <_realloc_r+0x1bc>
  403d50:	f850 2c04 	ldr.w	r2, [r0, #-4]
  403d54:	f022 0203 	bic.w	r2, r2, #3
  403d58:	4414      	add	r4, r2
  403d5a:	e717      	b.n	403b8c <_realloc_r+0x140>
  403d5c:	4631      	mov	r1, r6
  403d5e:	4638      	mov	r0, r7
  403d60:	4674      	mov	r4, lr
  403d62:	463e      	mov	r6, r7
  403d64:	f7ff fe0a 	bl	40397c <memmove>
  403d68:	46d0      	mov	r8, sl
  403d6a:	f8da 3004 	ldr.w	r3, [sl, #4]
  403d6e:	e70d      	b.n	403b8c <_realloc_r+0x140>
  403d70:	463a      	mov	r2, r7
  403d72:	e700      	b.n	403b76 <_realloc_r+0x12a>
  403d74:	4631      	mov	r1, r6
  403d76:	4638      	mov	r0, r7
  403d78:	461c      	mov	r4, r3
  403d7a:	463e      	mov	r6, r7
  403d7c:	f7ff fdfe 	bl	40397c <memmove>
  403d80:	46d0      	mov	r8, sl
  403d82:	f8da 3004 	ldr.w	r3, [sl, #4]
  403d86:	e701      	b.n	403b8c <_realloc_r+0x140>
  403d88:	68b3      	ldr	r3, [r6, #8]
  403d8a:	f8ca 3010 	str.w	r3, [sl, #16]
  403d8e:	68f3      	ldr	r3, [r6, #12]
  403d90:	f8ca 3014 	str.w	r3, [sl, #20]
  403d94:	2a24      	cmp	r2, #36	; 0x24
  403d96:	d018      	beq.n	403dca <_realloc_r+0x37e>
  403d98:	3610      	adds	r6, #16
  403d9a:	f10a 0318 	add.w	r3, sl, #24
  403d9e:	e7a8      	b.n	403cf2 <_realloc_r+0x2a6>
  403da0:	6933      	ldr	r3, [r6, #16]
  403da2:	6103      	str	r3, [r0, #16]
  403da4:	6973      	ldr	r3, [r6, #20]
  403da6:	6143      	str	r3, [r0, #20]
  403da8:	f106 0218 	add.w	r2, r6, #24
  403dac:	f100 0318 	add.w	r3, r0, #24
  403db0:	e72a      	b.n	403c08 <_realloc_r+0x1bc>
  403db2:	68b1      	ldr	r1, [r6, #8]
  403db4:	f8ca 1010 	str.w	r1, [sl, #16]
  403db8:	68f1      	ldr	r1, [r6, #12]
  403dba:	f8ca 1014 	str.w	r1, [sl, #20]
  403dbe:	2a24      	cmp	r2, #36	; 0x24
  403dc0:	d00f      	beq.n	403de2 <_realloc_r+0x396>
  403dc2:	3610      	adds	r6, #16
  403dc4:	f10a 0218 	add.w	r2, sl, #24
  403dc8:	e6d5      	b.n	403b76 <_realloc_r+0x12a>
  403dca:	6933      	ldr	r3, [r6, #16]
  403dcc:	f8ca 3018 	str.w	r3, [sl, #24]
  403dd0:	6973      	ldr	r3, [r6, #20]
  403dd2:	f8ca 301c 	str.w	r3, [sl, #28]
  403dd6:	3618      	adds	r6, #24
  403dd8:	f10a 0320 	add.w	r3, sl, #32
  403ddc:	e789      	b.n	403cf2 <_realloc_r+0x2a6>
  403dde:	463b      	mov	r3, r7
  403de0:	e760      	b.n	403ca4 <_realloc_r+0x258>
  403de2:	6932      	ldr	r2, [r6, #16]
  403de4:	f8ca 2018 	str.w	r2, [sl, #24]
  403de8:	6972      	ldr	r2, [r6, #20]
  403dea:	f8ca 201c 	str.w	r2, [sl, #28]
  403dee:	3618      	adds	r6, #24
  403df0:	f10a 0220 	add.w	r2, sl, #32
  403df4:	e6bf      	b.n	403b76 <_realloc_r+0x12a>
  403df6:	4631      	mov	r1, r6
  403df8:	4638      	mov	r0, r7
  403dfa:	f8cd c004 	str.w	ip, [sp, #4]
  403dfe:	f7ff fdbd 	bl	40397c <memmove>
  403e02:	f8dd c004 	ldr.w	ip, [sp, #4]
  403e06:	e753      	b.n	403cb0 <_realloc_r+0x264>
  403e08:	68b3      	ldr	r3, [r6, #8]
  403e0a:	f8ca 3010 	str.w	r3, [sl, #16]
  403e0e:	68f3      	ldr	r3, [r6, #12]
  403e10:	f8ca 3014 	str.w	r3, [sl, #20]
  403e14:	2a24      	cmp	r2, #36	; 0x24
  403e16:	d003      	beq.n	403e20 <_realloc_r+0x3d4>
  403e18:	3610      	adds	r6, #16
  403e1a:	f10a 0318 	add.w	r3, sl, #24
  403e1e:	e741      	b.n	403ca4 <_realloc_r+0x258>
  403e20:	6933      	ldr	r3, [r6, #16]
  403e22:	f8ca 3018 	str.w	r3, [sl, #24]
  403e26:	6973      	ldr	r3, [r6, #20]
  403e28:	f8ca 301c 	str.w	r3, [sl, #28]
  403e2c:	3618      	adds	r6, #24
  403e2e:	f10a 0320 	add.w	r3, sl, #32
  403e32:	e737      	b.n	403ca4 <_realloc_r+0x258>
  403e34:	20000458 	.word	0x20000458

00403e38 <_sbrk_r>:
  403e38:	b538      	push	{r3, r4, r5, lr}
  403e3a:	4c07      	ldr	r4, [pc, #28]	; (403e58 <_sbrk_r+0x20>)
  403e3c:	2300      	movs	r3, #0
  403e3e:	4605      	mov	r5, r0
  403e40:	4608      	mov	r0, r1
  403e42:	6023      	str	r3, [r4, #0]
  403e44:	f7fc fe2a 	bl	400a9c <_sbrk>
  403e48:	1c43      	adds	r3, r0, #1
  403e4a:	d000      	beq.n	403e4e <_sbrk_r+0x16>
  403e4c:	bd38      	pop	{r3, r4, r5, pc}
  403e4e:	6823      	ldr	r3, [r4, #0]
  403e50:	2b00      	cmp	r3, #0
  403e52:	d0fb      	beq.n	403e4c <_sbrk_r+0x14>
  403e54:	602b      	str	r3, [r5, #0]
  403e56:	bd38      	pop	{r3, r4, r5, pc}
  403e58:	20000944 	.word	0x20000944

00403e5c <__sread>:
  403e5c:	b510      	push	{r4, lr}
  403e5e:	460c      	mov	r4, r1
  403e60:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403e64:	f000 f9bc 	bl	4041e0 <_read_r>
  403e68:	2800      	cmp	r0, #0
  403e6a:	db03      	blt.n	403e74 <__sread+0x18>
  403e6c:	6d23      	ldr	r3, [r4, #80]	; 0x50
  403e6e:	4403      	add	r3, r0
  403e70:	6523      	str	r3, [r4, #80]	; 0x50
  403e72:	bd10      	pop	{r4, pc}
  403e74:	89a3      	ldrh	r3, [r4, #12]
  403e76:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  403e7a:	81a3      	strh	r3, [r4, #12]
  403e7c:	bd10      	pop	{r4, pc}
  403e7e:	bf00      	nop

00403e80 <__swrite>:
  403e80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403e84:	4616      	mov	r6, r2
  403e86:	898a      	ldrh	r2, [r1, #12]
  403e88:	461d      	mov	r5, r3
  403e8a:	05d3      	lsls	r3, r2, #23
  403e8c:	460c      	mov	r4, r1
  403e8e:	4607      	mov	r7, r0
  403e90:	d506      	bpl.n	403ea0 <__swrite+0x20>
  403e92:	2200      	movs	r2, #0
  403e94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403e98:	2302      	movs	r3, #2
  403e9a:	f000 f98d 	bl	4041b8 <_lseek_r>
  403e9e:	89a2      	ldrh	r2, [r4, #12]
  403ea0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  403ea4:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  403ea8:	81a2      	strh	r2, [r4, #12]
  403eaa:	4638      	mov	r0, r7
  403eac:	4632      	mov	r2, r6
  403eae:	462b      	mov	r3, r5
  403eb0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  403eb4:	f000 b8a0 	b.w	403ff8 <_write_r>

00403eb8 <__sseek>:
  403eb8:	b510      	push	{r4, lr}
  403eba:	460c      	mov	r4, r1
  403ebc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403ec0:	f000 f97a 	bl	4041b8 <_lseek_r>
  403ec4:	89a3      	ldrh	r3, [r4, #12]
  403ec6:	1c42      	adds	r2, r0, #1
  403ec8:	bf0e      	itee	eq
  403eca:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  403ece:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  403ed2:	6520      	strne	r0, [r4, #80]	; 0x50
  403ed4:	81a3      	strh	r3, [r4, #12]
  403ed6:	bd10      	pop	{r4, pc}

00403ed8 <__sclose>:
  403ed8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403edc:	f000 b8f2 	b.w	4040c4 <_close_r>

00403ee0 <__swbuf_r>:
  403ee0:	b570      	push	{r4, r5, r6, lr}
  403ee2:	460d      	mov	r5, r1
  403ee4:	4614      	mov	r4, r2
  403ee6:	4606      	mov	r6, r0
  403ee8:	b110      	cbz	r0, 403ef0 <__swbuf_r+0x10>
  403eea:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403eec:	2b00      	cmp	r3, #0
  403eee:	d048      	beq.n	403f82 <__swbuf_r+0xa2>
  403ef0:	89a2      	ldrh	r2, [r4, #12]
  403ef2:	69a3      	ldr	r3, [r4, #24]
  403ef4:	60a3      	str	r3, [r4, #8]
  403ef6:	b291      	uxth	r1, r2
  403ef8:	0708      	lsls	r0, r1, #28
  403efa:	d538      	bpl.n	403f6e <__swbuf_r+0x8e>
  403efc:	6923      	ldr	r3, [r4, #16]
  403efe:	2b00      	cmp	r3, #0
  403f00:	d035      	beq.n	403f6e <__swbuf_r+0x8e>
  403f02:	0489      	lsls	r1, r1, #18
  403f04:	b2ed      	uxtb	r5, r5
  403f06:	d515      	bpl.n	403f34 <__swbuf_r+0x54>
  403f08:	6822      	ldr	r2, [r4, #0]
  403f0a:	6961      	ldr	r1, [r4, #20]
  403f0c:	1ad3      	subs	r3, r2, r3
  403f0e:	428b      	cmp	r3, r1
  403f10:	da1c      	bge.n	403f4c <__swbuf_r+0x6c>
  403f12:	3301      	adds	r3, #1
  403f14:	68a1      	ldr	r1, [r4, #8]
  403f16:	1c50      	adds	r0, r2, #1
  403f18:	3901      	subs	r1, #1
  403f1a:	60a1      	str	r1, [r4, #8]
  403f1c:	6020      	str	r0, [r4, #0]
  403f1e:	7015      	strb	r5, [r2, #0]
  403f20:	6962      	ldr	r2, [r4, #20]
  403f22:	429a      	cmp	r2, r3
  403f24:	d01a      	beq.n	403f5c <__swbuf_r+0x7c>
  403f26:	89a3      	ldrh	r3, [r4, #12]
  403f28:	07db      	lsls	r3, r3, #31
  403f2a:	d501      	bpl.n	403f30 <__swbuf_r+0x50>
  403f2c:	2d0a      	cmp	r5, #10
  403f2e:	d015      	beq.n	403f5c <__swbuf_r+0x7c>
  403f30:	4628      	mov	r0, r5
  403f32:	bd70      	pop	{r4, r5, r6, pc}
  403f34:	6e61      	ldr	r1, [r4, #100]	; 0x64
  403f36:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  403f3a:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  403f3e:	81a2      	strh	r2, [r4, #12]
  403f40:	6822      	ldr	r2, [r4, #0]
  403f42:	6661      	str	r1, [r4, #100]	; 0x64
  403f44:	6961      	ldr	r1, [r4, #20]
  403f46:	1ad3      	subs	r3, r2, r3
  403f48:	428b      	cmp	r3, r1
  403f4a:	dbe2      	blt.n	403f12 <__swbuf_r+0x32>
  403f4c:	4630      	mov	r0, r6
  403f4e:	4621      	mov	r1, r4
  403f50:	f7fe fd22 	bl	402998 <_fflush_r>
  403f54:	b940      	cbnz	r0, 403f68 <__swbuf_r+0x88>
  403f56:	6822      	ldr	r2, [r4, #0]
  403f58:	2301      	movs	r3, #1
  403f5a:	e7db      	b.n	403f14 <__swbuf_r+0x34>
  403f5c:	4630      	mov	r0, r6
  403f5e:	4621      	mov	r1, r4
  403f60:	f7fe fd1a 	bl	402998 <_fflush_r>
  403f64:	2800      	cmp	r0, #0
  403f66:	d0e3      	beq.n	403f30 <__swbuf_r+0x50>
  403f68:	f04f 30ff 	mov.w	r0, #4294967295
  403f6c:	bd70      	pop	{r4, r5, r6, pc}
  403f6e:	4630      	mov	r0, r6
  403f70:	4621      	mov	r1, r4
  403f72:	f7fe fbf5 	bl	402760 <__swsetup_r>
  403f76:	2800      	cmp	r0, #0
  403f78:	d1f6      	bne.n	403f68 <__swbuf_r+0x88>
  403f7a:	89a2      	ldrh	r2, [r4, #12]
  403f7c:	6923      	ldr	r3, [r4, #16]
  403f7e:	b291      	uxth	r1, r2
  403f80:	e7bf      	b.n	403f02 <__swbuf_r+0x22>
  403f82:	f7fe fd9d 	bl	402ac0 <__sinit>
  403f86:	e7b3      	b.n	403ef0 <__swbuf_r+0x10>

00403f88 <_wcrtomb_r>:
  403f88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403f8c:	4605      	mov	r5, r0
  403f8e:	b086      	sub	sp, #24
  403f90:	461e      	mov	r6, r3
  403f92:	460c      	mov	r4, r1
  403f94:	b1a1      	cbz	r1, 403fc0 <_wcrtomb_r+0x38>
  403f96:	4b10      	ldr	r3, [pc, #64]	; (403fd8 <_wcrtomb_r+0x50>)
  403f98:	4617      	mov	r7, r2
  403f9a:	f8d3 8000 	ldr.w	r8, [r3]
  403f9e:	f7ff f8f5 	bl	40318c <__locale_charset>
  403fa2:	9600      	str	r6, [sp, #0]
  403fa4:	4603      	mov	r3, r0
  403fa6:	4621      	mov	r1, r4
  403fa8:	463a      	mov	r2, r7
  403faa:	4628      	mov	r0, r5
  403fac:	47c0      	blx	r8
  403fae:	1c43      	adds	r3, r0, #1
  403fb0:	d103      	bne.n	403fba <_wcrtomb_r+0x32>
  403fb2:	2200      	movs	r2, #0
  403fb4:	238a      	movs	r3, #138	; 0x8a
  403fb6:	6032      	str	r2, [r6, #0]
  403fb8:	602b      	str	r3, [r5, #0]
  403fba:	b006      	add	sp, #24
  403fbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403fc0:	4b05      	ldr	r3, [pc, #20]	; (403fd8 <_wcrtomb_r+0x50>)
  403fc2:	681f      	ldr	r7, [r3, #0]
  403fc4:	f7ff f8e2 	bl	40318c <__locale_charset>
  403fc8:	9600      	str	r6, [sp, #0]
  403fca:	4603      	mov	r3, r0
  403fcc:	4622      	mov	r2, r4
  403fce:	4628      	mov	r0, r5
  403fd0:	a903      	add	r1, sp, #12
  403fd2:	47b8      	blx	r7
  403fd4:	e7eb      	b.n	403fae <_wcrtomb_r+0x26>
  403fd6:	bf00      	nop
  403fd8:	20000868 	.word	0x20000868

00403fdc <__ascii_wctomb>:
  403fdc:	b121      	cbz	r1, 403fe8 <__ascii_wctomb+0xc>
  403fde:	2aff      	cmp	r2, #255	; 0xff
  403fe0:	d804      	bhi.n	403fec <__ascii_wctomb+0x10>
  403fe2:	700a      	strb	r2, [r1, #0]
  403fe4:	2001      	movs	r0, #1
  403fe6:	4770      	bx	lr
  403fe8:	4608      	mov	r0, r1
  403fea:	4770      	bx	lr
  403fec:	238a      	movs	r3, #138	; 0x8a
  403fee:	6003      	str	r3, [r0, #0]
  403ff0:	f04f 30ff 	mov.w	r0, #4294967295
  403ff4:	4770      	bx	lr
  403ff6:	bf00      	nop

00403ff8 <_write_r>:
  403ff8:	b570      	push	{r4, r5, r6, lr}
  403ffa:	4c08      	ldr	r4, [pc, #32]	; (40401c <_write_r+0x24>)
  403ffc:	4606      	mov	r6, r0
  403ffe:	2500      	movs	r5, #0
  404000:	4608      	mov	r0, r1
  404002:	4611      	mov	r1, r2
  404004:	461a      	mov	r2, r3
  404006:	6025      	str	r5, [r4, #0]
  404008:	f7fc f8de 	bl	4001c8 <_write>
  40400c:	1c43      	adds	r3, r0, #1
  40400e:	d000      	beq.n	404012 <_write_r+0x1a>
  404010:	bd70      	pop	{r4, r5, r6, pc}
  404012:	6823      	ldr	r3, [r4, #0]
  404014:	2b00      	cmp	r3, #0
  404016:	d0fb      	beq.n	404010 <_write_r+0x18>
  404018:	6033      	str	r3, [r6, #0]
  40401a:	bd70      	pop	{r4, r5, r6, pc}
  40401c:	20000944 	.word	0x20000944

00404020 <__register_exitproc>:
  404020:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  404024:	4c25      	ldr	r4, [pc, #148]	; (4040bc <__register_exitproc+0x9c>)
  404026:	6825      	ldr	r5, [r4, #0]
  404028:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
  40402c:	4606      	mov	r6, r0
  40402e:	4688      	mov	r8, r1
  404030:	4692      	mov	sl, r2
  404032:	4699      	mov	r9, r3
  404034:	b3cc      	cbz	r4, 4040aa <__register_exitproc+0x8a>
  404036:	6860      	ldr	r0, [r4, #4]
  404038:	281f      	cmp	r0, #31
  40403a:	dc18      	bgt.n	40406e <__register_exitproc+0x4e>
  40403c:	1c43      	adds	r3, r0, #1
  40403e:	b17e      	cbz	r6, 404060 <__register_exitproc+0x40>
  404040:	eb04 0580 	add.w	r5, r4, r0, lsl #2
  404044:	2101      	movs	r1, #1
  404046:	f8c5 a088 	str.w	sl, [r5, #136]	; 0x88
  40404a:	f8d4 7188 	ldr.w	r7, [r4, #392]	; 0x188
  40404e:	fa01 f200 	lsl.w	r2, r1, r0
  404052:	4317      	orrs	r7, r2
  404054:	2e02      	cmp	r6, #2
  404056:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  40405a:	f8c5 9108 	str.w	r9, [r5, #264]	; 0x108
  40405e:	d01e      	beq.n	40409e <__register_exitproc+0x7e>
  404060:	3002      	adds	r0, #2
  404062:	6063      	str	r3, [r4, #4]
  404064:	f844 8020 	str.w	r8, [r4, r0, lsl #2]
  404068:	2000      	movs	r0, #0
  40406a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40406e:	4b14      	ldr	r3, [pc, #80]	; (4040c0 <__register_exitproc+0xa0>)
  404070:	b303      	cbz	r3, 4040b4 <__register_exitproc+0x94>
  404072:	f44f 70c8 	mov.w	r0, #400	; 0x190
  404076:	f7ff f903 	bl	403280 <malloc>
  40407a:	4604      	mov	r4, r0
  40407c:	b1d0      	cbz	r0, 4040b4 <__register_exitproc+0x94>
  40407e:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
  404082:	2700      	movs	r7, #0
  404084:	e880 0088 	stmia.w	r0, {r3, r7}
  404088:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  40408c:	4638      	mov	r0, r7
  40408e:	2301      	movs	r3, #1
  404090:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  404094:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
  404098:	2e00      	cmp	r6, #0
  40409a:	d0e1      	beq.n	404060 <__register_exitproc+0x40>
  40409c:	e7d0      	b.n	404040 <__register_exitproc+0x20>
  40409e:	f8d4 118c 	ldr.w	r1, [r4, #396]	; 0x18c
  4040a2:	430a      	orrs	r2, r1
  4040a4:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  4040a8:	e7da      	b.n	404060 <__register_exitproc+0x40>
  4040aa:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
  4040ae:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  4040b2:	e7c0      	b.n	404036 <__register_exitproc+0x16>
  4040b4:	f04f 30ff 	mov.w	r0, #4294967295
  4040b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4040bc:	004048dc 	.word	0x004048dc
  4040c0:	00403281 	.word	0x00403281

004040c4 <_close_r>:
  4040c4:	b538      	push	{r3, r4, r5, lr}
  4040c6:	4c07      	ldr	r4, [pc, #28]	; (4040e4 <_close_r+0x20>)
  4040c8:	2300      	movs	r3, #0
  4040ca:	4605      	mov	r5, r0
  4040cc:	4608      	mov	r0, r1
  4040ce:	6023      	str	r3, [r4, #0]
  4040d0:	f7fc fcfe 	bl	400ad0 <_close>
  4040d4:	1c43      	adds	r3, r0, #1
  4040d6:	d000      	beq.n	4040da <_close_r+0x16>
  4040d8:	bd38      	pop	{r3, r4, r5, pc}
  4040da:	6823      	ldr	r3, [r4, #0]
  4040dc:	2b00      	cmp	r3, #0
  4040de:	d0fb      	beq.n	4040d8 <_close_r+0x14>
  4040e0:	602b      	str	r3, [r5, #0]
  4040e2:	bd38      	pop	{r3, r4, r5, pc}
  4040e4:	20000944 	.word	0x20000944

004040e8 <_fclose_r>:
  4040e8:	2900      	cmp	r1, #0
  4040ea:	d03d      	beq.n	404168 <_fclose_r+0x80>
  4040ec:	b570      	push	{r4, r5, r6, lr}
  4040ee:	4605      	mov	r5, r0
  4040f0:	460c      	mov	r4, r1
  4040f2:	b108      	cbz	r0, 4040f8 <_fclose_r+0x10>
  4040f4:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4040f6:	b37b      	cbz	r3, 404158 <_fclose_r+0x70>
  4040f8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4040fc:	b90b      	cbnz	r3, 404102 <_fclose_r+0x1a>
  4040fe:	2000      	movs	r0, #0
  404100:	bd70      	pop	{r4, r5, r6, pc}
  404102:	4628      	mov	r0, r5
  404104:	4621      	mov	r1, r4
  404106:	f7fe fb9d 	bl	402844 <__sflush_r>
  40410a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  40410c:	4606      	mov	r6, r0
  40410e:	b133      	cbz	r3, 40411e <_fclose_r+0x36>
  404110:	4628      	mov	r0, r5
  404112:	69e1      	ldr	r1, [r4, #28]
  404114:	4798      	blx	r3
  404116:	2800      	cmp	r0, #0
  404118:	bfb8      	it	lt
  40411a:	f04f 36ff 	movlt.w	r6, #4294967295
  40411e:	89a3      	ldrh	r3, [r4, #12]
  404120:	061b      	lsls	r3, r3, #24
  404122:	d41c      	bmi.n	40415e <_fclose_r+0x76>
  404124:	6b21      	ldr	r1, [r4, #48]	; 0x30
  404126:	b141      	cbz	r1, 40413a <_fclose_r+0x52>
  404128:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40412c:	4299      	cmp	r1, r3
  40412e:	d002      	beq.n	404136 <_fclose_r+0x4e>
  404130:	4628      	mov	r0, r5
  404132:	f7fe fd9d 	bl	402c70 <_free_r>
  404136:	2300      	movs	r3, #0
  404138:	6323      	str	r3, [r4, #48]	; 0x30
  40413a:	6c61      	ldr	r1, [r4, #68]	; 0x44
  40413c:	b121      	cbz	r1, 404148 <_fclose_r+0x60>
  40413e:	4628      	mov	r0, r5
  404140:	f7fe fd96 	bl	402c70 <_free_r>
  404144:	2300      	movs	r3, #0
  404146:	6463      	str	r3, [r4, #68]	; 0x44
  404148:	f7fe fcc0 	bl	402acc <__sfp_lock_acquire>
  40414c:	2300      	movs	r3, #0
  40414e:	81a3      	strh	r3, [r4, #12]
  404150:	f7fe fcbe 	bl	402ad0 <__sfp_lock_release>
  404154:	4630      	mov	r0, r6
  404156:	bd70      	pop	{r4, r5, r6, pc}
  404158:	f7fe fcb2 	bl	402ac0 <__sinit>
  40415c:	e7cc      	b.n	4040f8 <_fclose_r+0x10>
  40415e:	4628      	mov	r0, r5
  404160:	6921      	ldr	r1, [r4, #16]
  404162:	f7fe fd85 	bl	402c70 <_free_r>
  404166:	e7dd      	b.n	404124 <_fclose_r+0x3c>
  404168:	2000      	movs	r0, #0
  40416a:	4770      	bx	lr

0040416c <_fstat_r>:
  40416c:	b538      	push	{r3, r4, r5, lr}
  40416e:	4c08      	ldr	r4, [pc, #32]	; (404190 <_fstat_r+0x24>)
  404170:	2300      	movs	r3, #0
  404172:	4605      	mov	r5, r0
  404174:	4608      	mov	r0, r1
  404176:	4611      	mov	r1, r2
  404178:	6023      	str	r3, [r4, #0]
  40417a:	f7fc fcad 	bl	400ad8 <_fstat>
  40417e:	1c43      	adds	r3, r0, #1
  404180:	d000      	beq.n	404184 <_fstat_r+0x18>
  404182:	bd38      	pop	{r3, r4, r5, pc}
  404184:	6823      	ldr	r3, [r4, #0]
  404186:	2b00      	cmp	r3, #0
  404188:	d0fb      	beq.n	404182 <_fstat_r+0x16>
  40418a:	602b      	str	r3, [r5, #0]
  40418c:	bd38      	pop	{r3, r4, r5, pc}
  40418e:	bf00      	nop
  404190:	20000944 	.word	0x20000944

00404194 <_isatty_r>:
  404194:	b538      	push	{r3, r4, r5, lr}
  404196:	4c07      	ldr	r4, [pc, #28]	; (4041b4 <_isatty_r+0x20>)
  404198:	2300      	movs	r3, #0
  40419a:	4605      	mov	r5, r0
  40419c:	4608      	mov	r0, r1
  40419e:	6023      	str	r3, [r4, #0]
  4041a0:	f7fc fca0 	bl	400ae4 <_isatty>
  4041a4:	1c43      	adds	r3, r0, #1
  4041a6:	d000      	beq.n	4041aa <_isatty_r+0x16>
  4041a8:	bd38      	pop	{r3, r4, r5, pc}
  4041aa:	6823      	ldr	r3, [r4, #0]
  4041ac:	2b00      	cmp	r3, #0
  4041ae:	d0fb      	beq.n	4041a8 <_isatty_r+0x14>
  4041b0:	602b      	str	r3, [r5, #0]
  4041b2:	bd38      	pop	{r3, r4, r5, pc}
  4041b4:	20000944 	.word	0x20000944

004041b8 <_lseek_r>:
  4041b8:	b570      	push	{r4, r5, r6, lr}
  4041ba:	4c08      	ldr	r4, [pc, #32]	; (4041dc <_lseek_r+0x24>)
  4041bc:	4606      	mov	r6, r0
  4041be:	2500      	movs	r5, #0
  4041c0:	4608      	mov	r0, r1
  4041c2:	4611      	mov	r1, r2
  4041c4:	461a      	mov	r2, r3
  4041c6:	6025      	str	r5, [r4, #0]
  4041c8:	f7fc fc8e 	bl	400ae8 <_lseek>
  4041cc:	1c43      	adds	r3, r0, #1
  4041ce:	d000      	beq.n	4041d2 <_lseek_r+0x1a>
  4041d0:	bd70      	pop	{r4, r5, r6, pc}
  4041d2:	6823      	ldr	r3, [r4, #0]
  4041d4:	2b00      	cmp	r3, #0
  4041d6:	d0fb      	beq.n	4041d0 <_lseek_r+0x18>
  4041d8:	6033      	str	r3, [r6, #0]
  4041da:	bd70      	pop	{r4, r5, r6, pc}
  4041dc:	20000944 	.word	0x20000944

004041e0 <_read_r>:
  4041e0:	b570      	push	{r4, r5, r6, lr}
  4041e2:	4c08      	ldr	r4, [pc, #32]	; (404204 <_read_r+0x24>)
  4041e4:	4606      	mov	r6, r0
  4041e6:	2500      	movs	r5, #0
  4041e8:	4608      	mov	r0, r1
  4041ea:	4611      	mov	r1, r2
  4041ec:	461a      	mov	r2, r3
  4041ee:	6025      	str	r5, [r4, #0]
  4041f0:	f7fb ffcc 	bl	40018c <_read>
  4041f4:	1c43      	adds	r3, r0, #1
  4041f6:	d000      	beq.n	4041fa <_read_r+0x1a>
  4041f8:	bd70      	pop	{r4, r5, r6, pc}
  4041fa:	6823      	ldr	r3, [r4, #0]
  4041fc:	2b00      	cmp	r3, #0
  4041fe:	d0fb      	beq.n	4041f8 <_read_r+0x18>
  404200:	6033      	str	r3, [r6, #0]
  404202:	bd70      	pop	{r4, r5, r6, pc}
  404204:	20000944 	.word	0x20000944

00404208 <__aeabi_uldivmod>:
  404208:	b953      	cbnz	r3, 404220 <__aeabi_uldivmod+0x18>
  40420a:	b94a      	cbnz	r2, 404220 <__aeabi_uldivmod+0x18>
  40420c:	2900      	cmp	r1, #0
  40420e:	bf08      	it	eq
  404210:	2800      	cmpeq	r0, #0
  404212:	bf1c      	itt	ne
  404214:	f04f 31ff 	movne.w	r1, #4294967295
  404218:	f04f 30ff 	movne.w	r0, #4294967295
  40421c:	f000 b83c 	b.w	404298 <__aeabi_idiv0>
  404220:	b082      	sub	sp, #8
  404222:	46ec      	mov	ip, sp
  404224:	e92d 5000 	stmdb	sp!, {ip, lr}
  404228:	f000 f81e 	bl	404268 <__gnu_uldivmod_helper>
  40422c:	f8dd e004 	ldr.w	lr, [sp, #4]
  404230:	b002      	add	sp, #8
  404232:	bc0c      	pop	{r2, r3}
  404234:	4770      	bx	lr
  404236:	bf00      	nop

00404238 <__gnu_ldivmod_helper>:
  404238:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40423c:	9c06      	ldr	r4, [sp, #24]
  40423e:	4615      	mov	r5, r2
  404240:	4606      	mov	r6, r0
  404242:	460f      	mov	r7, r1
  404244:	4698      	mov	r8, r3
  404246:	f000 f829 	bl	40429c <__divdi3>
  40424a:	fb05 f301 	mul.w	r3, r5, r1
  40424e:	fb00 3808 	mla	r8, r0, r8, r3
  404252:	fba5 2300 	umull	r2, r3, r5, r0
  404256:	1ab2      	subs	r2, r6, r2
  404258:	4443      	add	r3, r8
  40425a:	eb67 0303 	sbc.w	r3, r7, r3
  40425e:	e9c4 2300 	strd	r2, r3, [r4]
  404262:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404266:	bf00      	nop

00404268 <__gnu_uldivmod_helper>:
  404268:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40426c:	9c06      	ldr	r4, [sp, #24]
  40426e:	4690      	mov	r8, r2
  404270:	4606      	mov	r6, r0
  404272:	460f      	mov	r7, r1
  404274:	461d      	mov	r5, r3
  404276:	f000 f95f 	bl	404538 <__udivdi3>
  40427a:	fb00 f505 	mul.w	r5, r0, r5
  40427e:	fba0 2308 	umull	r2, r3, r0, r8
  404282:	fb08 5501 	mla	r5, r8, r1, r5
  404286:	1ab2      	subs	r2, r6, r2
  404288:	442b      	add	r3, r5
  40428a:	eb67 0303 	sbc.w	r3, r7, r3
  40428e:	e9c4 2300 	strd	r2, r3, [r4]
  404292:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404296:	bf00      	nop

00404298 <__aeabi_idiv0>:
  404298:	4770      	bx	lr
  40429a:	bf00      	nop

0040429c <__divdi3>:
  40429c:	2900      	cmp	r1, #0
  40429e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4042a2:	f2c0 80a6 	blt.w	4043f2 <__divdi3+0x156>
  4042a6:	2600      	movs	r6, #0
  4042a8:	2b00      	cmp	r3, #0
  4042aa:	f2c0 809c 	blt.w	4043e6 <__divdi3+0x14a>
  4042ae:	4688      	mov	r8, r1
  4042b0:	4694      	mov	ip, r2
  4042b2:	469e      	mov	lr, r3
  4042b4:	4615      	mov	r5, r2
  4042b6:	4604      	mov	r4, r0
  4042b8:	460f      	mov	r7, r1
  4042ba:	2b00      	cmp	r3, #0
  4042bc:	d13d      	bne.n	40433a <__divdi3+0x9e>
  4042be:	428a      	cmp	r2, r1
  4042c0:	d959      	bls.n	404376 <__divdi3+0xda>
  4042c2:	fab2 f382 	clz	r3, r2
  4042c6:	b13b      	cbz	r3, 4042d8 <__divdi3+0x3c>
  4042c8:	f1c3 0220 	rsb	r2, r3, #32
  4042cc:	409f      	lsls	r7, r3
  4042ce:	fa20 f202 	lsr.w	r2, r0, r2
  4042d2:	409d      	lsls	r5, r3
  4042d4:	4317      	orrs	r7, r2
  4042d6:	409c      	lsls	r4, r3
  4042d8:	0c29      	lsrs	r1, r5, #16
  4042da:	0c22      	lsrs	r2, r4, #16
  4042dc:	fbb7 fef1 	udiv	lr, r7, r1
  4042e0:	b2a8      	uxth	r0, r5
  4042e2:	fb01 771e 	mls	r7, r1, lr, r7
  4042e6:	ea42 4707 	orr.w	r7, r2, r7, lsl #16
  4042ea:	fb00 f30e 	mul.w	r3, r0, lr
  4042ee:	42bb      	cmp	r3, r7
  4042f0:	d90a      	bls.n	404308 <__divdi3+0x6c>
  4042f2:	197f      	adds	r7, r7, r5
  4042f4:	f10e 32ff 	add.w	r2, lr, #4294967295
  4042f8:	f080 8105 	bcs.w	404506 <__divdi3+0x26a>
  4042fc:	42bb      	cmp	r3, r7
  4042fe:	f240 8102 	bls.w	404506 <__divdi3+0x26a>
  404302:	f1ae 0e02 	sub.w	lr, lr, #2
  404306:	442f      	add	r7, r5
  404308:	1aff      	subs	r7, r7, r3
  40430a:	b2a4      	uxth	r4, r4
  40430c:	fbb7 f3f1 	udiv	r3, r7, r1
  404310:	fb01 7713 	mls	r7, r1, r3, r7
  404314:	ea44 4707 	orr.w	r7, r4, r7, lsl #16
  404318:	fb00 f003 	mul.w	r0, r0, r3
  40431c:	42b8      	cmp	r0, r7
  40431e:	d908      	bls.n	404332 <__divdi3+0x96>
  404320:	197f      	adds	r7, r7, r5
  404322:	f103 32ff 	add.w	r2, r3, #4294967295
  404326:	f080 80f0 	bcs.w	40450a <__divdi3+0x26e>
  40432a:	42b8      	cmp	r0, r7
  40432c:	f240 80ed 	bls.w	40450a <__divdi3+0x26e>
  404330:	3b02      	subs	r3, #2
  404332:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
  404336:	2200      	movs	r2, #0
  404338:	e003      	b.n	404342 <__divdi3+0xa6>
  40433a:	428b      	cmp	r3, r1
  40433c:	d90f      	bls.n	40435e <__divdi3+0xc2>
  40433e:	2200      	movs	r2, #0
  404340:	4613      	mov	r3, r2
  404342:	1c34      	adds	r4, r6, #0
  404344:	bf18      	it	ne
  404346:	2401      	movne	r4, #1
  404348:	4260      	negs	r0, r4
  40434a:	f04f 0500 	mov.w	r5, #0
  40434e:	eb65 0145 	sbc.w	r1, r5, r5, lsl #1
  404352:	4058      	eors	r0, r3
  404354:	4051      	eors	r1, r2
  404356:	1900      	adds	r0, r0, r4
  404358:	4169      	adcs	r1, r5
  40435a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40435e:	fab3 f283 	clz	r2, r3
  404362:	2a00      	cmp	r2, #0
  404364:	f040 8086 	bne.w	404474 <__divdi3+0x1d8>
  404368:	428b      	cmp	r3, r1
  40436a:	d302      	bcc.n	404372 <__divdi3+0xd6>
  40436c:	4584      	cmp	ip, r0
  40436e:	f200 80db 	bhi.w	404528 <__divdi3+0x28c>
  404372:	2301      	movs	r3, #1
  404374:	e7e5      	b.n	404342 <__divdi3+0xa6>
  404376:	b912      	cbnz	r2, 40437e <__divdi3+0xe2>
  404378:	2301      	movs	r3, #1
  40437a:	fbb3 f5f2 	udiv	r5, r3, r2
  40437e:	fab5 f085 	clz	r0, r5
  404382:	2800      	cmp	r0, #0
  404384:	d13b      	bne.n	4043fe <__divdi3+0x162>
  404386:	1b78      	subs	r0, r7, r5
  404388:	ea4f 4e15 	mov.w	lr, r5, lsr #16
  40438c:	fa1f fc85 	uxth.w	ip, r5
  404390:	2201      	movs	r2, #1
  404392:	fbb0 f8fe 	udiv	r8, r0, lr
  404396:	0c21      	lsrs	r1, r4, #16
  404398:	fb0e 0718 	mls	r7, lr, r8, r0
  40439c:	ea41 4707 	orr.w	r7, r1, r7, lsl #16
  4043a0:	fb0c f308 	mul.w	r3, ip, r8
  4043a4:	42bb      	cmp	r3, r7
  4043a6:	d907      	bls.n	4043b8 <__divdi3+0x11c>
  4043a8:	197f      	adds	r7, r7, r5
  4043aa:	f108 31ff 	add.w	r1, r8, #4294967295
  4043ae:	d202      	bcs.n	4043b6 <__divdi3+0x11a>
  4043b0:	42bb      	cmp	r3, r7
  4043b2:	f200 80bd 	bhi.w	404530 <__divdi3+0x294>
  4043b6:	4688      	mov	r8, r1
  4043b8:	1aff      	subs	r7, r7, r3
  4043ba:	b2a4      	uxth	r4, r4
  4043bc:	fbb7 f3fe 	udiv	r3, r7, lr
  4043c0:	fb0e 7713 	mls	r7, lr, r3, r7
  4043c4:	ea44 4707 	orr.w	r7, r4, r7, lsl #16
  4043c8:	fb0c fc03 	mul.w	ip, ip, r3
  4043cc:	45bc      	cmp	ip, r7
  4043ce:	d907      	bls.n	4043e0 <__divdi3+0x144>
  4043d0:	197f      	adds	r7, r7, r5
  4043d2:	f103 31ff 	add.w	r1, r3, #4294967295
  4043d6:	d202      	bcs.n	4043de <__divdi3+0x142>
  4043d8:	45bc      	cmp	ip, r7
  4043da:	f200 80a7 	bhi.w	40452c <__divdi3+0x290>
  4043de:	460b      	mov	r3, r1
  4043e0:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
  4043e4:	e7ad      	b.n	404342 <__divdi3+0xa6>
  4043e6:	4252      	negs	r2, r2
  4043e8:	ea6f 0606 	mvn.w	r6, r6
  4043ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  4043f0:	e75d      	b.n	4042ae <__divdi3+0x12>
  4043f2:	4240      	negs	r0, r0
  4043f4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4043f8:	f04f 36ff 	mov.w	r6, #4294967295
  4043fc:	e754      	b.n	4042a8 <__divdi3+0xc>
  4043fe:	f1c0 0220 	rsb	r2, r0, #32
  404402:	fa24 f102 	lsr.w	r1, r4, r2
  404406:	fa07 f300 	lsl.w	r3, r7, r0
  40440a:	4085      	lsls	r5, r0
  40440c:	ea4f 4e15 	mov.w	lr, r5, lsr #16
  404410:	40d7      	lsrs	r7, r2
  404412:	4319      	orrs	r1, r3
  404414:	fbb7 f2fe 	udiv	r2, r7, lr
  404418:	0c0b      	lsrs	r3, r1, #16
  40441a:	fb0e 7712 	mls	r7, lr, r2, r7
  40441e:	fa1f fc85 	uxth.w	ip, r5
  404422:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
  404426:	fb0c f702 	mul.w	r7, ip, r2
  40442a:	429f      	cmp	r7, r3
  40442c:	fa04 f400 	lsl.w	r4, r4, r0
  404430:	d907      	bls.n	404442 <__divdi3+0x1a6>
  404432:	195b      	adds	r3, r3, r5
  404434:	f102 30ff 	add.w	r0, r2, #4294967295
  404438:	d274      	bcs.n	404524 <__divdi3+0x288>
  40443a:	429f      	cmp	r7, r3
  40443c:	d972      	bls.n	404524 <__divdi3+0x288>
  40443e:	3a02      	subs	r2, #2
  404440:	442b      	add	r3, r5
  404442:	1bdf      	subs	r7, r3, r7
  404444:	b289      	uxth	r1, r1
  404446:	fbb7 f8fe 	udiv	r8, r7, lr
  40444a:	fb0e 7318 	mls	r3, lr, r8, r7
  40444e:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
  404452:	fb0c f708 	mul.w	r7, ip, r8
  404456:	429f      	cmp	r7, r3
  404458:	d908      	bls.n	40446c <__divdi3+0x1d0>
  40445a:	195b      	adds	r3, r3, r5
  40445c:	f108 31ff 	add.w	r1, r8, #4294967295
  404460:	d25c      	bcs.n	40451c <__divdi3+0x280>
  404462:	429f      	cmp	r7, r3
  404464:	d95a      	bls.n	40451c <__divdi3+0x280>
  404466:	f1a8 0802 	sub.w	r8, r8, #2
  40446a:	442b      	add	r3, r5
  40446c:	1bd8      	subs	r0, r3, r7
  40446e:	ea48 4202 	orr.w	r2, r8, r2, lsl #16
  404472:	e78e      	b.n	404392 <__divdi3+0xf6>
  404474:	f1c2 0320 	rsb	r3, r2, #32
  404478:	fa2c f103 	lsr.w	r1, ip, r3
  40447c:	fa0e fe02 	lsl.w	lr, lr, r2
  404480:	fa20 f703 	lsr.w	r7, r0, r3
  404484:	ea41 0e0e 	orr.w	lr, r1, lr
  404488:	fa08 f002 	lsl.w	r0, r8, r2
  40448c:	fa28 f103 	lsr.w	r1, r8, r3
  404490:	ea4f 451e 	mov.w	r5, lr, lsr #16
  404494:	4338      	orrs	r0, r7
  404496:	fbb1 f8f5 	udiv	r8, r1, r5
  40449a:	0c03      	lsrs	r3, r0, #16
  40449c:	fb05 1118 	mls	r1, r5, r8, r1
  4044a0:	fa1f f78e 	uxth.w	r7, lr
  4044a4:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
  4044a8:	fb07 f308 	mul.w	r3, r7, r8
  4044ac:	428b      	cmp	r3, r1
  4044ae:	fa0c fc02 	lsl.w	ip, ip, r2
  4044b2:	d909      	bls.n	4044c8 <__divdi3+0x22c>
  4044b4:	eb11 010e 	adds.w	r1, r1, lr
  4044b8:	f108 39ff 	add.w	r9, r8, #4294967295
  4044bc:	d230      	bcs.n	404520 <__divdi3+0x284>
  4044be:	428b      	cmp	r3, r1
  4044c0:	d92e      	bls.n	404520 <__divdi3+0x284>
  4044c2:	f1a8 0802 	sub.w	r8, r8, #2
  4044c6:	4471      	add	r1, lr
  4044c8:	1ac9      	subs	r1, r1, r3
  4044ca:	b280      	uxth	r0, r0
  4044cc:	fbb1 f3f5 	udiv	r3, r1, r5
  4044d0:	fb05 1113 	mls	r1, r5, r3, r1
  4044d4:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  4044d8:	fb07 f703 	mul.w	r7, r7, r3
  4044dc:	428f      	cmp	r7, r1
  4044de:	d908      	bls.n	4044f2 <__divdi3+0x256>
  4044e0:	eb11 010e 	adds.w	r1, r1, lr
  4044e4:	f103 30ff 	add.w	r0, r3, #4294967295
  4044e8:	d216      	bcs.n	404518 <__divdi3+0x27c>
  4044ea:	428f      	cmp	r7, r1
  4044ec:	d914      	bls.n	404518 <__divdi3+0x27c>
  4044ee:	3b02      	subs	r3, #2
  4044f0:	4471      	add	r1, lr
  4044f2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
  4044f6:	1bc9      	subs	r1, r1, r7
  4044f8:	fba3 890c 	umull	r8, r9, r3, ip
  4044fc:	4549      	cmp	r1, r9
  4044fe:	d309      	bcc.n	404514 <__divdi3+0x278>
  404500:	d005      	beq.n	40450e <__divdi3+0x272>
  404502:	2200      	movs	r2, #0
  404504:	e71d      	b.n	404342 <__divdi3+0xa6>
  404506:	4696      	mov	lr, r2
  404508:	e6fe      	b.n	404308 <__divdi3+0x6c>
  40450a:	4613      	mov	r3, r2
  40450c:	e711      	b.n	404332 <__divdi3+0x96>
  40450e:	4094      	lsls	r4, r2
  404510:	4544      	cmp	r4, r8
  404512:	d2f6      	bcs.n	404502 <__divdi3+0x266>
  404514:	3b01      	subs	r3, #1
  404516:	e7f4      	b.n	404502 <__divdi3+0x266>
  404518:	4603      	mov	r3, r0
  40451a:	e7ea      	b.n	4044f2 <__divdi3+0x256>
  40451c:	4688      	mov	r8, r1
  40451e:	e7a5      	b.n	40446c <__divdi3+0x1d0>
  404520:	46c8      	mov	r8, r9
  404522:	e7d1      	b.n	4044c8 <__divdi3+0x22c>
  404524:	4602      	mov	r2, r0
  404526:	e78c      	b.n	404442 <__divdi3+0x1a6>
  404528:	4613      	mov	r3, r2
  40452a:	e70a      	b.n	404342 <__divdi3+0xa6>
  40452c:	3b02      	subs	r3, #2
  40452e:	e757      	b.n	4043e0 <__divdi3+0x144>
  404530:	f1a8 0802 	sub.w	r8, r8, #2
  404534:	442f      	add	r7, r5
  404536:	e73f      	b.n	4043b8 <__divdi3+0x11c>

00404538 <__udivdi3>:
  404538:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40453c:	2b00      	cmp	r3, #0
  40453e:	d144      	bne.n	4045ca <__udivdi3+0x92>
  404540:	428a      	cmp	r2, r1
  404542:	4615      	mov	r5, r2
  404544:	4604      	mov	r4, r0
  404546:	d94f      	bls.n	4045e8 <__udivdi3+0xb0>
  404548:	fab2 f782 	clz	r7, r2
  40454c:	460e      	mov	r6, r1
  40454e:	b14f      	cbz	r7, 404564 <__udivdi3+0x2c>
  404550:	f1c7 0320 	rsb	r3, r7, #32
  404554:	40b9      	lsls	r1, r7
  404556:	fa20 f603 	lsr.w	r6, r0, r3
  40455a:	fa02 f507 	lsl.w	r5, r2, r7
  40455e:	430e      	orrs	r6, r1
  404560:	fa00 f407 	lsl.w	r4, r0, r7
  404564:	ea4f 4e15 	mov.w	lr, r5, lsr #16
  404568:	0c23      	lsrs	r3, r4, #16
  40456a:	fbb6 f0fe 	udiv	r0, r6, lr
  40456e:	b2af      	uxth	r7, r5
  404570:	fb0e 6110 	mls	r1, lr, r0, r6
  404574:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  404578:	fb07 f100 	mul.w	r1, r7, r0
  40457c:	4299      	cmp	r1, r3
  40457e:	d909      	bls.n	404594 <__udivdi3+0x5c>
  404580:	195b      	adds	r3, r3, r5
  404582:	f100 32ff 	add.w	r2, r0, #4294967295
  404586:	f080 80ec 	bcs.w	404762 <__udivdi3+0x22a>
  40458a:	4299      	cmp	r1, r3
  40458c:	f240 80e9 	bls.w	404762 <__udivdi3+0x22a>
  404590:	3802      	subs	r0, #2
  404592:	442b      	add	r3, r5
  404594:	1a5a      	subs	r2, r3, r1
  404596:	b2a4      	uxth	r4, r4
  404598:	fbb2 f3fe 	udiv	r3, r2, lr
  40459c:	fb0e 2213 	mls	r2, lr, r3, r2
  4045a0:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  4045a4:	fb07 f703 	mul.w	r7, r7, r3
  4045a8:	4297      	cmp	r7, r2
  4045aa:	d908      	bls.n	4045be <__udivdi3+0x86>
  4045ac:	1952      	adds	r2, r2, r5
  4045ae:	f103 31ff 	add.w	r1, r3, #4294967295
  4045b2:	f080 80d8 	bcs.w	404766 <__udivdi3+0x22e>
  4045b6:	4297      	cmp	r7, r2
  4045b8:	f240 80d5 	bls.w	404766 <__udivdi3+0x22e>
  4045bc:	3b02      	subs	r3, #2
  4045be:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  4045c2:	2600      	movs	r6, #0
  4045c4:	4631      	mov	r1, r6
  4045c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4045ca:	428b      	cmp	r3, r1
  4045cc:	d847      	bhi.n	40465e <__udivdi3+0x126>
  4045ce:	fab3 f683 	clz	r6, r3
  4045d2:	2e00      	cmp	r6, #0
  4045d4:	d148      	bne.n	404668 <__udivdi3+0x130>
  4045d6:	428b      	cmp	r3, r1
  4045d8:	d302      	bcc.n	4045e0 <__udivdi3+0xa8>
  4045da:	4282      	cmp	r2, r0
  4045dc:	f200 80cd 	bhi.w	40477a <__udivdi3+0x242>
  4045e0:	2001      	movs	r0, #1
  4045e2:	4631      	mov	r1, r6
  4045e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4045e8:	b912      	cbnz	r2, 4045f0 <__udivdi3+0xb8>
  4045ea:	2501      	movs	r5, #1
  4045ec:	fbb5 f5f2 	udiv	r5, r5, r2
  4045f0:	fab5 f885 	clz	r8, r5
  4045f4:	f1b8 0f00 	cmp.w	r8, #0
  4045f8:	d177      	bne.n	4046ea <__udivdi3+0x1b2>
  4045fa:	1b4a      	subs	r2, r1, r5
  4045fc:	ea4f 4e15 	mov.w	lr, r5, lsr #16
  404600:	b2af      	uxth	r7, r5
  404602:	2601      	movs	r6, #1
  404604:	fbb2 f0fe 	udiv	r0, r2, lr
  404608:	0c23      	lsrs	r3, r4, #16
  40460a:	fb0e 2110 	mls	r1, lr, r0, r2
  40460e:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
  404612:	fb07 f300 	mul.w	r3, r7, r0
  404616:	428b      	cmp	r3, r1
  404618:	d907      	bls.n	40462a <__udivdi3+0xf2>
  40461a:	1949      	adds	r1, r1, r5
  40461c:	f100 32ff 	add.w	r2, r0, #4294967295
  404620:	d202      	bcs.n	404628 <__udivdi3+0xf0>
  404622:	428b      	cmp	r3, r1
  404624:	f200 80ba 	bhi.w	40479c <__udivdi3+0x264>
  404628:	4610      	mov	r0, r2
  40462a:	1ac9      	subs	r1, r1, r3
  40462c:	b2a4      	uxth	r4, r4
  40462e:	fbb1 f3fe 	udiv	r3, r1, lr
  404632:	fb0e 1113 	mls	r1, lr, r3, r1
  404636:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
  40463a:	fb07 f703 	mul.w	r7, r7, r3
  40463e:	42a7      	cmp	r7, r4
  404640:	d908      	bls.n	404654 <__udivdi3+0x11c>
  404642:	1964      	adds	r4, r4, r5
  404644:	f103 32ff 	add.w	r2, r3, #4294967295
  404648:	f080 808f 	bcs.w	40476a <__udivdi3+0x232>
  40464c:	42a7      	cmp	r7, r4
  40464e:	f240 808c 	bls.w	40476a <__udivdi3+0x232>
  404652:	3b02      	subs	r3, #2
  404654:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  404658:	4631      	mov	r1, r6
  40465a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40465e:	2600      	movs	r6, #0
  404660:	4630      	mov	r0, r6
  404662:	4631      	mov	r1, r6
  404664:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404668:	f1c6 0420 	rsb	r4, r6, #32
  40466c:	fa22 f504 	lsr.w	r5, r2, r4
  404670:	40b3      	lsls	r3, r6
  404672:	432b      	orrs	r3, r5
  404674:	fa20 fc04 	lsr.w	ip, r0, r4
  404678:	fa01 f706 	lsl.w	r7, r1, r6
  40467c:	fa21 f504 	lsr.w	r5, r1, r4
  404680:	ea4f 4e13 	mov.w	lr, r3, lsr #16
  404684:	ea4c 0707 	orr.w	r7, ip, r7
  404688:	fbb5 f8fe 	udiv	r8, r5, lr
  40468c:	0c39      	lsrs	r1, r7, #16
  40468e:	fb0e 5518 	mls	r5, lr, r8, r5
  404692:	fa1f fc83 	uxth.w	ip, r3
  404696:	ea41 4505 	orr.w	r5, r1, r5, lsl #16
  40469a:	fb0c f108 	mul.w	r1, ip, r8
  40469e:	42a9      	cmp	r1, r5
  4046a0:	fa02 f206 	lsl.w	r2, r2, r6
  4046a4:	d904      	bls.n	4046b0 <__udivdi3+0x178>
  4046a6:	18ed      	adds	r5, r5, r3
  4046a8:	f108 34ff 	add.w	r4, r8, #4294967295
  4046ac:	d367      	bcc.n	40477e <__udivdi3+0x246>
  4046ae:	46a0      	mov	r8, r4
  4046b0:	1a6d      	subs	r5, r5, r1
  4046b2:	b2bf      	uxth	r7, r7
  4046b4:	fbb5 f4fe 	udiv	r4, r5, lr
  4046b8:	fb0e 5514 	mls	r5, lr, r4, r5
  4046bc:	ea47 4105 	orr.w	r1, r7, r5, lsl #16
  4046c0:	fb0c fc04 	mul.w	ip, ip, r4
  4046c4:	458c      	cmp	ip, r1
  4046c6:	d904      	bls.n	4046d2 <__udivdi3+0x19a>
  4046c8:	18c9      	adds	r1, r1, r3
  4046ca:	f104 35ff 	add.w	r5, r4, #4294967295
  4046ce:	d35c      	bcc.n	40478a <__udivdi3+0x252>
  4046d0:	462c      	mov	r4, r5
  4046d2:	ea44 4408 	orr.w	r4, r4, r8, lsl #16
  4046d6:	ebcc 0101 	rsb	r1, ip, r1
  4046da:	fba4 2302 	umull	r2, r3, r4, r2
  4046de:	4299      	cmp	r1, r3
  4046e0:	d348      	bcc.n	404774 <__udivdi3+0x23c>
  4046e2:	d044      	beq.n	40476e <__udivdi3+0x236>
  4046e4:	4620      	mov	r0, r4
  4046e6:	2600      	movs	r6, #0
  4046e8:	e76c      	b.n	4045c4 <__udivdi3+0x8c>
  4046ea:	f1c8 0420 	rsb	r4, r8, #32
  4046ee:	fa01 f308 	lsl.w	r3, r1, r8
  4046f2:	fa05 f508 	lsl.w	r5, r5, r8
  4046f6:	fa20 f704 	lsr.w	r7, r0, r4
  4046fa:	40e1      	lsrs	r1, r4
  4046fc:	ea4f 4e15 	mov.w	lr, r5, lsr #16
  404700:	431f      	orrs	r7, r3
  404702:	fbb1 f6fe 	udiv	r6, r1, lr
  404706:	0c3a      	lsrs	r2, r7, #16
  404708:	fb0e 1116 	mls	r1, lr, r6, r1
  40470c:	fa1f fc85 	uxth.w	ip, r5
  404710:	ea42 4301 	orr.w	r3, r2, r1, lsl #16
  404714:	fb0c f206 	mul.w	r2, ip, r6
  404718:	429a      	cmp	r2, r3
  40471a:	fa00 f408 	lsl.w	r4, r0, r8
  40471e:	d907      	bls.n	404730 <__udivdi3+0x1f8>
  404720:	195b      	adds	r3, r3, r5
  404722:	f106 31ff 	add.w	r1, r6, #4294967295
  404726:	d237      	bcs.n	404798 <__udivdi3+0x260>
  404728:	429a      	cmp	r2, r3
  40472a:	d935      	bls.n	404798 <__udivdi3+0x260>
  40472c:	3e02      	subs	r6, #2
  40472e:	442b      	add	r3, r5
  404730:	1a9b      	subs	r3, r3, r2
  404732:	b2bf      	uxth	r7, r7
  404734:	fbb3 f0fe 	udiv	r0, r3, lr
  404738:	fb0e 3310 	mls	r3, lr, r0, r3
  40473c:	ea47 4303 	orr.w	r3, r7, r3, lsl #16
  404740:	fb0c f100 	mul.w	r1, ip, r0
  404744:	4299      	cmp	r1, r3
  404746:	d907      	bls.n	404758 <__udivdi3+0x220>
  404748:	195b      	adds	r3, r3, r5
  40474a:	f100 32ff 	add.w	r2, r0, #4294967295
  40474e:	d221      	bcs.n	404794 <__udivdi3+0x25c>
  404750:	4299      	cmp	r1, r3
  404752:	d91f      	bls.n	404794 <__udivdi3+0x25c>
  404754:	3802      	subs	r0, #2
  404756:	442b      	add	r3, r5
  404758:	1a5a      	subs	r2, r3, r1
  40475a:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
  40475e:	4667      	mov	r7, ip
  404760:	e750      	b.n	404604 <__udivdi3+0xcc>
  404762:	4610      	mov	r0, r2
  404764:	e716      	b.n	404594 <__udivdi3+0x5c>
  404766:	460b      	mov	r3, r1
  404768:	e729      	b.n	4045be <__udivdi3+0x86>
  40476a:	4613      	mov	r3, r2
  40476c:	e772      	b.n	404654 <__udivdi3+0x11c>
  40476e:	40b0      	lsls	r0, r6
  404770:	4290      	cmp	r0, r2
  404772:	d2b7      	bcs.n	4046e4 <__udivdi3+0x1ac>
  404774:	1e60      	subs	r0, r4, #1
  404776:	2600      	movs	r6, #0
  404778:	e724      	b.n	4045c4 <__udivdi3+0x8c>
  40477a:	4630      	mov	r0, r6
  40477c:	e722      	b.n	4045c4 <__udivdi3+0x8c>
  40477e:	42a9      	cmp	r1, r5
  404780:	d995      	bls.n	4046ae <__udivdi3+0x176>
  404782:	f1a8 0802 	sub.w	r8, r8, #2
  404786:	441d      	add	r5, r3
  404788:	e792      	b.n	4046b0 <__udivdi3+0x178>
  40478a:	458c      	cmp	ip, r1
  40478c:	d9a0      	bls.n	4046d0 <__udivdi3+0x198>
  40478e:	3c02      	subs	r4, #2
  404790:	4419      	add	r1, r3
  404792:	e79e      	b.n	4046d2 <__udivdi3+0x19a>
  404794:	4610      	mov	r0, r2
  404796:	e7df      	b.n	404758 <__udivdi3+0x220>
  404798:	460e      	mov	r6, r1
  40479a:	e7c9      	b.n	404730 <__udivdi3+0x1f8>
  40479c:	3802      	subs	r0, #2
  40479e:	4429      	add	r1, r5
  4047a0:	e743      	b.n	40462a <__udivdi3+0xf2>
  4047a2:	bf00      	nop
  4047a4:	2d2d2d20 	.word	0x2d2d2d20
  4047a8:	2d2d2d2d 	.word	0x2d2d2d2d
  4047ac:	2d2d2d2d 	.word	0x2d2d2d2d
  4047b0:	2d2d2d2d 	.word	0x2d2d2d2d
  4047b4:	2d2d2d2d 	.word	0x2d2d2d2d
  4047b8:	2d2d2d2d 	.word	0x2d2d2d2d
  4047bc:	2d2d2d2d 	.word	0x2d2d2d2d
  4047c0:	0d0a202d 	.word	0x0d0a202d
  4047c4:	6d654220 	.word	0x6d654220
  4047c8:	6e697620 	.word	0x6e697620
  4047cc:	43206f64 	.word	0x43206f64
  4047d0:	6973726f 	.word	0x6973726f
  4047d4:	09212020 	.word	0x09212020
  4047d8:	200d0a09 	.word	0x200d0a09
  4047dc:	2d2d2d2d 	.word	0x2d2d2d2d
  4047e0:	2d2d2d2d 	.word	0x2d2d2d2d
  4047e4:	2d2d2d2d 	.word	0x2d2d2d2d
  4047e8:	2d2d2d2d 	.word	0x2d2d2d2d
  4047ec:	2d2d2d2d 	.word	0x2d2d2d2d
  4047f0:	2d2d2d2d 	.word	0x2d2d2d2d
  4047f4:	2d2d2d2d 	.word	0x2d2d2d2d
  4047f8:	000d0a20 	.word	0x000d0a20
  4047fc:	3a203120 	.word	0x3a203120
  404800:	69786520 	.word	0x69786520
  404804:	6e206562 	.word	0x6e206562
  404808:	6d61766f 	.word	0x6d61766f
  40480c:	65746e65 	.word	0x65746e65
  404810:	73736520 	.word	0x73736520
  404814:	656d2065 	.word	0x656d2065
  404818:	0a20756e 	.word	0x0a20756e
  40481c:	2032200d 	.word	0x2032200d
  404820:	7441203a 	.word	0x7441203a
  404824:	20617669 	.word	0x20617669
  404828:	454c206f 	.word	0x454c206f
  40482c:	0a202044 	.word	0x0a202044
  404830:	2033200d 	.word	0x2033200d
  404834:	6544203a 	.word	0x6544203a
  404838:	67696c73 	.word	0x67696c73
  40483c:	206f2061 	.word	0x206f2061
  404840:	2044454c 	.word	0x2044454c
  404844:	00200d0a 	.word	0x00200d0a
  404848:	2064654c 	.word	0x2064654c
  40484c:	45554c42 	.word	0x45554c42
  404850:	204e4f20 	.word	0x204e4f20
  404854:	00000d0a 	.word	0x00000d0a
  404858:	2064654c 	.word	0x2064654c
  40485c:	45455247 	.word	0x45455247
  404860:	4e4f204e 	.word	0x4e4f204e
  404864:	000d0a20 	.word	0x000d0a20
  404868:	2064654c 	.word	0x2064654c
  40486c:	45455247 	.word	0x45455247
  404870:	464f204e 	.word	0x464f204e
  404874:	0d0a2046 	.word	0x0d0a2046
  404878:	00000000 	.word	0x00000000
  40487c:	2064654c 	.word	0x2064654c
  404880:	20444552 	.word	0x20444552
  404884:	0a204e4f 	.word	0x0a204e4f
  404888:	0000000d 	.word	0x0000000d
  40488c:	2064654c 	.word	0x2064654c
  404890:	20444552 	.word	0x20444552
  404894:	2046464f 	.word	0x2046464f
  404898:	00000d0a 	.word	0x00000d0a
  40489c:	656d7561 	.word	0x656d7561
  4048a0:	6e61746e 	.word	0x6e61746e
  4048a4:	0a206f64 	.word	0x0a206f64
  4048a8:	0000000d 	.word	0x0000000d
  4048ac:	696d6964 	.word	0x696d6964
  4048b0:	6e69756e 	.word	0x6e69756e
  4048b4:	0a206f64 	.word	0x0a206f64
  4048b8:	0000000d 	.word	0x0000000d
  4048bc:	6163704f 	.word	0x6163704f
  4048c0:	616e206f 	.word	0x616e206f
  4048c4:	6564206f 	.word	0x6564206f
  4048c8:	696e6966 	.word	0x696e6966
  4048cc:	203a6164 	.word	0x203a6164
  4048d0:	0a206425 	.word	0x0a206425
  4048d4:	0000000d 	.word	0x0000000d
  4048d8:	00000043 	.word	0x00000043

004048dc <_global_impure_ptr>:
  4048dc:	20000008 0000000a                       ... ....

004048e4 <zeroes.6869>:
  4048e4:	30303030 30303030 30303030 30303030     0000000000000000
  4048f4:	33323130 37363534 42413938 46454443     0123456789ABCDEF
  404904:	00000000 33323130 37363534 62613938     ....0123456789ab
  404914:	66656463 00000000 6c756e28 0000296c     cdef....(null)..

00404924 <blanks.6868>:
  404924:	20202020 20202020 20202020 20202020                     

00404934 <_init>:
  404934:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404936:	bf00      	nop
  404938:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40493a:	bc08      	pop	{r3}
  40493c:	469e      	mov	lr, r3
  40493e:	4770      	bx	lr

00404940 <__init_array_start>:
  404940:	00402825 	.word	0x00402825

00404944 <__frame_dummy_init_array_entry>:
  404944:	004000f1                                ..@.

00404948 <_fini>:
  404948:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40494a:	bf00      	nop
  40494c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40494e:	bc08      	pop	{r3}
  404950:	469e      	mov	lr, r3
  404952:	4770      	bx	lr

00404954 <__fini_array_start>:
  404954:	004000cd 	.word	0x004000cd
