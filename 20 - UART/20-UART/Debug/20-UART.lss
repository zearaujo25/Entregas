
20-UART.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000497c  00400000  00400000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0040497c  0040497c  0000c97c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     0000086c  20000000  00404984  00010000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000000dc  2000086c  004051f0  0001086c  2**2
                  ALLOC
  4 .stack        00003000  20000948  004052cc  0001086c  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  0001086c  2**0
                  CONTENTS, READONLY
  6 .comment      0000005b  00000000  00000000  00010896  2**0
                  CONTENTS, READONLY
  7 .debug_info   0000a884  00000000  00000000  000108f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001b90  00000000  00000000  0001b175  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000415a  00000000  00000000  0001cd05  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000958  00000000  00000000  00020e5f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000890  00000000  00000000  000217b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00005454  00000000  00000000  00022047  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000a040  00000000  00000000  0002749b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00052915  00000000  00000000  000314db  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000020d4  00000000  00000000  00083df0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <_sfixed>:
  400000:	20003948 	.word	0x20003948
  400004:	00400845 	.word	0x00400845
  400008:	00400841 	.word	0x00400841
  40000c:	00400841 	.word	0x00400841
  400010:	00400841 	.word	0x00400841
  400014:	00400841 	.word	0x00400841
  400018:	00400841 	.word	0x00400841
	...
  40002c:	00400841 	.word	0x00400841
  400030:	00400841 	.word	0x00400841
  400034:	00000000 	.word	0x00000000
  400038:	00400841 	.word	0x00400841
  40003c:	00400841 	.word	0x00400841
  400040:	00400841 	.word	0x00400841
  400044:	00400841 	.word	0x00400841
  400048:	00400841 	.word	0x00400841
  40004c:	00400841 	.word	0x00400841
  400050:	00400841 	.word	0x00400841
  400054:	00400841 	.word	0x00400841
  400058:	00400841 	.word	0x00400841
  40005c:	00400841 	.word	0x00400841
  400060:	00400841 	.word	0x00400841
  400064:	00400841 	.word	0x00400841
  400068:	00000000 	.word	0x00000000
  40006c:	004005f1 	.word	0x004005f1
  400070:	00400605 	.word	0x00400605
  400074:	00400619 	.word	0x00400619
  400078:	00400841 	.word	0x00400841
  40007c:	00400841 	.word	0x00400841
	...
  400088:	00400841 	.word	0x00400841
  40008c:	00400841 	.word	0x00400841
  400090:	00400841 	.word	0x00400841
  400094:	00400841 	.word	0x00400841
  400098:	00400841 	.word	0x00400841
  40009c:	00400c89 	.word	0x00400c89
  4000a0:	00400841 	.word	0x00400841
  4000a4:	00400841 	.word	0x00400841
  4000a8:	00400841 	.word	0x00400841
  4000ac:	00400841 	.word	0x00400841
  4000b0:	00400841 	.word	0x00400841
  4000b4:	00400841 	.word	0x00400841
  4000b8:	00400841 	.word	0x00400841
  4000bc:	00400841 	.word	0x00400841
  4000c0:	00400841 	.word	0x00400841
  4000c4:	00400841 	.word	0x00400841
  4000c8:	00400841 	.word	0x00400841

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	2000086c 	.word	0x2000086c
  4000e8:	00000000 	.word	0x00000000
  4000ec:	00404984 	.word	0x00404984

004000f0 <frame_dummy>:
  4000f0:	4b08      	ldr	r3, [pc, #32]	; (400114 <frame_dummy+0x24>)
  4000f2:	b510      	push	{r4, lr}
  4000f4:	b11b      	cbz	r3, 4000fe <frame_dummy+0xe>
  4000f6:	4808      	ldr	r0, [pc, #32]	; (400118 <frame_dummy+0x28>)
  4000f8:	4908      	ldr	r1, [pc, #32]	; (40011c <frame_dummy+0x2c>)
  4000fa:	f3af 8000 	nop.w
  4000fe:	4808      	ldr	r0, [pc, #32]	; (400120 <frame_dummy+0x30>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b903      	cbnz	r3, 400106 <frame_dummy+0x16>
  400104:	bd10      	pop	{r4, pc}
  400106:	4b07      	ldr	r3, [pc, #28]	; (400124 <frame_dummy+0x34>)
  400108:	2b00      	cmp	r3, #0
  40010a:	d0fb      	beq.n	400104 <frame_dummy+0x14>
  40010c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400110:	4718      	bx	r3
  400112:	bf00      	nop
  400114:	00000000 	.word	0x00000000
  400118:	00404984 	.word	0x00404984
  40011c:	20000870 	.word	0x20000870
  400120:	00404984 	.word	0x00404984
  400124:	00000000 	.word	0x00000000

00400128 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400128:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40012a:	480e      	ldr	r0, [pc, #56]	; (400164 <sysclk_init+0x3c>)
  40012c:	4b0e      	ldr	r3, [pc, #56]	; (400168 <sysclk_init+0x40>)
  40012e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400130:	2000      	movs	r0, #0
  400132:	213e      	movs	r1, #62	; 0x3e
  400134:	4b0d      	ldr	r3, [pc, #52]	; (40016c <sysclk_init+0x44>)
  400136:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400138:	4c0d      	ldr	r4, [pc, #52]	; (400170 <sysclk_init+0x48>)
  40013a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40013c:	2800      	cmp	r0, #0
  40013e:	d0fc      	beq.n	40013a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400140:	4b0c      	ldr	r3, [pc, #48]	; (400174 <sysclk_init+0x4c>)
  400142:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400144:	4a0c      	ldr	r2, [pc, #48]	; (400178 <sysclk_init+0x50>)
  400146:	4b0d      	ldr	r3, [pc, #52]	; (40017c <sysclk_init+0x54>)
  400148:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  40014a:	4c0d      	ldr	r4, [pc, #52]	; (400180 <sysclk_init+0x58>)
  40014c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40014e:	2800      	cmp	r0, #0
  400150:	d0fc      	beq.n	40014c <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400152:	2010      	movs	r0, #16
  400154:	4b0b      	ldr	r3, [pc, #44]	; (400184 <sysclk_init+0x5c>)
  400156:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400158:	4b0b      	ldr	r3, [pc, #44]	; (400188 <sysclk_init+0x60>)
  40015a:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40015c:	4801      	ldr	r0, [pc, #4]	; (400164 <sysclk_init+0x3c>)
  40015e:	4b02      	ldr	r3, [pc, #8]	; (400168 <sysclk_init+0x40>)
  400160:	4798      	blx	r3
  400162:	bd10      	pop	{r4, pc}
  400164:	07270e00 	.word	0x07270e00
  400168:	00400a09 	.word	0x00400a09
  40016c:	00400695 	.word	0x00400695
  400170:	004006e9 	.word	0x004006e9
  400174:	004006f9 	.word	0x004006f9
  400178:	20133f01 	.word	0x20133f01
  40017c:	400e0400 	.word	0x400e0400
  400180:	00400709 	.word	0x00400709
  400184:	0040062d 	.word	0x0040062d
  400188:	004008f5 	.word	0x004008f5

0040018c <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
  40018c:	b9a8      	cbnz	r0, 4001ba <_read+0x2e>
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  40018e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400192:	460c      	mov	r4, r1
  400194:	4690      	mov	r8, r2

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  400196:	2a00      	cmp	r2, #0
  400198:	dd0a      	ble.n	4001b0 <_read+0x24>
  40019a:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  40019c:	4e08      	ldr	r6, [pc, #32]	; (4001c0 <_read+0x34>)
  40019e:	4d09      	ldr	r5, [pc, #36]	; (4001c4 <_read+0x38>)
  4001a0:	6830      	ldr	r0, [r6, #0]
  4001a2:	4621      	mov	r1, r4
  4001a4:	682b      	ldr	r3, [r5, #0]
  4001a6:	4798      	blx	r3
		ptr++;
  4001a8:	3401      	adds	r4, #1

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  4001aa:	42bc      	cmp	r4, r7
  4001ac:	d1f8      	bne.n	4001a0 <_read+0x14>
  4001ae:	e001      	b.n	4001b4 <_read+0x28>
  4001b0:	f04f 0800 	mov.w	r8, #0
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
	}
	return nChars;
  4001b4:	4640      	mov	r0, r8
  4001b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
		return -1;
  4001ba:	f04f 30ff 	mov.w	r0, #4294967295
  4001be:	4770      	bx	lr
  4001c0:	2000093c 	.word	0x2000093c
  4001c4:	20000934 	.word	0x20000934

004001c8 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  4001c8:	3801      	subs	r0, #1
  4001ca:	2802      	cmp	r0, #2
  4001cc:	d818      	bhi.n	400200 <_write+0x38>
int __attribute__((weak))
_write (int file, const char *ptr, int len);

int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
  4001ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4001d2:	460e      	mov	r6, r1
  4001d4:	4614      	mov	r4, r2

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  4001d6:	b182      	cbz	r2, 4001fa <_write+0x32>
  4001d8:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  4001da:	f8df 8038 	ldr.w	r8, [pc, #56]	; 400214 <_write+0x4c>
  4001de:	4f0c      	ldr	r7, [pc, #48]	; (400210 <_write+0x48>)
  4001e0:	f8d8 0000 	ldr.w	r0, [r8]
  4001e4:	f815 1b01 	ldrb.w	r1, [r5], #1
  4001e8:	683b      	ldr	r3, [r7, #0]
  4001ea:	4798      	blx	r3
  4001ec:	2800      	cmp	r0, #0
  4001ee:	db0a      	blt.n	400206 <_write+0x3e>
  4001f0:	1ba8      	subs	r0, r5, r6

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  4001f2:	3c01      	subs	r4, #1
  4001f4:	d1f4      	bne.n	4001e0 <_write+0x18>
  4001f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4001fa:	2000      	movs	r0, #0
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
		}
		++nChars;
	}
	return nChars;
  4001fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
  400200:	f04f 30ff 	mov.w	r0, #4294967295
			return -1;
		}
		++nChars;
	}
	return nChars;
}
  400204:	4770      	bx	lr
		return -1;
	}

	for (; len != 0; --len) {
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
  400206:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  40020a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40020e:	bf00      	nop
  400210:	20000938 	.word	0x20000938
  400214:	2000093c 	.word	0x2000093c

00400218 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
  400218:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  40021a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  40021e:	4b10      	ldr	r3, [pc, #64]	; (400260 <board_init+0x48>)
  400220:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400222:	200b      	movs	r0, #11
  400224:	4c0f      	ldr	r4, [pc, #60]	; (400264 <board_init+0x4c>)
  400226:	47a0      	blx	r4
  400228:	200c      	movs	r0, #12
  40022a:	47a0      	blx	r4
  40022c:	200d      	movs	r0, #13
  40022e:	47a0      	blx	r4
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();

	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
  400230:	2013      	movs	r0, #19
  400232:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400236:	4c0c      	ldr	r4, [pc, #48]	; (400268 <board_init+0x50>)
  400238:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
  40023a:	2014      	movs	r0, #20
  40023c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400240:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
  400242:	2023      	movs	r0, #35	; 0x23
  400244:	4909      	ldr	r1, [pc, #36]	; (40026c <board_init+0x54>)
  400246:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
  400248:	204c      	movs	r0, #76	; 0x4c
  40024a:	4909      	ldr	r1, [pc, #36]	; (400270 <board_init+0x58>)
  40024c:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART0_PIO, PINS_UART0, PINS_UART0_FLAGS);
  40024e:	4809      	ldr	r0, [pc, #36]	; (400274 <board_init+0x5c>)
  400250:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  400254:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  400258:	4b07      	ldr	r3, [pc, #28]	; (400278 <board_init+0x60>)
  40025a:	4798      	blx	r3
  40025c:	bd10      	pop	{r4, pc}
  40025e:	bf00      	nop
  400260:	400e1450 	.word	0x400e1450
  400264:	00400719 	.word	0x00400719
  400268:	00400389 	.word	0x00400389
  40026c:	28000079 	.word	0x28000079
  400270:	28000059 	.word	0x28000059
  400274:	400e0e00 	.word	0x400e0e00
  400278:	004004ad 	.word	0x004004ad

0040027c <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  40027c:	6301      	str	r1, [r0, #48]	; 0x30
  40027e:	4770      	bx	lr

00400280 <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400280:	6341      	str	r1, [r0, #52]	; 0x34
  400282:	4770      	bx	lr

00400284 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400284:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400286:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  40028a:	d02f      	beq.n	4002ec <pio_set_peripheral+0x68>
  40028c:	d807      	bhi.n	40029e <pio_set_peripheral+0x1a>
  40028e:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400292:	d014      	beq.n	4002be <pio_set_peripheral+0x3a>
  400294:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400298:	d01e      	beq.n	4002d8 <pio_set_peripheral+0x54>
  40029a:	b939      	cbnz	r1, 4002ac <pio_set_peripheral+0x28>
  40029c:	4770      	bx	lr
  40029e:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4002a2:	d037      	beq.n	400314 <pio_set_peripheral+0x90>
  4002a4:	d804      	bhi.n	4002b0 <pio_set_peripheral+0x2c>
  4002a6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4002aa:	d029      	beq.n	400300 <pio_set_peripheral+0x7c>
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4002ac:	6042      	str	r2, [r0, #4]
  4002ae:	4770      	bx	lr

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4002b0:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4002b4:	d02e      	beq.n	400314 <pio_set_peripheral+0x90>
  4002b6:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4002ba:	d02b      	beq.n	400314 <pio_set_peripheral+0x90>
  4002bc:	e7f6      	b.n	4002ac <pio_set_peripheral+0x28>
 * \param ul_type PIO type.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set_peripheral(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
  4002be:	b410      	push	{r4}
	p_pio->PIO_IDR = ul_mask;

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002c0:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4002c2:	6f04      	ldr	r4, [r0, #112]	; 0x70
  4002c4:	43d3      	mvns	r3, r2
  4002c6:	4021      	ands	r1, r4
  4002c8:	4019      	ands	r1, r3
  4002ca:	6701      	str	r1, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4002cc:	6f41      	ldr	r1, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4002ce:	6f44      	ldr	r4, [r0, #116]	; 0x74
  4002d0:	4021      	ands	r1, r4
  4002d2:	400b      	ands	r3, r1
  4002d4:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4002d6:	e01a      	b.n	40030e <pio_set_peripheral+0x8a>
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002d8:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4002da:	4313      	orrs	r3, r2
  4002dc:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4002de:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4002e0:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4002e2:	400b      	ands	r3, r1
  4002e4:	ea23 0302 	bic.w	r3, r3, r2
  4002e8:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4002ea:	e7df      	b.n	4002ac <pio_set_peripheral+0x28>
#if (!SAMG)
	case PIO_PERIPH_C:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002ec:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4002ee:	6f01      	ldr	r1, [r0, #112]	; 0x70
  4002f0:	400b      	ands	r3, r1
  4002f2:	ea23 0302 	bic.w	r3, r3, r2
  4002f6:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4002f8:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4002fa:	4313      	orrs	r3, r2
  4002fc:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4002fe:	e7d5      	b.n	4002ac <pio_set_peripheral+0x28>
	case PIO_PERIPH_D:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400300:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400302:	4313      	orrs	r3, r2
  400304:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400306:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400308:	4313      	orrs	r3, r2
  40030a:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  40030c:	e7ce      	b.n	4002ac <pio_set_peripheral+0x28>
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  40030e:	6042      	str	r2, [r0, #4]
}
  400310:	f85d 4b04 	ldr.w	r4, [sp], #4
  400314:	4770      	bx	lr
  400316:	bf00      	nop

00400318 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400318:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  40031a:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  40031e:	bf14      	ite	ne
  400320:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400322:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400324:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  400328:	bf14      	ite	ne
  40032a:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
  40032c:	6241      	streq	r1, [r0, #36]	; 0x24
	}

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
  40032e:	f012 0f02 	tst.w	r2, #2
  400332:	d002      	beq.n	40033a <pio_set_input+0x22>
		p_pio->PIO_IFSCDR = ul_mask;
  400334:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  400338:	e004      	b.n	400344 <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
  40033a:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  40033e:	bf18      	it	ne
  400340:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
  400344:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400346:	6001      	str	r1, [r0, #0]
  400348:	4770      	bx	lr
  40034a:	bf00      	nop

0040034c <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
  40034c:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  40034e:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400350:	9c01      	ldr	r4, [sp, #4]
  400352:	b10c      	cbz	r4, 400358 <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
  400354:	6641      	str	r1, [r0, #100]	; 0x64
  400356:	e000      	b.n	40035a <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400358:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
  40035a:	b10b      	cbz	r3, 400360 <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
  40035c:	6501      	str	r1, [r0, #80]	; 0x50
  40035e:	e000      	b.n	400362 <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
  400360:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
  400362:	b10a      	cbz	r2, 400368 <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
  400364:	6301      	str	r1, [r0, #48]	; 0x30
  400366:	e000      	b.n	40036a <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
  400368:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
  40036a:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  40036c:	6001      	str	r1, [r0, #0]
}
  40036e:	f85d 4b04 	ldr.w	r4, [sp], #4
  400372:	4770      	bx	lr

00400374 <pio_get_output_data_status>:
 * \retval 0 All PIOs are configured to output a low level.
 */
uint32_t pio_get_output_data_status(const Pio *p_pio,
		const uint32_t ul_mask)
{
	if ((p_pio->PIO_ODSR & ul_mask) == 0) {
  400374:	6b83      	ldr	r3, [r0, #56]	; 0x38
  400376:	4219      	tst	r1, r3
		return 0;
	} else {
		return 1;
	}
}
  400378:	bf14      	ite	ne
  40037a:	2001      	movne	r0, #1
  40037c:	2000      	moveq	r0, #0
  40037e:	4770      	bx	lr

00400380 <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400380:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400382:	4770      	bx	lr

00400384 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400384:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400386:	4770      	bx	lr

00400388 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  400388:	b570      	push	{r4, r5, r6, lr}
  40038a:	b082      	sub	sp, #8
  40038c:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  40038e:	0943      	lsrs	r3, r0, #5
  400390:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400394:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400398:	025c      	lsls	r4, r3, #9
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
  40039a:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  40039e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4003a2:	d047      	beq.n	400434 <pio_configure_pin+0xac>
  4003a4:	d809      	bhi.n	4003ba <pio_configure_pin+0x32>
  4003a6:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4003aa:	d021      	beq.n	4003f0 <pio_configure_pin+0x68>
  4003ac:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4003b0:	d02f      	beq.n	400412 <pio_configure_pin+0x8a>
  4003b2:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4003b6:	d16f      	bne.n	400498 <pio_configure_pin+0x110>
  4003b8:	e009      	b.n	4003ce <pio_configure_pin+0x46>
  4003ba:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4003be:	d055      	beq.n	40046c <pio_configure_pin+0xe4>
  4003c0:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  4003c4:	d052      	beq.n	40046c <pio_configure_pin+0xe4>
  4003c6:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  4003ca:	d044      	beq.n	400456 <pio_configure_pin+0xce>
  4003cc:	e064      	b.n	400498 <pio_configure_pin+0x110>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  4003ce:	f000 001f 	and.w	r0, r0, #31
  4003d2:	2601      	movs	r6, #1
  4003d4:	4086      	lsls	r6, r0
  4003d6:	4620      	mov	r0, r4
  4003d8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4003dc:	4632      	mov	r2, r6
  4003de:	4b30      	ldr	r3, [pc, #192]	; (4004a0 <pio_configure_pin+0x118>)
  4003e0:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  4003e2:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4003e6:	bf14      	ite	ne
  4003e8:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  4003ea:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  4003ec:	2001      	movs	r0, #1
  4003ee:	e054      	b.n	40049a <pio_configure_pin+0x112>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  4003f0:	f000 001f 	and.w	r0, r0, #31
  4003f4:	2601      	movs	r6, #1
  4003f6:	4086      	lsls	r6, r0
  4003f8:	4620      	mov	r0, r4
  4003fa:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4003fe:	4632      	mov	r2, r6
  400400:	4b27      	ldr	r3, [pc, #156]	; (4004a0 <pio_configure_pin+0x118>)
  400402:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400404:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400408:	bf14      	ite	ne
  40040a:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  40040c:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  40040e:	2001      	movs	r0, #1
  400410:	e043      	b.n	40049a <pio_configure_pin+0x112>
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  400412:	f000 001f 	and.w	r0, r0, #31
  400416:	2601      	movs	r6, #1
  400418:	4086      	lsls	r6, r0
  40041a:	4620      	mov	r0, r4
  40041c:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400420:	4632      	mov	r2, r6
  400422:	4b1f      	ldr	r3, [pc, #124]	; (4004a0 <pio_configure_pin+0x118>)
  400424:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400426:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  40042a:	bf14      	ite	ne
  40042c:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  40042e:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400430:	2001      	movs	r0, #1
  400432:	e032      	b.n	40049a <pio_configure_pin+0x112>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_D:
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  400434:	f000 001f 	and.w	r0, r0, #31
  400438:	2601      	movs	r6, #1
  40043a:	4086      	lsls	r6, r0
  40043c:	4620      	mov	r0, r4
  40043e:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400442:	4632      	mov	r2, r6
  400444:	4b16      	ldr	r3, [pc, #88]	; (4004a0 <pio_configure_pin+0x118>)
  400446:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400448:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  40044c:	bf14      	ite	ne
  40044e:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400450:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400452:	2001      	movs	r0, #1
  400454:	e021      	b.n	40049a <pio_configure_pin+0x112>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  400456:	f000 031f 	and.w	r3, r0, #31
  40045a:	2601      	movs	r6, #1
  40045c:	4620      	mov	r0, r4
  40045e:	fa06 f103 	lsl.w	r1, r6, r3
  400462:	462a      	mov	r2, r5
  400464:	4b0f      	ldr	r3, [pc, #60]	; (4004a4 <pio_configure_pin+0x11c>)
  400466:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
  400468:	4630      	mov	r0, r6
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
  40046a:	e016      	b.n	40049a <pio_configure_pin+0x112>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  40046c:	f000 031f 	and.w	r3, r0, #31
  400470:	2601      	movs	r6, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400472:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  400476:	ea05 0106 	and.w	r1, r5, r6
  40047a:	9100      	str	r1, [sp, #0]
  40047c:	4620      	mov	r0, r4
  40047e:	fa06 f103 	lsl.w	r1, r6, r3
  400482:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400486:	bf14      	ite	ne
  400488:	2200      	movne	r2, #0
  40048a:	2201      	moveq	r2, #1
  40048c:	f3c5 0380 	ubfx	r3, r5, #2, #1
  400490:	4c05      	ldr	r4, [pc, #20]	; (4004a8 <pio_configure_pin+0x120>)
  400492:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
  400494:	4630      	mov	r0, r6
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
  400496:	e000      	b.n	40049a <pio_configure_pin+0x112>

	default:
		return 0;
  400498:	2000      	movs	r0, #0
	}

	return 1;
}
  40049a:	b002      	add	sp, #8
  40049c:	bd70      	pop	{r4, r5, r6, pc}
  40049e:	bf00      	nop
  4004a0:	00400285 	.word	0x00400285
  4004a4:	00400319 	.word	0x00400319
  4004a8:	0040034d 	.word	0x0040034d

004004ac <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
  4004ac:	b570      	push	{r4, r5, r6, lr}
  4004ae:	b082      	sub	sp, #8
  4004b0:	4606      	mov	r6, r0
  4004b2:	460d      	mov	r5, r1
  4004b4:	4614      	mov	r4, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
  4004b6:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
  4004ba:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4004be:	d038      	beq.n	400532 <pio_configure_pin_group+0x86>
  4004c0:	d809      	bhi.n	4004d6 <pio_configure_pin_group+0x2a>
  4004c2:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4004c6:	d01c      	beq.n	400502 <pio_configure_pin_group+0x56>
  4004c8:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4004cc:	d025      	beq.n	40051a <pio_configure_pin_group+0x6e>
  4004ce:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4004d2:	d150      	bne.n	400576 <pio_configure_pin_group+0xca>
  4004d4:	e009      	b.n	4004ea <pio_configure_pin_group+0x3e>
  4004d6:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4004da:	d03a      	beq.n	400552 <pio_configure_pin_group+0xa6>
  4004dc:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  4004e0:	d037      	beq.n	400552 <pio_configure_pin_group+0xa6>
  4004e2:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  4004e6:	d030      	beq.n	40054a <pio_configure_pin_group+0x9e>
  4004e8:	e045      	b.n	400576 <pio_configure_pin_group+0xca>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
  4004ea:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4004ee:	462a      	mov	r2, r5
  4004f0:	4b22      	ldr	r3, [pc, #136]	; (40057c <pio_configure_pin_group+0xd0>)
  4004f2:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  4004f4:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  4004f8:	bf14      	ite	ne
  4004fa:	6675      	strne	r5, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  4004fc:	6635      	streq	r5, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  4004fe:	2001      	movs	r0, #1
  400500:	e03a      	b.n	400578 <pio_configure_pin_group+0xcc>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
  400502:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400506:	462a      	mov	r2, r5
  400508:	4b1c      	ldr	r3, [pc, #112]	; (40057c <pio_configure_pin_group+0xd0>)
  40050a:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  40050c:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400510:	bf14      	ite	ne
  400512:	6675      	strne	r5, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400514:	6635      	streq	r5, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400516:	2001      	movs	r0, #1
  400518:	e02e      	b.n	400578 <pio_configure_pin_group+0xcc>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
  40051a:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  40051e:	462a      	mov	r2, r5
  400520:	4b16      	ldr	r3, [pc, #88]	; (40057c <pio_configure_pin_group+0xd0>)
  400522:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400524:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400528:	bf14      	ite	ne
  40052a:	6675      	strne	r5, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  40052c:	6635      	streq	r5, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  40052e:	2001      	movs	r0, #1
  400530:	e022      	b.n	400578 <pio_configure_pin_group+0xcc>
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_D:
		pio_set_peripheral(p_pio, PIO_PERIPH_D, ul_mask);
  400532:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400536:	462a      	mov	r2, r5
  400538:	4b10      	ldr	r3, [pc, #64]	; (40057c <pio_configure_pin_group+0xd0>)
  40053a:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  40053c:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400540:	bf14      	ite	ne
  400542:	6675      	strne	r5, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400544:	6635      	streq	r5, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400546:	2001      	movs	r0, #1
  400548:	e016      	b.n	400578 <pio_configure_pin_group+0xcc>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
  40054a:	4b0d      	ldr	r3, [pc, #52]	; (400580 <pio_configure_pin_group+0xd4>)
  40054c:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
  40054e:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
  400550:	e012      	b.n	400578 <pio_configure_pin_group+0xcc>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400552:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
  400556:	f004 0301 	and.w	r3, r4, #1
  40055a:	9300      	str	r3, [sp, #0]
  40055c:	4630      	mov	r0, r6
  40055e:	4629      	mov	r1, r5
  400560:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400564:	bf14      	ite	ne
  400566:	2200      	movne	r2, #0
  400568:	2201      	moveq	r2, #1
  40056a:	f3c4 0380 	ubfx	r3, r4, #2, #1
  40056e:	4c05      	ldr	r4, [pc, #20]	; (400584 <pio_configure_pin_group+0xd8>)
  400570:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
  400572:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
  400574:	e000      	b.n	400578 <pio_configure_pin_group+0xcc>

	default:
		return 0;
  400576:	2000      	movs	r0, #0
	}

	return 1;
}
  400578:	b002      	add	sp, #8
  40057a:	bd70      	pop	{r4, r5, r6, pc}
  40057c:	00400285 	.word	0x00400285
  400580:	00400319 	.word	0x00400319
  400584:	0040034d 	.word	0x0040034d

00400588 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400588:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40058c:	4681      	mov	r9, r0
  40058e:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400590:	4b12      	ldr	r3, [pc, #72]	; (4005dc <pio_handler_process+0x54>)
  400592:	4798      	blx	r3
  400594:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400596:	4648      	mov	r0, r9
  400598:	4b11      	ldr	r3, [pc, #68]	; (4005e0 <pio_handler_process+0x58>)
  40059a:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  40059c:	4005      	ands	r5, r0
  40059e:	d013      	beq.n	4005c8 <pio_handler_process+0x40>
  4005a0:	4c10      	ldr	r4, [pc, #64]	; (4005e4 <pio_handler_process+0x5c>)
  4005a2:	f104 0660 	add.w	r6, r4, #96	; 0x60
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
  4005a6:	6823      	ldr	r3, [r4, #0]
  4005a8:	4543      	cmp	r3, r8
  4005aa:	d108      	bne.n	4005be <pio_handler_process+0x36>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  4005ac:	6861      	ldr	r1, [r4, #4]
  4005ae:	4229      	tst	r1, r5
  4005b0:	d005      	beq.n	4005be <pio_handler_process+0x36>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  4005b2:	68e3      	ldr	r3, [r4, #12]
  4005b4:	4640      	mov	r0, r8
  4005b6:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
  4005b8:	6863      	ldr	r3, [r4, #4]
  4005ba:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  4005be:	42b4      	cmp	r4, r6
  4005c0:	d002      	beq.n	4005c8 <pio_handler_process+0x40>
  4005c2:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
  4005c4:	2d00      	cmp	r5, #0
  4005c6:	d1ee      	bne.n	4005a6 <pio_handler_process+0x1e>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  4005c8:	4b07      	ldr	r3, [pc, #28]	; (4005e8 <pio_handler_process+0x60>)
  4005ca:	681b      	ldr	r3, [r3, #0]
  4005cc:	b123      	cbz	r3, 4005d8 <pio_handler_process+0x50>
		if (pio_capture_handler) {
  4005ce:	4b07      	ldr	r3, [pc, #28]	; (4005ec <pio_handler_process+0x64>)
  4005d0:	681b      	ldr	r3, [r3, #0]
  4005d2:	b10b      	cbz	r3, 4005d8 <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  4005d4:	4648      	mov	r0, r9
  4005d6:	4798      	blx	r3
  4005d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4005dc:	00400381 	.word	0x00400381
  4005e0:	00400385 	.word	0x00400385
  4005e4:	2000088c 	.word	0x2000088c
  4005e8:	20000940 	.word	0x20000940
  4005ec:	20000888 	.word	0x20000888

004005f0 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  4005f0:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  4005f2:	4802      	ldr	r0, [pc, #8]	; (4005fc <PIOA_Handler+0xc>)
  4005f4:	210b      	movs	r1, #11
  4005f6:	4b02      	ldr	r3, [pc, #8]	; (400600 <PIOA_Handler+0x10>)
  4005f8:	4798      	blx	r3
  4005fa:	bd08      	pop	{r3, pc}
  4005fc:	400e0e00 	.word	0x400e0e00
  400600:	00400589 	.word	0x00400589

00400604 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400604:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400606:	4802      	ldr	r0, [pc, #8]	; (400610 <PIOB_Handler+0xc>)
  400608:	210c      	movs	r1, #12
  40060a:	4b02      	ldr	r3, [pc, #8]	; (400614 <PIOB_Handler+0x10>)
  40060c:	4798      	blx	r3
  40060e:	bd08      	pop	{r3, pc}
  400610:	400e1000 	.word	0x400e1000
  400614:	00400589 	.word	0x00400589

00400618 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400618:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  40061a:	4802      	ldr	r0, [pc, #8]	; (400624 <PIOC_Handler+0xc>)
  40061c:	210d      	movs	r1, #13
  40061e:	4b02      	ldr	r3, [pc, #8]	; (400628 <PIOC_Handler+0x10>)
  400620:	4798      	blx	r3
  400622:	bd08      	pop	{r3, pc}
  400624:	400e1200 	.word	0x400e1200
  400628:	00400589 	.word	0x00400589

0040062c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  40062c:	4a18      	ldr	r2, [pc, #96]	; (400690 <pmc_switch_mck_to_pllack+0x64>)
  40062e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400630:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400634:	4318      	orrs	r0, r3
  400636:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400638:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40063a:	f013 0f08 	tst.w	r3, #8
  40063e:	d003      	beq.n	400648 <pmc_switch_mck_to_pllack+0x1c>
  400640:	e009      	b.n	400656 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400642:	3b01      	subs	r3, #1
  400644:	d103      	bne.n	40064e <pmc_switch_mck_to_pllack+0x22>
  400646:	e01e      	b.n	400686 <pmc_switch_mck_to_pllack+0x5a>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400648:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40064c:	4910      	ldr	r1, [pc, #64]	; (400690 <pmc_switch_mck_to_pllack+0x64>)
  40064e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400650:	f012 0f08 	tst.w	r2, #8
  400654:	d0f5      	beq.n	400642 <pmc_switch_mck_to_pllack+0x16>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400656:	4a0e      	ldr	r2, [pc, #56]	; (400690 <pmc_switch_mck_to_pllack+0x64>)
  400658:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40065a:	f023 0303 	bic.w	r3, r3, #3
  40065e:	f043 0302 	orr.w	r3, r3, #2
  400662:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400664:	6e90      	ldr	r0, [r2, #104]	; 0x68
  400666:	f010 0008 	ands.w	r0, r0, #8
  40066a:	d004      	beq.n	400676 <pmc_switch_mck_to_pllack+0x4a>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
  40066c:	2000      	movs	r0, #0
  40066e:	4770      	bx	lr
	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
  400670:	3b01      	subs	r3, #1
  400672:	d103      	bne.n	40067c <pmc_switch_mck_to_pllack+0x50>
  400674:	e009      	b.n	40068a <pmc_switch_mck_to_pllack+0x5e>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400676:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40067a:	4905      	ldr	r1, [pc, #20]	; (400690 <pmc_switch_mck_to_pllack+0x64>)
  40067c:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40067e:	f012 0f08 	tst.w	r2, #8
  400682:	d0f5      	beq.n	400670 <pmc_switch_mck_to_pllack+0x44>
  400684:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  400686:	2001      	movs	r0, #1
  400688:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  40068a:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  40068c:	4770      	bx	lr
  40068e:	bf00      	nop
  400690:	400e0400 	.word	0x400e0400

00400694 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400694:	b138      	cbz	r0, 4006a6 <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400696:	4911      	ldr	r1, [pc, #68]	; (4006dc <pmc_switch_mainck_to_xtal+0x48>)
  400698:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  40069a:	4a11      	ldr	r2, [pc, #68]	; (4006e0 <pmc_switch_mainck_to_xtal+0x4c>)
  40069c:	401a      	ands	r2, r3
  40069e:	4b11      	ldr	r3, [pc, #68]	; (4006e4 <pmc_switch_mainck_to_xtal+0x50>)
  4006a0:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4006a2:	620b      	str	r3, [r1, #32]
  4006a4:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4006a6:	4a0d      	ldr	r2, [pc, #52]	; (4006dc <pmc_switch_mainck_to_xtal+0x48>)
  4006a8:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4006aa:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  4006ae:	f023 0303 	bic.w	r3, r3, #3
  4006b2:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4006b6:	f043 0301 	orr.w	r3, r3, #1
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  4006ba:	0209      	lsls	r1, r1, #8
  4006bc:	b289      	uxth	r1, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4006be:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4006c0:	6213      	str	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4006c2:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4006c4:	f013 0f01 	tst.w	r3, #1
  4006c8:	d0fb      	beq.n	4006c2 <pmc_switch_mainck_to_xtal+0x2e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4006ca:	4a04      	ldr	r2, [pc, #16]	; (4006dc <pmc_switch_mainck_to_xtal+0x48>)
  4006cc:	6a13      	ldr	r3, [r2, #32]
  4006ce:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4006d2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4006d6:	6213      	str	r3, [r2, #32]
  4006d8:	4770      	bx	lr
  4006da:	bf00      	nop
  4006dc:	400e0400 	.word	0x400e0400
  4006e0:	fec8fffc 	.word	0xfec8fffc
  4006e4:	01370002 	.word	0x01370002

004006e8 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4006e8:	4b02      	ldr	r3, [pc, #8]	; (4006f4 <pmc_osc_is_ready_mainck+0xc>)
  4006ea:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4006ec:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4006f0:	4770      	bx	lr
  4006f2:	bf00      	nop
  4006f4:	400e0400 	.word	0x400e0400

004006f8 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4006f8:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4006fc:	4b01      	ldr	r3, [pc, #4]	; (400704 <pmc_disable_pllack+0xc>)
  4006fe:	629a      	str	r2, [r3, #40]	; 0x28
  400700:	4770      	bx	lr
  400702:	bf00      	nop
  400704:	400e0400 	.word	0x400e0400

00400708 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400708:	4b02      	ldr	r3, [pc, #8]	; (400714 <pmc_is_locked_pllack+0xc>)
  40070a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40070c:	f000 0002 	and.w	r0, r0, #2
  400710:	4770      	bx	lr
  400712:	bf00      	nop
  400714:	400e0400 	.word	0x400e0400

00400718 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400718:	2822      	cmp	r0, #34	; 0x22
  40071a:	d81e      	bhi.n	40075a <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  40071c:	281f      	cmp	r0, #31
  40071e:	d80c      	bhi.n	40073a <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400720:	4b11      	ldr	r3, [pc, #68]	; (400768 <pmc_enable_periph_clk+0x50>)
  400722:	699a      	ldr	r2, [r3, #24]
  400724:	2301      	movs	r3, #1
  400726:	4083      	lsls	r3, r0
  400728:	401a      	ands	r2, r3
  40072a:	4293      	cmp	r3, r2
  40072c:	d017      	beq.n	40075e <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  40072e:	2301      	movs	r3, #1
  400730:	4083      	lsls	r3, r0
  400732:	4a0d      	ldr	r2, [pc, #52]	; (400768 <pmc_enable_periph_clk+0x50>)
  400734:	6113      	str	r3, [r2, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400736:	2000      	movs	r0, #0
  400738:	4770      	bx	lr
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  40073a:	4b0b      	ldr	r3, [pc, #44]	; (400768 <pmc_enable_periph_clk+0x50>)
  40073c:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
  400740:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400742:	2301      	movs	r3, #1
  400744:	4083      	lsls	r3, r0
  400746:	401a      	ands	r2, r3
  400748:	4293      	cmp	r3, r2
  40074a:	d00a      	beq.n	400762 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  40074c:	2301      	movs	r3, #1
  40074e:	4083      	lsls	r3, r0
  400750:	4a05      	ldr	r2, [pc, #20]	; (400768 <pmc_enable_periph_clk+0x50>)
  400752:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
		}
#endif
	}

	return 0;
  400756:	2000      	movs	r0, #0
  400758:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
  40075a:	2001      	movs	r0, #1
  40075c:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  40075e:	2000      	movs	r0, #0
  400760:	4770      	bx	lr
  400762:	2000      	movs	r0, #0
}
  400764:	4770      	bx	lr
  400766:	bf00      	nop
  400768:	400e0400 	.word	0x400e0400

0040076c <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  40076c:	b410      	push	{r4}
  40076e:	0189      	lsls	r1, r1, #6
  400770:	1843      	adds	r3, r0, r1
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  400772:	2402      	movs	r4, #2
  400774:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  400776:	f04f 31ff 	mov.w	r1, #4294967295
  40077a:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  40077c:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  40077e:	605a      	str	r2, [r3, #4]
}
  400780:	f85d 4b04 	ldr.w	r4, [sp], #4
  400784:	4770      	bx	lr
  400786:	bf00      	nop

00400788 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  400788:	0189      	lsls	r1, r1, #6
  40078a:	2305      	movs	r3, #5
  40078c:	5043      	str	r3, [r0, r1]
  40078e:	4770      	bx	lr

00400790 <tc_stop>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKDIS;
  400790:	0189      	lsls	r1, r1, #6
  400792:	2302      	movs	r3, #2
  400794:	5043      	str	r3, [r0, r1]
  400796:	4770      	bx	lr

00400798 <tc_read_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	return p_tc->TC_CHANNEL[ul_channel].TC_RC;
  400798:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  40079c:	69c8      	ldr	r0, [r1, #28]
}
  40079e:	4770      	bx	lr

004007a0 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  4007a0:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  4007a4:	61ca      	str	r2, [r1, #28]
  4007a6:	4770      	bx	lr

004007a8 <tc_enable_interrupt>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
	tc_channel->TC_IER = ul_sources;
  4007a8:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  4007ac:	624a      	str	r2, [r1, #36]	; 0x24
  4007ae:	4770      	bx	lr

004007b0 <tc_get_status>:
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
	return tc_channel->TC_SR;
  4007b0:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  4007b4:	6a08      	ldr	r0, [r1, #32]
}
  4007b6:	4770      	bx	lr

004007b8 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
  4007b8:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
  4007ba:	23ac      	movs	r3, #172	; 0xac
  4007bc:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
  4007be:	680b      	ldr	r3, [r1, #0]
  4007c0:	684a      	ldr	r2, [r1, #4]
  4007c2:	fbb3 f3f2 	udiv	r3, r3, r2
  4007c6:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
  4007c8:	1e5c      	subs	r4, r3, #1
  4007ca:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  4007ce:	4294      	cmp	r4, r2
  4007d0:	d80a      	bhi.n	4007e8 <uart_init+0x30>
		return 1;

	p_uart->UART_BRGR = cd;
  4007d2:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
  4007d4:	688b      	ldr	r3, [r1, #8]
  4007d6:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
  4007d8:	f240 2302 	movw	r3, #514	; 0x202
  4007dc:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  4007e0:	2350      	movs	r3, #80	; 0x50
  4007e2:	6003      	str	r3, [r0, #0]

	return 0;
  4007e4:	2000      	movs	r0, #0
  4007e6:	e000      	b.n	4007ea <uart_init+0x32>

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
		return 1;
  4007e8:	2001      	movs	r0, #1

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;

	return 0;
}
  4007ea:	f85d 4b04 	ldr.w	r4, [sp], #4
  4007ee:	4770      	bx	lr

004007f0 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  4007f0:	6943      	ldr	r3, [r0, #20]
  4007f2:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  4007f6:	bf1a      	itte	ne
  4007f8:	61c1      	strne	r1, [r0, #28]
	return 0;
  4007fa:	2000      	movne	r0, #0
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
		return 1;
  4007fc:	2001      	moveq	r0, #1

	/* Send character */
	p_uart->UART_THR = uc_data;
	return 0;
}
  4007fe:	4770      	bx	lr

00400800 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  400800:	6943      	ldr	r3, [r0, #20]
  400802:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  400806:	bf1d      	ittte	ne
  400808:	6983      	ldrne	r3, [r0, #24]
  40080a:	700b      	strbne	r3, [r1, #0]
	return 0;
  40080c:	2000      	movne	r0, #0
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
		return 1;
  40080e:	2001      	moveq	r0, #1

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
	return 0;
}
  400810:	4770      	bx	lr
  400812:	bf00      	nop

00400814 <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400814:	6943      	ldr	r3, [r0, #20]
  400816:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  40081a:	bf1d      	ittte	ne
  40081c:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  400820:	61c1      	strne	r1, [r0, #28]
	return 0;
  400822:	2000      	movne	r0, #0
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
		return 1;
  400824:	2001      	moveq	r0, #1
	}

	p_usart->US_THR = US_THR_TXCHR(c);
	return 0;
}
  400826:	4770      	bx	lr

00400828 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400828:	6943      	ldr	r3, [r0, #20]
  40082a:	f013 0f01 	tst.w	r3, #1
  40082e:	d005      	beq.n	40083c <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400830:	6983      	ldr	r3, [r0, #24]
  400832:	f3c3 0308 	ubfx	r3, r3, #0, #9
  400836:	600b      	str	r3, [r1, #0]

	return 0;
  400838:	2000      	movs	r0, #0
  40083a:	4770      	bx	lr
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
		return 1;
  40083c:	2001      	movs	r0, #1

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;

	return 0;
}
  40083e:	4770      	bx	lr

00400840 <Dummy_Handler>:
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
	while (1) {
	}
  400840:	e7fe      	b.n	400840 <Dummy_Handler>
  400842:	bf00      	nop

00400844 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  400844:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc > pDest) {
  400846:	4b20      	ldr	r3, [pc, #128]	; (4008c8 <Reset_Handler+0x84>)
  400848:	4a20      	ldr	r2, [pc, #128]	; (4008cc <Reset_Handler+0x88>)
  40084a:	429a      	cmp	r2, r3
  40084c:	d913      	bls.n	400876 <Reset_Handler+0x32>
		for (; pDest < &_erelocate;) {
  40084e:	4b20      	ldr	r3, [pc, #128]	; (4008d0 <Reset_Handler+0x8c>)
  400850:	4a1d      	ldr	r2, [pc, #116]	; (4008c8 <Reset_Handler+0x84>)
  400852:	429a      	cmp	r2, r3
  400854:	d21f      	bcs.n	400896 <Reset_Handler+0x52>
  400856:	4611      	mov	r1, r2
  400858:	3204      	adds	r2, #4
  40085a:	3303      	adds	r3, #3
  40085c:	1a9b      	subs	r3, r3, r2
  40085e:	f023 0303 	bic.w	r3, r3, #3
  400862:	3304      	adds	r3, #4
  400864:	4a19      	ldr	r2, [pc, #100]	; (4008cc <Reset_Handler+0x88>)
  400866:	4413      	add	r3, r2
			*pDest++ = *pSrc++;
  400868:	f852 0b04 	ldr.w	r0, [r2], #4
  40086c:	f841 0b04 	str.w	r0, [r1], #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc > pDest) {
		for (; pDest < &_erelocate;) {
  400870:	429a      	cmp	r2, r3
  400872:	d1f9      	bne.n	400868 <Reset_Handler+0x24>
  400874:	e00f      	b.n	400896 <Reset_Handler+0x52>
			*pDest++ = *pSrc++;
		}
	} else if (pSrc < pDest) {
  400876:	4b14      	ldr	r3, [pc, #80]	; (4008c8 <Reset_Handler+0x84>)
  400878:	4a14      	ldr	r2, [pc, #80]	; (4008cc <Reset_Handler+0x88>)
  40087a:	429a      	cmp	r2, r3
  40087c:	d20b      	bcs.n	400896 <Reset_Handler+0x52>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  40087e:	4b14      	ldr	r3, [pc, #80]	; (4008d0 <Reset_Handler+0x8c>)
  400880:	4a11      	ldr	r2, [pc, #68]	; (4008c8 <Reset_Handler+0x84>)
  400882:	1a9a      	subs	r2, r3, r2
  400884:	4813      	ldr	r0, [pc, #76]	; (4008d4 <Reset_Handler+0x90>)
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  400886:	1881      	adds	r1, r0, r2
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
		for (;nb_bytes;nb_bytes -= 4) {
  400888:	b12a      	cbz	r2, 400896 <Reset_Handler+0x52>
			*pDest-- = *pSrc--;
  40088a:	f851 2904 	ldr.w	r2, [r1], #-4
  40088e:	f843 2d04 	str.w	r2, [r3, #-4]!
		}
	} else if (pSrc < pDest) {
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
		for (;nb_bytes;nb_bytes -= 4) {
  400892:	4281      	cmp	r1, r0
  400894:	d1f9      	bne.n	40088a <Reset_Handler+0x46>

    No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
  400896:	bf00      	nop
		}
	}
	__NOP();

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  400898:	4b0f      	ldr	r3, [pc, #60]	; (4008d8 <Reset_Handler+0x94>)
  40089a:	4a10      	ldr	r2, [pc, #64]	; (4008dc <Reset_Handler+0x98>)
  40089c:	429a      	cmp	r2, r3
  40089e:	d20b      	bcs.n	4008b8 <Reset_Handler+0x74>
  4008a0:	1d13      	adds	r3, r2, #4
  4008a2:	4a0f      	ldr	r2, [pc, #60]	; (4008e0 <Reset_Handler+0x9c>)
  4008a4:	1ad2      	subs	r2, r2, r3
  4008a6:	f022 0203 	bic.w	r2, r2, #3
  4008aa:	441a      	add	r2, r3
  4008ac:	3b04      	subs	r3, #4
		*pDest++ = 0;
  4008ae:	2100      	movs	r1, #0
  4008b0:	f843 1b04 	str.w	r1, [r3], #4
		}
	}
	__NOP();

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  4008b4:	4293      	cmp	r3, r2
  4008b6:	d1fb      	bne.n	4008b0 <Reset_Handler+0x6c>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc);
  4008b8:	4b0a      	ldr	r3, [pc, #40]	; (4008e4 <Reset_Handler+0xa0>)
  4008ba:	4a0b      	ldr	r2, [pc, #44]	; (4008e8 <Reset_Handler+0xa4>)
  4008bc:	609a      	str	r2, [r3, #8]

	/* Initialize the C library */
	__libc_init_array();
  4008be:	4b0b      	ldr	r3, [pc, #44]	; (4008ec <Reset_Handler+0xa8>)
  4008c0:	4798      	blx	r3

	/* Branch to main function */
	main();
  4008c2:	4b0b      	ldr	r3, [pc, #44]	; (4008f0 <Reset_Handler+0xac>)
  4008c4:	4798      	blx	r3

	/* Infinite loop */
	while (1);
  4008c6:	e7fe      	b.n	4008c6 <Reset_Handler+0x82>
  4008c8:	20000000 	.word	0x20000000
  4008cc:	00404984 	.word	0x00404984
  4008d0:	2000086c 	.word	0x2000086c
  4008d4:	00404980 	.word	0x00404980
  4008d8:	20000948 	.word	0x20000948
  4008dc:	2000086c 	.word	0x2000086c
  4008e0:	2000094b 	.word	0x2000094b
  4008e4:	e000ed00 	.word	0xe000ed00
  4008e8:	00400000 	.word	0x00400000
  4008ec:	00401791 	.word	0x00401791
  4008f0:	00400d21 	.word	0x00400d21

004008f4 <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  4008f4:	4b3d      	ldr	r3, [pc, #244]	; (4009ec <SystemCoreClockUpdate+0xf8>)
  4008f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4008f8:	f003 0303 	and.w	r3, r3, #3
  4008fc:	2b03      	cmp	r3, #3
  4008fe:	d85d      	bhi.n	4009bc <SystemCoreClockUpdate+0xc8>
  400900:	e8df f003 	tbb	[pc, r3]
  400904:	2b2b0e02 	.word	0x2b2b0e02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  400908:	4b39      	ldr	r3, [pc, #228]	; (4009f0 <SystemCoreClockUpdate+0xfc>)
  40090a:	695b      	ldr	r3, [r3, #20]
  40090c:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  400910:	bf14      	ite	ne
  400912:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  400916:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  40091a:	4b36      	ldr	r3, [pc, #216]	; (4009f4 <SystemCoreClockUpdate+0x100>)
  40091c:	601a      	str	r2, [r3, #0]
  40091e:	e04d      	b.n	4009bc <SystemCoreClockUpdate+0xc8>
			}
		break;
		
	case PMC_MCKR_CSS_MAIN_CLK: /* Main clock */
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  400920:	4b32      	ldr	r3, [pc, #200]	; (4009ec <SystemCoreClockUpdate+0xf8>)
  400922:	6a1b      	ldr	r3, [r3, #32]
  400924:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400928:	d003      	beq.n	400932 <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL;
  40092a:	4a33      	ldr	r2, [pc, #204]	; (4009f8 <SystemCoreClockUpdate+0x104>)
  40092c:	4b31      	ldr	r3, [pc, #196]	; (4009f4 <SystemCoreClockUpdate+0x100>)
  40092e:	601a      	str	r2, [r3, #0]
  400930:	e044      	b.n	4009bc <SystemCoreClockUpdate+0xc8>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400932:	4a32      	ldr	r2, [pc, #200]	; (4009fc <SystemCoreClockUpdate+0x108>)
  400934:	4b2f      	ldr	r3, [pc, #188]	; (4009f4 <SystemCoreClockUpdate+0x100>)
  400936:	601a      	str	r2, [r3, #0]
			
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  400938:	4b2c      	ldr	r3, [pc, #176]	; (4009ec <SystemCoreClockUpdate+0xf8>)
  40093a:	6a1b      	ldr	r3, [r3, #32]
  40093c:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400940:	2b10      	cmp	r3, #16
  400942:	d002      	beq.n	40094a <SystemCoreClockUpdate+0x56>
  400944:	2b20      	cmp	r3, #32
  400946:	d004      	beq.n	400952 <SystemCoreClockUpdate+0x5e>
  400948:	e038      	b.n	4009bc <SystemCoreClockUpdate+0xc8>
			case CKGR_MOR_MOSCRCF_4_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
			break;
			
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  40094a:	4a2d      	ldr	r2, [pc, #180]	; (400a00 <SystemCoreClockUpdate+0x10c>)
  40094c:	4b29      	ldr	r3, [pc, #164]	; (4009f4 <SystemCoreClockUpdate+0x100>)
  40094e:	601a      	str	r2, [r3, #0]
			break;
  400950:	e034      	b.n	4009bc <SystemCoreClockUpdate+0xc8>
			
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  400952:	4a29      	ldr	r2, [pc, #164]	; (4009f8 <SystemCoreClockUpdate+0x104>)
  400954:	4b27      	ldr	r3, [pc, #156]	; (4009f4 <SystemCoreClockUpdate+0x100>)
  400956:	601a      	str	r2, [r3, #0]
			break;
  400958:	e030      	b.n	4009bc <SystemCoreClockUpdate+0xc8>
		}
		break;
		
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_PLLB_CLK:	/* PLLB clock */
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  40095a:	4b24      	ldr	r3, [pc, #144]	; (4009ec <SystemCoreClockUpdate+0xf8>)
  40095c:	6a1b      	ldr	r3, [r3, #32]
  40095e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400962:	d003      	beq.n	40096c <SystemCoreClockUpdate+0x78>
				SystemCoreClock = CHIP_FREQ_XTAL;
  400964:	4a24      	ldr	r2, [pc, #144]	; (4009f8 <SystemCoreClockUpdate+0x104>)
  400966:	4b23      	ldr	r3, [pc, #140]	; (4009f4 <SystemCoreClockUpdate+0x100>)
  400968:	601a      	str	r2, [r3, #0]
  40096a:	e012      	b.n	400992 <SystemCoreClockUpdate+0x9e>
			} else {
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40096c:	4a23      	ldr	r2, [pc, #140]	; (4009fc <SystemCoreClockUpdate+0x108>)
  40096e:	4b21      	ldr	r3, [pc, #132]	; (4009f4 <SystemCoreClockUpdate+0x100>)
  400970:	601a      	str	r2, [r3, #0]
				
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  400972:	4b1e      	ldr	r3, [pc, #120]	; (4009ec <SystemCoreClockUpdate+0xf8>)
  400974:	6a1b      	ldr	r3, [r3, #32]
  400976:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40097a:	2b10      	cmp	r3, #16
  40097c:	d002      	beq.n	400984 <SystemCoreClockUpdate+0x90>
  40097e:	2b20      	cmp	r3, #32
  400980:	d004      	beq.n	40098c <SystemCoreClockUpdate+0x98>
  400982:	e006      	b.n	400992 <SystemCoreClockUpdate+0x9e>
				case CKGR_MOR_MOSCRCF_4_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
					break;
				
				case CKGR_MOR_MOSCRCF_8_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  400984:	4a1e      	ldr	r2, [pc, #120]	; (400a00 <SystemCoreClockUpdate+0x10c>)
  400986:	4b1b      	ldr	r3, [pc, #108]	; (4009f4 <SystemCoreClockUpdate+0x100>)
  400988:	601a      	str	r2, [r3, #0]
					break;
  40098a:	e002      	b.n	400992 <SystemCoreClockUpdate+0x9e>
				
				case CKGR_MOR_MOSCRCF_12_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  40098c:	4a1a      	ldr	r2, [pc, #104]	; (4009f8 <SystemCoreClockUpdate+0x104>)
  40098e:	4b19      	ldr	r3, [pc, #100]	; (4009f4 <SystemCoreClockUpdate+0x100>)
  400990:	601a      	str	r2, [r3, #0]
				default:
					break;
				}
			}
			
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  400992:	4b16      	ldr	r3, [pc, #88]	; (4009ec <SystemCoreClockUpdate+0xf8>)
  400994:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400996:	f003 0303 	and.w	r3, r3, #3
  40099a:	2b02      	cmp	r3, #2
					PMC_MCKR_CSS_PLLA_CLK ) {
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  40099c:	4a13      	ldr	r2, [pc, #76]	; (4009ec <SystemCoreClockUpdate+0xf8>)
  40099e:	bf07      	ittee	eq
  4009a0:	6a93      	ldreq	r3, [r2, #40]	; 0x28
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  4009a2:	6a92      	ldreq	r2, [r2, #40]	; 0x28
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  4009a4:	6ad3      	ldrne	r3, [r2, #44]	; 0x2c
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  4009a6:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  4009a8:	4812      	ldr	r0, [pc, #72]	; (4009f4 <SystemCoreClockUpdate+0x100>)
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  4009aa:	f3c3 410a 	ubfx	r1, r3, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  4009ae:	6803      	ldr	r3, [r0, #0]
  4009b0:	fb01 3303 	mla	r3, r1, r3, r3
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
						>> CKGR_PLLBR_DIVB_Pos));
  4009b4:	b2d2      	uxtb	r2, r2
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  4009b6:	fbb3 f3f2 	udiv	r3, r3, r2
  4009ba:	6003      	str	r3, [r0, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  4009bc:	4b0b      	ldr	r3, [pc, #44]	; (4009ec <SystemCoreClockUpdate+0xf8>)
  4009be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4009c0:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4009c4:	2b70      	cmp	r3, #112	; 0x70
  4009c6:	d107      	bne.n	4009d8 <SystemCoreClockUpdate+0xe4>
		SystemCoreClock /= 3U;
  4009c8:	4a0a      	ldr	r2, [pc, #40]	; (4009f4 <SystemCoreClockUpdate+0x100>)
  4009ca:	6813      	ldr	r3, [r2, #0]
  4009cc:	490d      	ldr	r1, [pc, #52]	; (400a04 <SystemCoreClockUpdate+0x110>)
  4009ce:	fba1 1303 	umull	r1, r3, r1, r3
  4009d2:	085b      	lsrs	r3, r3, #1
  4009d4:	6013      	str	r3, [r2, #0]
  4009d6:	4770      	bx	lr
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4009d8:	4b04      	ldr	r3, [pc, #16]	; (4009ec <SystemCoreClockUpdate+0xf8>)
  4009da:	6b1a      	ldr	r2, [r3, #48]	; 0x30
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
  4009dc:	4905      	ldr	r1, [pc, #20]	; (4009f4 <SystemCoreClockUpdate+0x100>)
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4009de:	f3c2 1202 	ubfx	r2, r2, #4, #3
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
  4009e2:	680b      	ldr	r3, [r1, #0]
  4009e4:	40d3      	lsrs	r3, r2
  4009e6:	600b      	str	r3, [r1, #0]
  4009e8:	4770      	bx	lr
  4009ea:	bf00      	nop
  4009ec:	400e0400 	.word	0x400e0400
  4009f0:	400e1410 	.word	0x400e1410
  4009f4:	20000000 	.word	0x20000000
  4009f8:	00b71b00 	.word	0x00b71b00
  4009fc:	003d0900 	.word	0x003d0900
  400a00:	007a1200 	.word	0x007a1200
  400a04:	aaaaaaab 	.word	0xaaaaaaab

00400a08 <system_init_flash>:
				}
			}
		}
	}
#else
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  400a08:	4b1a      	ldr	r3, [pc, #104]	; (400a74 <system_init_flash+0x6c>)
  400a0a:	4298      	cmp	r0, r3
  400a0c:	d807      	bhi.n	400a1e <system_init_flash+0x16>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400a0e:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
  400a12:	4a19      	ldr	r2, [pc, #100]	; (400a78 <system_init_flash+0x70>)
  400a14:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400a16:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400a1a:	6013      	str	r3, [r2, #0]
  400a1c:	4770      	bx	lr
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  400a1e:	4b17      	ldr	r3, [pc, #92]	; (400a7c <system_init_flash+0x74>)
  400a20:	4298      	cmp	r0, r3
  400a22:	d806      	bhi.n	400a32 <system_init_flash+0x2a>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400a24:	4b16      	ldr	r3, [pc, #88]	; (400a80 <system_init_flash+0x78>)
  400a26:	4a14      	ldr	r2, [pc, #80]	; (400a78 <system_init_flash+0x70>)
  400a28:	6013      	str	r3, [r2, #0]
			EFC1->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400a2a:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400a2e:	6013      	str	r3, [r2, #0]
  400a30:	4770      	bx	lr
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  400a32:	4b14      	ldr	r3, [pc, #80]	; (400a84 <system_init_flash+0x7c>)
  400a34:	4298      	cmp	r0, r3
  400a36:	d806      	bhi.n	400a46 <system_init_flash+0x3e>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400a38:	4b13      	ldr	r3, [pc, #76]	; (400a88 <system_init_flash+0x80>)
  400a3a:	4a0f      	ldr	r2, [pc, #60]	; (400a78 <system_init_flash+0x70>)
  400a3c:	6013      	str	r3, [r2, #0]
				EFC1->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400a3e:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400a42:	6013      	str	r3, [r2, #0]
  400a44:	4770      	bx	lr
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  400a46:	4b11      	ldr	r3, [pc, #68]	; (400a8c <system_init_flash+0x84>)
  400a48:	4298      	cmp	r0, r3
  400a4a:	d806      	bhi.n	400a5a <system_init_flash+0x52>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400a4c:	4b10      	ldr	r3, [pc, #64]	; (400a90 <system_init_flash+0x88>)
  400a4e:	4a0a      	ldr	r2, [pc, #40]	; (400a78 <system_init_flash+0x70>)
  400a50:	6013      	str	r3, [r2, #0]
					EFC1->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400a52:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400a56:	6013      	str	r3, [r2, #0]
  400a58:	4770      	bx	lr
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  400a5a:	4b0e      	ldr	r3, [pc, #56]	; (400a94 <system_init_flash+0x8c>)
  400a5c:	4298      	cmp	r0, r3
						EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  400a5e:	bf94      	ite	ls
  400a60:	f04f 2304 	movls.w	r3, #67109888	; 0x4000400
						EFC1->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
					} else {
						EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400a64:	4b0c      	ldrhi	r3, [pc, #48]	; (400a98 <system_init_flash+0x90>)
  400a66:	4a04      	ldr	r2, [pc, #16]	; (400a78 <system_init_flash+0x70>)
  400a68:	6013      	str	r3, [r2, #0]
						EFC1->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400a6a:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400a6e:	6013      	str	r3, [r2, #0]
  400a70:	4770      	bx	lr
  400a72:	bf00      	nop
  400a74:	01312cff 	.word	0x01312cff
  400a78:	400e0a00 	.word	0x400e0a00
  400a7c:	026259ff 	.word	0x026259ff
  400a80:	04000100 	.word	0x04000100
  400a84:	039386ff 	.word	0x039386ff
  400a88:	04000200 	.word	0x04000200
  400a8c:	04c4b3ff 	.word	0x04c4b3ff
  400a90:	04000300 	.word	0x04000300
  400a94:	05f5e0ff 	.word	0x05f5e0ff
  400a98:	04000500 	.word	0x04000500

00400a9c <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400a9c:	4b09      	ldr	r3, [pc, #36]	; (400ac4 <_sbrk+0x28>)
  400a9e:	681b      	ldr	r3, [r3, #0]
  400aa0:	b913      	cbnz	r3, 400aa8 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
  400aa2:	4a09      	ldr	r2, [pc, #36]	; (400ac8 <_sbrk+0x2c>)
  400aa4:	4b07      	ldr	r3, [pc, #28]	; (400ac4 <_sbrk+0x28>)
  400aa6:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
  400aa8:	4b06      	ldr	r3, [pc, #24]	; (400ac4 <_sbrk+0x28>)
  400aaa:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400aac:	181a      	adds	r2, r3, r0
  400aae:	4907      	ldr	r1, [pc, #28]	; (400acc <_sbrk+0x30>)
  400ab0:	4291      	cmp	r1, r2
  400ab2:	db04      	blt.n	400abe <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
  400ab4:	4610      	mov	r0, r2
  400ab6:	4a03      	ldr	r2, [pc, #12]	; (400ac4 <_sbrk+0x28>)
  400ab8:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400aba:	4618      	mov	r0, r3
  400abc:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
  400abe:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
  400ac2:	4770      	bx	lr
  400ac4:	200008fc 	.word	0x200008fc
  400ac8:	20003948 	.word	0x20003948
  400acc:	20027ffc 	.word	0x20027ffc

00400ad0 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  400ad0:	f04f 30ff 	mov.w	r0, #4294967295
  400ad4:	4770      	bx	lr
  400ad6:	bf00      	nop

00400ad8 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  400ad8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400adc:	604b      	str	r3, [r1, #4]

	return 0;
}
  400ade:	2000      	movs	r0, #0
  400ae0:	4770      	bx	lr
  400ae2:	bf00      	nop

00400ae4 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  400ae4:	2001      	movs	r0, #1
  400ae6:	4770      	bx	lr

00400ae8 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  400ae8:	2000      	movs	r0, #0
  400aea:	4770      	bx	lr

00400aec <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  400aec:	b5f0      	push	{r4, r5, r6, r7, lr}
  400aee:	b083      	sub	sp, #12
  400af0:	4605      	mov	r5, r0
  400af2:	460c      	mov	r4, r1
	uint32_t val = 0;
  400af4:	2300      	movs	r3, #0
  400af6:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400af8:	4b18      	ldr	r3, [pc, #96]	; (400b5c <usart_serial_getchar+0x70>)
  400afa:	4298      	cmp	r0, r3
  400afc:	d107      	bne.n	400b0e <usart_serial_getchar+0x22>
		while (uart_read((Uart*)p_usart, data));
  400afe:	461f      	mov	r7, r3
  400b00:	4e17      	ldr	r6, [pc, #92]	; (400b60 <usart_serial_getchar+0x74>)
  400b02:	4638      	mov	r0, r7
  400b04:	4621      	mov	r1, r4
  400b06:	47b0      	blx	r6
  400b08:	2800      	cmp	r0, #0
  400b0a:	d1fa      	bne.n	400b02 <usart_serial_getchar+0x16>
  400b0c:	e017      	b.n	400b3e <usart_serial_getchar+0x52>
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  400b0e:	4b15      	ldr	r3, [pc, #84]	; (400b64 <usart_serial_getchar+0x78>)
  400b10:	4298      	cmp	r0, r3
  400b12:	d107      	bne.n	400b24 <usart_serial_getchar+0x38>
		while (uart_read((Uart*)p_usart, data));
  400b14:	461e      	mov	r6, r3
  400b16:	4d12      	ldr	r5, [pc, #72]	; (400b60 <usart_serial_getchar+0x74>)
  400b18:	4630      	mov	r0, r6
  400b1a:	4621      	mov	r1, r4
  400b1c:	47a8      	blx	r5
  400b1e:	2800      	cmp	r0, #0
  400b20:	d1fa      	bne.n	400b18 <usart_serial_getchar+0x2c>
  400b22:	e018      	b.n	400b56 <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400b24:	4b10      	ldr	r3, [pc, #64]	; (400b68 <usart_serial_getchar+0x7c>)
  400b26:	4298      	cmp	r0, r3
  400b28:	d109      	bne.n	400b3e <usart_serial_getchar+0x52>
		while (usart_read(p_usart, &val));
  400b2a:	461e      	mov	r6, r3
  400b2c:	4d0f      	ldr	r5, [pc, #60]	; (400b6c <usart_serial_getchar+0x80>)
  400b2e:	4630      	mov	r0, r6
  400b30:	a901      	add	r1, sp, #4
  400b32:	47a8      	blx	r5
  400b34:	2800      	cmp	r0, #0
  400b36:	d1fa      	bne.n	400b2e <usart_serial_getchar+0x42>
		*data = (uint8_t)(val & 0xFF);
  400b38:	9b01      	ldr	r3, [sp, #4]
  400b3a:	7023      	strb	r3, [r4, #0]
  400b3c:	e00b      	b.n	400b56 <usart_serial_getchar+0x6a>
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400b3e:	4b0c      	ldr	r3, [pc, #48]	; (400b70 <usart_serial_getchar+0x84>)
  400b40:	429d      	cmp	r5, r3
  400b42:	d108      	bne.n	400b56 <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
  400b44:	461e      	mov	r6, r3
  400b46:	4d09      	ldr	r5, [pc, #36]	; (400b6c <usart_serial_getchar+0x80>)
  400b48:	4630      	mov	r0, r6
  400b4a:	a901      	add	r1, sp, #4
  400b4c:	47a8      	blx	r5
  400b4e:	2800      	cmp	r0, #0
  400b50:	d1fa      	bne.n	400b48 <usart_serial_getchar+0x5c>
		*data = (uint8_t)(val & 0xFF);
  400b52:	9b01      	ldr	r3, [sp, #4]
  400b54:	7023      	strb	r3, [r4, #0]
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  400b56:	b003      	add	sp, #12
  400b58:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400b5a:	bf00      	nop
  400b5c:	400e0600 	.word	0x400e0600
  400b60:	00400801 	.word	0x00400801
  400b64:	400e0800 	.word	0x400e0800
  400b68:	40024000 	.word	0x40024000
  400b6c:	00400829 	.word	0x00400829
  400b70:	40028000 	.word	0x40028000

00400b74 <usart_serial_putchar>:
 *   \retval 1  The character was written.
 *   \retval 0  The function timed out before the USART transmitter became
 * ready to send.
 */
static inline int usart_serial_putchar(usart_if p_usart, const uint8_t c)
{
  400b74:	b570      	push	{r4, r5, r6, lr}
  400b76:	460c      	mov	r4, r1
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400b78:	4b18      	ldr	r3, [pc, #96]	; (400bdc <usart_serial_putchar+0x68>)
  400b7a:	4298      	cmp	r0, r3
  400b7c:	d108      	bne.n	400b90 <usart_serial_putchar+0x1c>
		while (uart_write((Uart*)p_usart, c)!=0);
  400b7e:	461e      	mov	r6, r3
  400b80:	4d17      	ldr	r5, [pc, #92]	; (400be0 <usart_serial_putchar+0x6c>)
  400b82:	4630      	mov	r0, r6
  400b84:	4621      	mov	r1, r4
  400b86:	47a8      	blx	r5
  400b88:	2800      	cmp	r0, #0
  400b8a:	d1fa      	bne.n	400b82 <usart_serial_putchar+0xe>
		return 1;
  400b8c:	2001      	movs	r0, #1
  400b8e:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  400b90:	4b14      	ldr	r3, [pc, #80]	; (400be4 <usart_serial_putchar+0x70>)
  400b92:	4298      	cmp	r0, r3
  400b94:	d108      	bne.n	400ba8 <usart_serial_putchar+0x34>
		while (uart_write((Uart*)p_usart, c)!=0);
  400b96:	461e      	mov	r6, r3
  400b98:	4d11      	ldr	r5, [pc, #68]	; (400be0 <usart_serial_putchar+0x6c>)
  400b9a:	4630      	mov	r0, r6
  400b9c:	4621      	mov	r1, r4
  400b9e:	47a8      	blx	r5
  400ba0:	2800      	cmp	r0, #0
  400ba2:	d1fa      	bne.n	400b9a <usart_serial_putchar+0x26>
		return 1;
  400ba4:	2001      	movs	r0, #1
  400ba6:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400ba8:	4b0f      	ldr	r3, [pc, #60]	; (400be8 <usart_serial_putchar+0x74>)
  400baa:	4298      	cmp	r0, r3
  400bac:	d108      	bne.n	400bc0 <usart_serial_putchar+0x4c>
		while (usart_write(p_usart, c)!=0);
  400bae:	461e      	mov	r6, r3
  400bb0:	4d0e      	ldr	r5, [pc, #56]	; (400bec <usart_serial_putchar+0x78>)
  400bb2:	4630      	mov	r0, r6
  400bb4:	4621      	mov	r1, r4
  400bb6:	47a8      	blx	r5
  400bb8:	2800      	cmp	r0, #0
  400bba:	d1fa      	bne.n	400bb2 <usart_serial_putchar+0x3e>
		return 1;
  400bbc:	2001      	movs	r0, #1
  400bbe:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400bc0:	4b0b      	ldr	r3, [pc, #44]	; (400bf0 <usart_serial_putchar+0x7c>)
  400bc2:	4298      	cmp	r0, r3
  400bc4:	d108      	bne.n	400bd8 <usart_serial_putchar+0x64>
		while (usart_write(p_usart, c)!=0);
  400bc6:	461e      	mov	r6, r3
  400bc8:	4d08      	ldr	r5, [pc, #32]	; (400bec <usart_serial_putchar+0x78>)
  400bca:	4630      	mov	r0, r6
  400bcc:	4621      	mov	r1, r4
  400bce:	47a8      	blx	r5
  400bd0:	2800      	cmp	r0, #0
  400bd2:	d1fa      	bne.n	400bca <usart_serial_putchar+0x56>
		return 1;
  400bd4:	2001      	movs	r0, #1
  400bd6:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
	}
# endif
#endif /* ifdef USART */

	return 0;
  400bd8:	2000      	movs	r0, #0
}
  400bda:	bd70      	pop	{r4, r5, r6, pc}
  400bdc:	400e0600 	.word	0x400e0600
  400be0:	004007f1 	.word	0x004007f1
  400be4:	400e0800 	.word	0x400e0800
  400be8:	40024000 	.word	0x40024000
  400bec:	00400815 	.word	0x00400815
  400bf0:	40028000 	.word	0x40028000

00400bf4 <config_uart>:
#define IRQ_PRIOR_PIO    0

/************************************************************************/
/* Configura UART                                                       */
/************************************************************************/
void config_uart(void){
  400bf4:	b530      	push	{r4, r5, lr}
  400bf6:	b085      	sub	sp, #20
	
	/* configura pinos */
	gpio_configure_group(PINS_UART0_PIO, PINS_UART0, PINS_UART0_FLAGS);
  400bf8:	4816      	ldr	r0, [pc, #88]	; (400c54 <config_uart+0x60>)
  400bfa:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  400bfe:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  400c02:	4b15      	ldr	r3, [pc, #84]	; (400c58 <config_uart+0x64>)
  400c04:	4798      	blx	r3
  400c06:	2008      	movs	r0, #8
  400c08:	4d14      	ldr	r5, [pc, #80]	; (400c5c <config_uart+0x68>)
  400c0a:	47a8      	blx	r5
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  400c0c:	4c14      	ldr	r4, [pc, #80]	; (400c60 <config_uart+0x6c>)
  400c0e:	4b15      	ldr	r3, [pc, #84]	; (400c64 <config_uart+0x70>)
  400c10:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  400c12:	4a15      	ldr	r2, [pc, #84]	; (400c68 <config_uart+0x74>)
  400c14:	4b15      	ldr	r3, [pc, #84]	; (400c6c <config_uart+0x78>)
  400c16:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  400c18:	4a15      	ldr	r2, [pc, #84]	; (400c70 <config_uart+0x7c>)
  400c1a:	4b16      	ldr	r3, [pc, #88]	; (400c74 <config_uart+0x80>)
  400c1c:	601a      	str	r2, [r3, #0]
static inline void usart_serial_init(usart_if p_usart,
		usart_serial_options_t *opt)
{
#if ((!SAM4L) && (!SAMG55))
	sam_uart_opt_t uart_settings;
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  400c1e:	4b16      	ldr	r3, [pc, #88]	; (400c78 <config_uart+0x84>)
  400c20:	9301      	str	r3, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
  400c22:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  400c26:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
  400c28:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400c2c:	9303      	str	r3, [sp, #12]
  400c2e:	2008      	movs	r0, #8
  400c30:	47a8      	blx	r5
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
		sysclk_enable_peripheral_clock(ID_UART0);
		/* Configure UART */
		uart_init((Uart*)p_usart, &uart_settings);
  400c32:	4620      	mov	r0, r4
  400c34:	a901      	add	r1, sp, #4
  400c36:	4b11      	ldr	r3, [pc, #68]	; (400c7c <config_uart+0x88>)
  400c38:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  400c3a:	4d11      	ldr	r5, [pc, #68]	; (400c80 <config_uart+0x8c>)
  400c3c:	682b      	ldr	r3, [r5, #0]
  400c3e:	6898      	ldr	r0, [r3, #8]
  400c40:	2100      	movs	r1, #0
  400c42:	4c10      	ldr	r4, [pc, #64]	; (400c84 <config_uart+0x90>)
  400c44:	47a0      	blx	r4
	setbuf(stdin, NULL);
  400c46:	682b      	ldr	r3, [r5, #0]
  400c48:	6858      	ldr	r0, [r3, #4]
  400c4a:	2100      	movs	r1, #0
  400c4c:	47a0      	blx	r4
		.paritytype = UART_MR_PAR_NO,
		.stopbits   = 0
	};
	
	stdio_serial_init((Usart *)CONF_UART, &uart_serial_options);
}
  400c4e:	b005      	add	sp, #20
  400c50:	bd30      	pop	{r4, r5, pc}
  400c52:	bf00      	nop
  400c54:	400e0e00 	.word	0x400e0e00
  400c58:	004004ad 	.word	0x004004ad
  400c5c:	00400719 	.word	0x00400719
  400c60:	400e0600 	.word	0x400e0600
  400c64:	2000093c 	.word	0x2000093c
  400c68:	00400b75 	.word	0x00400b75
  400c6c:	20000938 	.word	0x20000938
  400c70:	00400aed 	.word	0x00400aed
  400c74:	20000934 	.word	0x20000934
  400c78:	07270e00 	.word	0x07270e00
  400c7c:	004007b9 	.word	0x004007b9
  400c80:	20000430 	.word	0x20000430
  400c84:	00401911 	.word	0x00401911

00400c88 <TC0_Handler>:
	tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
	
	tc_start(TC0,0);
}
void TC0_Handler(void)
{
  400c88:	b500      	push	{lr}
  400c8a:	b083      	sub	sp, #12
	volatile uint32_t ul_dummy;

	/* Clear status bit to acknowledge interrupt */
	ul_dummy = tc_get_status(TC0,0);
  400c8c:	481d      	ldr	r0, [pc, #116]	; (400d04 <TC0_Handler+0x7c>)
  400c8e:	2100      	movs	r1, #0
  400c90:	4b1d      	ldr	r3, [pc, #116]	; (400d08 <TC0_Handler+0x80>)
  400c92:	4798      	blx	r3
  400c94:	9001      	str	r0, [sp, #4]

	/* Avoid compiler warning */
	UNUSED(ul_dummy);
  400c96:	9b01      	ldr	r3, [sp, #4]
	
	/** Muda o estado do LED */
	
	if(pio_get_output_data_status(PORT_LED_BLUE , MASK_LED_BLUE) == 0)
  400c98:	481c      	ldr	r0, [pc, #112]	; (400d0c <TC0_Handler+0x84>)
  400c9a:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  400c9e:	4b1c      	ldr	r3, [pc, #112]	; (400d10 <TC0_Handler+0x88>)
  400ca0:	4798      	blx	r3
  400ca2:	b928      	cbnz	r0, 400cb0 <TC0_Handler+0x28>
	{
		pio_set(PORT_LED_BLUE, (1 << PIN_LED_BLUE));
  400ca4:	4819      	ldr	r0, [pc, #100]	; (400d0c <TC0_Handler+0x84>)
  400ca6:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  400caa:	4b1a      	ldr	r3, [pc, #104]	; (400d14 <TC0_Handler+0x8c>)
  400cac:	4798      	blx	r3
  400cae:	e004      	b.n	400cba <TC0_Handler+0x32>
	}
	else
	{
		pio_clear(PORT_LED_BLUE, (1 << PIN_LED_BLUE));
  400cb0:	4816      	ldr	r0, [pc, #88]	; (400d0c <TC0_Handler+0x84>)
  400cb2:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  400cb6:	4b18      	ldr	r3, [pc, #96]	; (400d18 <TC0_Handler+0x90>)
  400cb8:	4798      	blx	r3
	}
	
	if(pio_get_output_data_status(PORT_LED_GREEN , MASK_LED_GREEN) == 0)
  400cba:	4814      	ldr	r0, [pc, #80]	; (400d0c <TC0_Handler+0x84>)
  400cbc:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  400cc0:	4b13      	ldr	r3, [pc, #76]	; (400d10 <TC0_Handler+0x88>)
  400cc2:	4798      	blx	r3
  400cc4:	b928      	cbnz	r0, 400cd2 <TC0_Handler+0x4a>
	{
		pio_set(PORT_LED_GREEN, (1 << PIN_LED_GREEN));
  400cc6:	4811      	ldr	r0, [pc, #68]	; (400d0c <TC0_Handler+0x84>)
  400cc8:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  400ccc:	4b11      	ldr	r3, [pc, #68]	; (400d14 <TC0_Handler+0x8c>)
  400cce:	4798      	blx	r3
  400cd0:	e004      	b.n	400cdc <TC0_Handler+0x54>
	}
	else
	{
		pio_clear(PORT_LED_GREEN, (1 << PIN_LED_GREEN));
  400cd2:	480e      	ldr	r0, [pc, #56]	; (400d0c <TC0_Handler+0x84>)
  400cd4:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  400cd8:	4b0f      	ldr	r3, [pc, #60]	; (400d18 <TC0_Handler+0x90>)
  400cda:	4798      	blx	r3
	}
	
	
	if(pio_get_output_data_status(PORT_LED_RED , MASK_LED_RED) == 0)
  400cdc:	480f      	ldr	r0, [pc, #60]	; (400d1c <TC0_Handler+0x94>)
  400cde:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  400ce2:	4b0b      	ldr	r3, [pc, #44]	; (400d10 <TC0_Handler+0x88>)
  400ce4:	4798      	blx	r3
  400ce6:	b928      	cbnz	r0, 400cf4 <TC0_Handler+0x6c>
	{
		pio_set(PORT_LED_RED, (1 << PIN_LED_RED));
  400ce8:	480c      	ldr	r0, [pc, #48]	; (400d1c <TC0_Handler+0x94>)
  400cea:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  400cee:	4b09      	ldr	r3, [pc, #36]	; (400d14 <TC0_Handler+0x8c>)
  400cf0:	4798      	blx	r3
  400cf2:	e004      	b.n	400cfe <TC0_Handler+0x76>
	}
	else
	{
		pio_clear(PORT_LED_RED, (1 << PIN_LED_RED));
  400cf4:	4809      	ldr	r0, [pc, #36]	; (400d1c <TC0_Handler+0x94>)
  400cf6:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  400cfa:	4b07      	ldr	r3, [pc, #28]	; (400d18 <TC0_Handler+0x90>)
  400cfc:	4798      	blx	r3
	}
	
}
  400cfe:	b003      	add	sp, #12
  400d00:	f85d fb04 	ldr.w	pc, [sp], #4
  400d04:	40010000 	.word	0x40010000
  400d08:	004007b1 	.word	0x004007b1
  400d0c:	400e0e00 	.word	0x400e0e00
  400d10:	00400375 	.word	0x00400375
  400d14:	0040027d 	.word	0x0040027d
  400d18:	00400281 	.word	0x00400281
  400d1c:	400e1200 	.word	0x400e1200

00400d20 <main>:

/************************************************************************/
/* Main                                                                 */
/************************************************************************/
int main(void)
{
  400d20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400d24:	b085      	sub	sp, #20
	uint8_t uc_key;

	/* Initialize the system */
	sysclk_init();
  400d26:	4b80      	ldr	r3, [pc, #512]	; (400f28 <main+0x208>)
  400d28:	4798      	blx	r3
	board_init();
  400d2a:	4b80      	ldr	r3, [pc, #512]	; (400f2c <main+0x20c>)
  400d2c:	4798      	blx	r3

	/* Configure LED 1 */
	pmc_enable_periph_clk(ID_LED_BLUE);
  400d2e:	200b      	movs	r0, #11
  400d30:	4d7f      	ldr	r5, [pc, #508]	; (400f30 <main+0x210>)
  400d32:	47a8      	blx	r5
	pio_set_output(PORT_LED_BLUE  , MASK_LED_BLUE	,1,0,0);
  400d34:	4e7f      	ldr	r6, [pc, #508]	; (400f34 <main+0x214>)
  400d36:	2400      	movs	r4, #0
  400d38:	9400      	str	r4, [sp, #0]
  400d3a:	4630      	mov	r0, r6
  400d3c:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  400d40:	2201      	movs	r2, #1
  400d42:	4623      	mov	r3, r4
  400d44:	4f7c      	ldr	r7, [pc, #496]	; (400f38 <main+0x218>)
  400d46:	47b8      	blx	r7

	/* Initialize debug console */
	config_uart();
  400d48:	4b7c      	ldr	r3, [pc, #496]	; (400f3c <main+0x21c>)
  400d4a:	4798      	blx	r3
	
	/* frase de boas vindas */
	puts(" ---------------------------- \n\r"
  400d4c:	487c      	ldr	r0, [pc, #496]	; (400f40 <main+0x220>)
  400d4e:	4f7d      	ldr	r7, [pc, #500]	; (400f44 <main+0x224>)
  400d50:	47b8      	blx	r7
/************************************************************************/
/* Display Menu                                                         */
/************************************************************************/
static void display_menu(void)
{
	puts(" 1 : exibe novamente esse menu \n\r"
  400d52:	487d      	ldr	r0, [pc, #500]	; (400f48 <main+0x228>)
  400d54:	47b8      	blx	r7
}
static void configure_tc(void)
{
	uint32_t ul_sysclk = sysclk_get_cpu_hz();

	pmc_enable_periph_clk(ID_TC0);
  400d56:	2017      	movs	r0, #23
  400d58:	47a8      	blx	r5

	tc_init(TC0, 0, TC_CMR_CPCTRG | TC_CMR_TCCLKS_TIMER_CLOCK5);
  400d5a:	4f7c      	ldr	r7, [pc, #496]	; (400f4c <main+0x22c>)
  400d5c:	4638      	mov	r0, r7
  400d5e:	4621      	mov	r1, r4
  400d60:	f244 0204 	movw	r2, #16388	; 0x4004
  400d64:	4b7a      	ldr	r3, [pc, #488]	; (400f50 <main+0x230>)
  400d66:	4798      	blx	r3
	

	tc_write_rc(TC0, 0, 8192);
  400d68:	4638      	mov	r0, r7
  400d6a:	4621      	mov	r1, r4
  400d6c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  400d70:	4b78      	ldr	r3, [pc, #480]	; (400f54 <main+0x234>)
  400d72:	4798      	blx	r3
    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  400d74:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  400d78:	4b77      	ldr	r3, [pc, #476]	; (400f58 <main+0x238>)
  400d7a:	601a      	str	r2, [r3, #0]

	NVIC_EnableIRQ(ID_TC0);
	
	tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
  400d7c:	4638      	mov	r0, r7
  400d7e:	4621      	mov	r1, r4
  400d80:	2210      	movs	r2, #16
  400d82:	4b76      	ldr	r3, [pc, #472]	; (400f5c <main+0x23c>)
  400d84:	4798      	blx	r3
	
	tc_start(TC0,0);
  400d86:	4638      	mov	r0, r7
  400d88:	4621      	mov	r1, r4
  400d8a:	4b75      	ldr	r3, [pc, #468]	; (400f60 <main+0x240>)
  400d8c:	4798      	blx	r3
		 " ---------------------------- \n\r");
		 
	/* display main menu */
	display_menu();
	configure_tc();
	TC0_Handler();
  400d8e:	4b75      	ldr	r3, [pc, #468]	; (400f64 <main+0x244>)
  400d90:	4798      	blx	r3
	
	pio_clear(PORT_LED_RED, MASK_LED_RED);
  400d92:	4d75      	ldr	r5, [pc, #468]	; (400f68 <main+0x248>)
  400d94:	4628      	mov	r0, r5
  400d96:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  400d9a:	4b74      	ldr	r3, [pc, #464]	; (400f6c <main+0x24c>)
  400d9c:	4798      	blx	r3
	pio_set(PORT_LED_GREEN, MASK_LED_GREEN);
  400d9e:	4630      	mov	r0, r6
  400da0:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  400da4:	4b72      	ldr	r3, [pc, #456]	; (400f70 <main+0x250>)
  400da6:	4798      	blx	r3
	
	PIOA->PIO_PER = (1 << PIN_LED_BLUE );
  400da8:	f44f 2800 	mov.w	r8, #524288	; 0x80000
  400dac:	f8c6 8000 	str.w	r8, [r6]
	PIOA->PIO_OER |=  (1 << PIN_LED_BLUE );
  400db0:	6933      	ldr	r3, [r6, #16]
  400db2:	ea43 0308 	orr.w	r3, r3, r8
  400db6:	6133      	str	r3, [r6, #16]
	
	
	PMC->PMC_PCER0 |= ID_PIOC;
  400db8:	4a6e      	ldr	r2, [pc, #440]	; (400f74 <main+0x254>)
  400dba:	6913      	ldr	r3, [r2, #16]
  400dbc:	f043 030d 	orr.w	r3, r3, #13
  400dc0:	6113      	str	r3, [r2, #16]
	PIOC->PIO_PER |= (1 << PIN_LED_RED );
  400dc2:	682b      	ldr	r3, [r5, #0]
  400dc4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  400dc8:	602b      	str	r3, [r5, #0]
	PIOC->PIO_OER |=  (1 << PIN_LED_RED );
  400dca:	692b      	ldr	r3, [r5, #16]
  400dcc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  400dd0:	612b      	str	r3, [r5, #16]
	
	
	tc_stop(TC0, 0);
  400dd2:	4638      	mov	r0, r7
  400dd4:	4621      	mov	r1, r4
  400dd6:	4b68      	ldr	r3, [pc, #416]	; (400f78 <main+0x258>)
  400dd8:	4798      	blx	r3
	PIOA->PIO_SODR = (1 << PIN_LED_BLUE );
  400dda:	f8c6 8030 	str.w	r8, [r6, #48]	; 0x30
	PIOC->PIO_CODR = (1 << PIN_LED_RED );
  400dde:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
  400de2:	636b      	str	r3, [r5, #52]	; 0x34
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
  400de4:	f5a5 6540 	sub.w	r5, r5, #3072	; 0xc00
				tc_write_rc(TC0, 0, tc_read_rc(TC0,0) * 0.5);
				puts("aumentando \n\r");
				break;
			case '9' :
				
				tc_write_rc(TC0, 0, tc_read_rc(TC0,0) * 1.4);
  400de8:	f20f 1934 	addw	r9, pc, #308	; 0x134
  400dec:	e9d9 8900 	ldrd	r8, r9, [r9]
				
				puts("Led RED ON \n\r");
			break;
			case '7' :
				tc_stop(TC0, 0);
				PIOC->PIO_CODR = (1 << PIN_LED_RED );
  400df0:	f8df b174 	ldr.w	fp, [pc, #372]	; 400f68 <main+0x248>
				puts("Led GREEN ON \n\r");
				break;
			case '5' :
				tc_stop(TC0, 0);

				pio_set(PORT_LED_GREEN, MASK_LED_GREEN);
  400df4:	46b2      	mov	sl, r6
  400df6:	4c61      	ldr	r4, [pc, #388]	; (400f7c <main+0x25c>)
  400df8:	4628      	mov	r0, r5
  400dfa:	f10d 010f 	add.w	r1, sp, #15
  400dfe:	47a0      	blx	r4
  400e00:	2800      	cmp	r0, #0
  400e02:	d1f9      	bne.n	400df8 <main+0xd8>
	PIOA->PIO_SODR = (1 << PIN_LED_BLUE );
	PIOC->PIO_CODR = (1 << PIN_LED_RED );
	
	while (1) {
		usart_serial_getchar((Usart *)CONSOLE_UART, &uc_key);	
		switch (uc_key) {
  400e04:	f89d 100f 	ldrb.w	r1, [sp, #15]
  400e08:	f1a1 0331 	sub.w	r3, r1, #49	; 0x31
  400e0c:	2b08      	cmp	r3, #8
  400e0e:	f200 8081 	bhi.w	400f14 <main+0x1f4>
  400e12:	e8df f003 	tbb	[pc, r3]
  400e16:	0905      	.short	0x0905
  400e18:	3b2e2115 	.word	0x3b2e2115
  400e1c:	5347      	.short	0x5347
  400e1e:	69          	.byte	0x69
  400e1f:	00          	.byte	0x00
/************************************************************************/
/* Display Menu                                                         */
/************************************************************************/
static void display_menu(void)
{
	puts(" 1 : exibe novamente esse menu \n\r"
  400e20:	4849      	ldr	r0, [pc, #292]	; (400f48 <main+0x228>)
  400e22:	4b48      	ldr	r3, [pc, #288]	; (400f44 <main+0x224>)
  400e24:	4798      	blx	r3
  400e26:	e7e6      	b.n	400df6 <main+0xd6>
		switch (uc_key) {
			case '1':
				display_menu();
				break;
			case '2':
				tc_start(TC0,0);
  400e28:	4848      	ldr	r0, [pc, #288]	; (400f4c <main+0x22c>)
  400e2a:	2100      	movs	r1, #0
  400e2c:	4b4c      	ldr	r3, [pc, #304]	; (400f60 <main+0x240>)
  400e2e:	4798      	blx	r3
				PIOA->PIO_CODR = (1 << PIN_LED_BLUE );
  400e30:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  400e34:	f8ca 3034 	str.w	r3, [sl, #52]	; 0x34
				
				puts("Led BLUE ON \n\r");
  400e38:	4851      	ldr	r0, [pc, #324]	; (400f80 <main+0x260>)
  400e3a:	4b42      	ldr	r3, [pc, #264]	; (400f44 <main+0x224>)
  400e3c:	4798      	blx	r3
				break;
  400e3e:	e7da      	b.n	400df6 <main+0xd6>
			case '3' :
				tc_stop(TC0, 0);
  400e40:	4842      	ldr	r0, [pc, #264]	; (400f4c <main+0x22c>)
  400e42:	2100      	movs	r1, #0
  400e44:	4b4c      	ldr	r3, [pc, #304]	; (400f78 <main+0x258>)
  400e46:	4798      	blx	r3
				PIOA->PIO_SODR = (1 << PIN_LED_BLUE );
  400e48:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  400e4c:	f8ca 3030 	str.w	r3, [sl, #48]	; 0x30
				puts("Led BLUE OFF \n\r");
  400e50:	484c      	ldr	r0, [pc, #304]	; (400f84 <main+0x264>)
  400e52:	4b3c      	ldr	r3, [pc, #240]	; (400f44 <main+0x224>)
  400e54:	4798      	blx	r3
			
				break;
  400e56:	e7ce      	b.n	400df6 <main+0xd6>
			case '4':
				tc_start(TC0,0);
  400e58:	483c      	ldr	r0, [pc, #240]	; (400f4c <main+0x22c>)
  400e5a:	2100      	movs	r1, #0
  400e5c:	4b40      	ldr	r3, [pc, #256]	; (400f60 <main+0x240>)
  400e5e:	4798      	blx	r3
				pio_clear(PORT_LED_GREEN, MASK_LED_GREEN);
  400e60:	4650      	mov	r0, sl
  400e62:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  400e66:	4b41      	ldr	r3, [pc, #260]	; (400f6c <main+0x24c>)
  400e68:	4798      	blx	r3
				puts("Led GREEN ON \n\r");
  400e6a:	4847      	ldr	r0, [pc, #284]	; (400f88 <main+0x268>)
  400e6c:	4b35      	ldr	r3, [pc, #212]	; (400f44 <main+0x224>)
  400e6e:	4798      	blx	r3
				break;
  400e70:	e7c1      	b.n	400df6 <main+0xd6>
			case '5' :
				tc_stop(TC0, 0);
  400e72:	4836      	ldr	r0, [pc, #216]	; (400f4c <main+0x22c>)
  400e74:	2100      	movs	r1, #0
  400e76:	4b40      	ldr	r3, [pc, #256]	; (400f78 <main+0x258>)
  400e78:	4798      	blx	r3

				pio_set(PORT_LED_GREEN, MASK_LED_GREEN);
  400e7a:	4650      	mov	r0, sl
  400e7c:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  400e80:	4b3b      	ldr	r3, [pc, #236]	; (400f70 <main+0x250>)
  400e82:	4798      	blx	r3
				puts("Led GREEN OFF \n\r");
  400e84:	4841      	ldr	r0, [pc, #260]	; (400f8c <main+0x26c>)
  400e86:	4b2f      	ldr	r3, [pc, #188]	; (400f44 <main+0x224>)
  400e88:	4798      	blx	r3
				break;
  400e8a:	e7b4      	b.n	400df6 <main+0xd6>
			case '6':
					tc_start(TC0,0);
  400e8c:	482f      	ldr	r0, [pc, #188]	; (400f4c <main+0x22c>)
  400e8e:	2100      	movs	r1, #0
  400e90:	4b33      	ldr	r3, [pc, #204]	; (400f60 <main+0x240>)
  400e92:	4798      	blx	r3
					PIOC->PIO_SODR = (1 << PIN_LED_RED );
  400e94:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
  400e98:	f8cb 3030 	str.w	r3, [fp, #48]	; 0x30
				
				puts("Led RED ON \n\r");
  400e9c:	483c      	ldr	r0, [pc, #240]	; (400f90 <main+0x270>)
  400e9e:	4b29      	ldr	r3, [pc, #164]	; (400f44 <main+0x224>)
  400ea0:	4798      	blx	r3
			break;
  400ea2:	e7a8      	b.n	400df6 <main+0xd6>
			case '7' :
				tc_stop(TC0, 0);
  400ea4:	4829      	ldr	r0, [pc, #164]	; (400f4c <main+0x22c>)
  400ea6:	2100      	movs	r1, #0
  400ea8:	4b33      	ldr	r3, [pc, #204]	; (400f78 <main+0x258>)
  400eaa:	4798      	blx	r3
				PIOC->PIO_CODR = (1 << PIN_LED_RED );
  400eac:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
  400eb0:	f8cb 3034 	str.w	r3, [fp, #52]	; 0x34
				puts("Led RED OFF \n\r");
  400eb4:	4837      	ldr	r0, [pc, #220]	; (400f94 <main+0x274>)
  400eb6:	4b23      	ldr	r3, [pc, #140]	; (400f44 <main+0x224>)
  400eb8:	4798      	blx	r3
			break;
  400eba:	e79c      	b.n	400df6 <main+0xd6>
			case '8' :
				
				tc_write_rc(TC0, 0, tc_read_rc(TC0,0) * 0.5);
  400ebc:	4c23      	ldr	r4, [pc, #140]	; (400f4c <main+0x22c>)
  400ebe:	4620      	mov	r0, r4
  400ec0:	2100      	movs	r1, #0
  400ec2:	4b35      	ldr	r3, [pc, #212]	; (400f98 <main+0x278>)
  400ec4:	4798      	blx	r3
  400ec6:	4b35      	ldr	r3, [pc, #212]	; (400f9c <main+0x27c>)
  400ec8:	4798      	blx	r3
  400eca:	2200      	movs	r2, #0
  400ecc:	4b34      	ldr	r3, [pc, #208]	; (400fa0 <main+0x280>)
  400ece:	4e35      	ldr	r6, [pc, #212]	; (400fa4 <main+0x284>)
  400ed0:	47b0      	blx	r6
  400ed2:	4b35      	ldr	r3, [pc, #212]	; (400fa8 <main+0x288>)
  400ed4:	4798      	blx	r3
  400ed6:	4602      	mov	r2, r0
  400ed8:	4620      	mov	r0, r4
  400eda:	2100      	movs	r1, #0
  400edc:	4b1d      	ldr	r3, [pc, #116]	; (400f54 <main+0x234>)
  400ede:	4798      	blx	r3
				puts("aumentando \n\r");
  400ee0:	4832      	ldr	r0, [pc, #200]	; (400fac <main+0x28c>)
  400ee2:	4b18      	ldr	r3, [pc, #96]	; (400f44 <main+0x224>)
  400ee4:	4798      	blx	r3
				break;
  400ee6:	e786      	b.n	400df6 <main+0xd6>
			case '9' :
				
				tc_write_rc(TC0, 0, tc_read_rc(TC0,0) * 1.4);
  400ee8:	4c18      	ldr	r4, [pc, #96]	; (400f4c <main+0x22c>)
  400eea:	4620      	mov	r0, r4
  400eec:	2100      	movs	r1, #0
  400eee:	4b2a      	ldr	r3, [pc, #168]	; (400f98 <main+0x278>)
  400ef0:	4798      	blx	r3
  400ef2:	4b2a      	ldr	r3, [pc, #168]	; (400f9c <main+0x27c>)
  400ef4:	4798      	blx	r3
  400ef6:	4642      	mov	r2, r8
  400ef8:	464b      	mov	r3, r9
  400efa:	4e2a      	ldr	r6, [pc, #168]	; (400fa4 <main+0x284>)
  400efc:	47b0      	blx	r6
  400efe:	4b2a      	ldr	r3, [pc, #168]	; (400fa8 <main+0x288>)
  400f00:	4798      	blx	r3
  400f02:	4602      	mov	r2, r0
  400f04:	4620      	mov	r0, r4
  400f06:	2100      	movs	r1, #0
  400f08:	4b12      	ldr	r3, [pc, #72]	; (400f54 <main+0x234>)
  400f0a:	4798      	blx	r3
				puts("diminuindo \n\r");
  400f0c:	4828      	ldr	r0, [pc, #160]	; (400fb0 <main+0x290>)
  400f0e:	4b0d      	ldr	r3, [pc, #52]	; (400f44 <main+0x224>)
  400f10:	4798      	blx	r3
				break;				
  400f12:	e770      	b.n	400df6 <main+0xd6>
			default:
				printf("Opcao nao definida: %d \n\r", uc_key);
  400f14:	4827      	ldr	r0, [pc, #156]	; (400fb4 <main+0x294>)
  400f16:	4b28      	ldr	r3, [pc, #160]	; (400fb8 <main+0x298>)
  400f18:	4798      	blx	r3
  400f1a:	e76c      	b.n	400df6 <main+0xd6>
  400f1c:	f3af 8000 	nop.w
  400f20:	66666666 	.word	0x66666666
  400f24:	3ff66666 	.word	0x3ff66666
  400f28:	00400129 	.word	0x00400129
  400f2c:	00400219 	.word	0x00400219
  400f30:	00400719 	.word	0x00400719
  400f34:	400e0e00 	.word	0x400e0e00
  400f38:	0040034d 	.word	0x0040034d
  400f3c:	00400bf5 	.word	0x00400bf5
  400f40:	004047b8 	.word	0x004047b8
  400f44:	00401901 	.word	0x00401901
  400f48:	00404810 	.word	0x00404810
  400f4c:	40010000 	.word	0x40010000
  400f50:	0040076d 	.word	0x0040076d
  400f54:	004007a1 	.word	0x004007a1
  400f58:	e000e100 	.word	0xe000e100
  400f5c:	004007a9 	.word	0x004007a9
  400f60:	00400789 	.word	0x00400789
  400f64:	00400c89 	.word	0x00400c89
  400f68:	400e1200 	.word	0x400e1200
  400f6c:	00400281 	.word	0x00400281
  400f70:	0040027d 	.word	0x0040027d
  400f74:	400e0400 	.word	0x400e0400
  400f78:	00400791 	.word	0x00400791
  400f7c:	00400801 	.word	0x00400801
  400f80:	0040485c 	.word	0x0040485c
  400f84:	0040486c 	.word	0x0040486c
  400f88:	0040487c 	.word	0x0040487c
  400f8c:	0040488c 	.word	0x0040488c
  400f90:	004048a0 	.word	0x004048a0
  400f94:	004048b0 	.word	0x004048b0
  400f98:	00400799 	.word	0x00400799
  400f9c:	00401241 	.word	0x00401241
  400fa0:	3fe00000 	.word	0x3fe00000
  400fa4:	0040132d 	.word	0x0040132d
  400fa8:	00401751 	.word	0x00401751
  400fac:	004048c0 	.word	0x004048c0
  400fb0:	004048d0 	.word	0x004048d0
  400fb4:	004048e0 	.word	0x004048e0
  400fb8:	004017e1 	.word	0x004017e1

00400fbc <__aeabi_drsub>:
  400fbc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  400fc0:	e002      	b.n	400fc8 <__adddf3>
  400fc2:	bf00      	nop

00400fc4 <__aeabi_dsub>:
  400fc4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00400fc8 <__adddf3>:
  400fc8:	b530      	push	{r4, r5, lr}
  400fca:	ea4f 0441 	mov.w	r4, r1, lsl #1
  400fce:	ea4f 0543 	mov.w	r5, r3, lsl #1
  400fd2:	ea94 0f05 	teq	r4, r5
  400fd6:	bf08      	it	eq
  400fd8:	ea90 0f02 	teqeq	r0, r2
  400fdc:	bf1f      	itttt	ne
  400fde:	ea54 0c00 	orrsne.w	ip, r4, r0
  400fe2:	ea55 0c02 	orrsne.w	ip, r5, r2
  400fe6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  400fea:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  400fee:	f000 80e2 	beq.w	4011b6 <__adddf3+0x1ee>
  400ff2:	ea4f 5454 	mov.w	r4, r4, lsr #21
  400ff6:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  400ffa:	bfb8      	it	lt
  400ffc:	426d      	neglt	r5, r5
  400ffe:	dd0c      	ble.n	40101a <__adddf3+0x52>
  401000:	442c      	add	r4, r5
  401002:	ea80 0202 	eor.w	r2, r0, r2
  401006:	ea81 0303 	eor.w	r3, r1, r3
  40100a:	ea82 0000 	eor.w	r0, r2, r0
  40100e:	ea83 0101 	eor.w	r1, r3, r1
  401012:	ea80 0202 	eor.w	r2, r0, r2
  401016:	ea81 0303 	eor.w	r3, r1, r3
  40101a:	2d36      	cmp	r5, #54	; 0x36
  40101c:	bf88      	it	hi
  40101e:	bd30      	pophi	{r4, r5, pc}
  401020:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  401024:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401028:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  40102c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  401030:	d002      	beq.n	401038 <__adddf3+0x70>
  401032:	4240      	negs	r0, r0
  401034:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401038:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  40103c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401040:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  401044:	d002      	beq.n	40104c <__adddf3+0x84>
  401046:	4252      	negs	r2, r2
  401048:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  40104c:	ea94 0f05 	teq	r4, r5
  401050:	f000 80a7 	beq.w	4011a2 <__adddf3+0x1da>
  401054:	f1a4 0401 	sub.w	r4, r4, #1
  401058:	f1d5 0e20 	rsbs	lr, r5, #32
  40105c:	db0d      	blt.n	40107a <__adddf3+0xb2>
  40105e:	fa02 fc0e 	lsl.w	ip, r2, lr
  401062:	fa22 f205 	lsr.w	r2, r2, r5
  401066:	1880      	adds	r0, r0, r2
  401068:	f141 0100 	adc.w	r1, r1, #0
  40106c:	fa03 f20e 	lsl.w	r2, r3, lr
  401070:	1880      	adds	r0, r0, r2
  401072:	fa43 f305 	asr.w	r3, r3, r5
  401076:	4159      	adcs	r1, r3
  401078:	e00e      	b.n	401098 <__adddf3+0xd0>
  40107a:	f1a5 0520 	sub.w	r5, r5, #32
  40107e:	f10e 0e20 	add.w	lr, lr, #32
  401082:	2a01      	cmp	r2, #1
  401084:	fa03 fc0e 	lsl.w	ip, r3, lr
  401088:	bf28      	it	cs
  40108a:	f04c 0c02 	orrcs.w	ip, ip, #2
  40108e:	fa43 f305 	asr.w	r3, r3, r5
  401092:	18c0      	adds	r0, r0, r3
  401094:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  401098:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  40109c:	d507      	bpl.n	4010ae <__adddf3+0xe6>
  40109e:	f04f 0e00 	mov.w	lr, #0
  4010a2:	f1dc 0c00 	rsbs	ip, ip, #0
  4010a6:	eb7e 0000 	sbcs.w	r0, lr, r0
  4010aa:	eb6e 0101 	sbc.w	r1, lr, r1
  4010ae:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  4010b2:	d31b      	bcc.n	4010ec <__adddf3+0x124>
  4010b4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  4010b8:	d30c      	bcc.n	4010d4 <__adddf3+0x10c>
  4010ba:	0849      	lsrs	r1, r1, #1
  4010bc:	ea5f 0030 	movs.w	r0, r0, rrx
  4010c0:	ea4f 0c3c 	mov.w	ip, ip, rrx
  4010c4:	f104 0401 	add.w	r4, r4, #1
  4010c8:	ea4f 5244 	mov.w	r2, r4, lsl #21
  4010cc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  4010d0:	f080 809a 	bcs.w	401208 <__adddf3+0x240>
  4010d4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4010d8:	bf08      	it	eq
  4010da:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4010de:	f150 0000 	adcs.w	r0, r0, #0
  4010e2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4010e6:	ea41 0105 	orr.w	r1, r1, r5
  4010ea:	bd30      	pop	{r4, r5, pc}
  4010ec:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  4010f0:	4140      	adcs	r0, r0
  4010f2:	eb41 0101 	adc.w	r1, r1, r1
  4010f6:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4010fa:	f1a4 0401 	sub.w	r4, r4, #1
  4010fe:	d1e9      	bne.n	4010d4 <__adddf3+0x10c>
  401100:	f091 0f00 	teq	r1, #0
  401104:	bf04      	itt	eq
  401106:	4601      	moveq	r1, r0
  401108:	2000      	moveq	r0, #0
  40110a:	fab1 f381 	clz	r3, r1
  40110e:	bf08      	it	eq
  401110:	3320      	addeq	r3, #32
  401112:	f1a3 030b 	sub.w	r3, r3, #11
  401116:	f1b3 0220 	subs.w	r2, r3, #32
  40111a:	da0c      	bge.n	401136 <__adddf3+0x16e>
  40111c:	320c      	adds	r2, #12
  40111e:	dd08      	ble.n	401132 <__adddf3+0x16a>
  401120:	f102 0c14 	add.w	ip, r2, #20
  401124:	f1c2 020c 	rsb	r2, r2, #12
  401128:	fa01 f00c 	lsl.w	r0, r1, ip
  40112c:	fa21 f102 	lsr.w	r1, r1, r2
  401130:	e00c      	b.n	40114c <__adddf3+0x184>
  401132:	f102 0214 	add.w	r2, r2, #20
  401136:	bfd8      	it	le
  401138:	f1c2 0c20 	rsble	ip, r2, #32
  40113c:	fa01 f102 	lsl.w	r1, r1, r2
  401140:	fa20 fc0c 	lsr.w	ip, r0, ip
  401144:	bfdc      	itt	le
  401146:	ea41 010c 	orrle.w	r1, r1, ip
  40114a:	4090      	lslle	r0, r2
  40114c:	1ae4      	subs	r4, r4, r3
  40114e:	bfa2      	ittt	ge
  401150:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401154:	4329      	orrge	r1, r5
  401156:	bd30      	popge	{r4, r5, pc}
  401158:	ea6f 0404 	mvn.w	r4, r4
  40115c:	3c1f      	subs	r4, #31
  40115e:	da1c      	bge.n	40119a <__adddf3+0x1d2>
  401160:	340c      	adds	r4, #12
  401162:	dc0e      	bgt.n	401182 <__adddf3+0x1ba>
  401164:	f104 0414 	add.w	r4, r4, #20
  401168:	f1c4 0220 	rsb	r2, r4, #32
  40116c:	fa20 f004 	lsr.w	r0, r0, r4
  401170:	fa01 f302 	lsl.w	r3, r1, r2
  401174:	ea40 0003 	orr.w	r0, r0, r3
  401178:	fa21 f304 	lsr.w	r3, r1, r4
  40117c:	ea45 0103 	orr.w	r1, r5, r3
  401180:	bd30      	pop	{r4, r5, pc}
  401182:	f1c4 040c 	rsb	r4, r4, #12
  401186:	f1c4 0220 	rsb	r2, r4, #32
  40118a:	fa20 f002 	lsr.w	r0, r0, r2
  40118e:	fa01 f304 	lsl.w	r3, r1, r4
  401192:	ea40 0003 	orr.w	r0, r0, r3
  401196:	4629      	mov	r1, r5
  401198:	bd30      	pop	{r4, r5, pc}
  40119a:	fa21 f004 	lsr.w	r0, r1, r4
  40119e:	4629      	mov	r1, r5
  4011a0:	bd30      	pop	{r4, r5, pc}
  4011a2:	f094 0f00 	teq	r4, #0
  4011a6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  4011aa:	bf06      	itte	eq
  4011ac:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  4011b0:	3401      	addeq	r4, #1
  4011b2:	3d01      	subne	r5, #1
  4011b4:	e74e      	b.n	401054 <__adddf3+0x8c>
  4011b6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4011ba:	bf18      	it	ne
  4011bc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4011c0:	d029      	beq.n	401216 <__adddf3+0x24e>
  4011c2:	ea94 0f05 	teq	r4, r5
  4011c6:	bf08      	it	eq
  4011c8:	ea90 0f02 	teqeq	r0, r2
  4011cc:	d005      	beq.n	4011da <__adddf3+0x212>
  4011ce:	ea54 0c00 	orrs.w	ip, r4, r0
  4011d2:	bf04      	itt	eq
  4011d4:	4619      	moveq	r1, r3
  4011d6:	4610      	moveq	r0, r2
  4011d8:	bd30      	pop	{r4, r5, pc}
  4011da:	ea91 0f03 	teq	r1, r3
  4011de:	bf1e      	ittt	ne
  4011e0:	2100      	movne	r1, #0
  4011e2:	2000      	movne	r0, #0
  4011e4:	bd30      	popne	{r4, r5, pc}
  4011e6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  4011ea:	d105      	bne.n	4011f8 <__adddf3+0x230>
  4011ec:	0040      	lsls	r0, r0, #1
  4011ee:	4149      	adcs	r1, r1
  4011f0:	bf28      	it	cs
  4011f2:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  4011f6:	bd30      	pop	{r4, r5, pc}
  4011f8:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  4011fc:	bf3c      	itt	cc
  4011fe:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  401202:	bd30      	popcc	{r4, r5, pc}
  401204:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401208:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  40120c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401210:	f04f 0000 	mov.w	r0, #0
  401214:	bd30      	pop	{r4, r5, pc}
  401216:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  40121a:	bf1a      	itte	ne
  40121c:	4619      	movne	r1, r3
  40121e:	4610      	movne	r0, r2
  401220:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  401224:	bf1c      	itt	ne
  401226:	460b      	movne	r3, r1
  401228:	4602      	movne	r2, r0
  40122a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40122e:	bf06      	itte	eq
  401230:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  401234:	ea91 0f03 	teqeq	r1, r3
  401238:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  40123c:	bd30      	pop	{r4, r5, pc}
  40123e:	bf00      	nop

00401240 <__aeabi_ui2d>:
  401240:	f090 0f00 	teq	r0, #0
  401244:	bf04      	itt	eq
  401246:	2100      	moveq	r1, #0
  401248:	4770      	bxeq	lr
  40124a:	b530      	push	{r4, r5, lr}
  40124c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401250:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401254:	f04f 0500 	mov.w	r5, #0
  401258:	f04f 0100 	mov.w	r1, #0
  40125c:	e750      	b.n	401100 <__adddf3+0x138>
  40125e:	bf00      	nop

00401260 <__aeabi_i2d>:
  401260:	f090 0f00 	teq	r0, #0
  401264:	bf04      	itt	eq
  401266:	2100      	moveq	r1, #0
  401268:	4770      	bxeq	lr
  40126a:	b530      	push	{r4, r5, lr}
  40126c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401270:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401274:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  401278:	bf48      	it	mi
  40127a:	4240      	negmi	r0, r0
  40127c:	f04f 0100 	mov.w	r1, #0
  401280:	e73e      	b.n	401100 <__adddf3+0x138>
  401282:	bf00      	nop

00401284 <__aeabi_f2d>:
  401284:	0042      	lsls	r2, r0, #1
  401286:	ea4f 01e2 	mov.w	r1, r2, asr #3
  40128a:	ea4f 0131 	mov.w	r1, r1, rrx
  40128e:	ea4f 7002 	mov.w	r0, r2, lsl #28
  401292:	bf1f      	itttt	ne
  401294:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  401298:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  40129c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  4012a0:	4770      	bxne	lr
  4012a2:	f092 0f00 	teq	r2, #0
  4012a6:	bf14      	ite	ne
  4012a8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4012ac:	4770      	bxeq	lr
  4012ae:	b530      	push	{r4, r5, lr}
  4012b0:	f44f 7460 	mov.w	r4, #896	; 0x380
  4012b4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4012b8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  4012bc:	e720      	b.n	401100 <__adddf3+0x138>
  4012be:	bf00      	nop

004012c0 <__aeabi_ul2d>:
  4012c0:	ea50 0201 	orrs.w	r2, r0, r1
  4012c4:	bf08      	it	eq
  4012c6:	4770      	bxeq	lr
  4012c8:	b530      	push	{r4, r5, lr}
  4012ca:	f04f 0500 	mov.w	r5, #0
  4012ce:	e00a      	b.n	4012e6 <__aeabi_l2d+0x16>

004012d0 <__aeabi_l2d>:
  4012d0:	ea50 0201 	orrs.w	r2, r0, r1
  4012d4:	bf08      	it	eq
  4012d6:	4770      	bxeq	lr
  4012d8:	b530      	push	{r4, r5, lr}
  4012da:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  4012de:	d502      	bpl.n	4012e6 <__aeabi_l2d+0x16>
  4012e0:	4240      	negs	r0, r0
  4012e2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4012e6:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4012ea:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4012ee:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  4012f2:	f43f aedc 	beq.w	4010ae <__adddf3+0xe6>
  4012f6:	f04f 0203 	mov.w	r2, #3
  4012fa:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4012fe:	bf18      	it	ne
  401300:	3203      	addne	r2, #3
  401302:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401306:	bf18      	it	ne
  401308:	3203      	addne	r2, #3
  40130a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  40130e:	f1c2 0320 	rsb	r3, r2, #32
  401312:	fa00 fc03 	lsl.w	ip, r0, r3
  401316:	fa20 f002 	lsr.w	r0, r0, r2
  40131a:	fa01 fe03 	lsl.w	lr, r1, r3
  40131e:	ea40 000e 	orr.w	r0, r0, lr
  401322:	fa21 f102 	lsr.w	r1, r1, r2
  401326:	4414      	add	r4, r2
  401328:	e6c1      	b.n	4010ae <__adddf3+0xe6>
  40132a:	bf00      	nop

0040132c <__aeabi_dmul>:
  40132c:	b570      	push	{r4, r5, r6, lr}
  40132e:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401332:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401336:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40133a:	bf1d      	ittte	ne
  40133c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401340:	ea94 0f0c 	teqne	r4, ip
  401344:	ea95 0f0c 	teqne	r5, ip
  401348:	f000 f8de 	bleq	401508 <__aeabi_dmul+0x1dc>
  40134c:	442c      	add	r4, r5
  40134e:	ea81 0603 	eor.w	r6, r1, r3
  401352:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  401356:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  40135a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  40135e:	bf18      	it	ne
  401360:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  401364:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401368:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  40136c:	d038      	beq.n	4013e0 <__aeabi_dmul+0xb4>
  40136e:	fba0 ce02 	umull	ip, lr, r0, r2
  401372:	f04f 0500 	mov.w	r5, #0
  401376:	fbe1 e502 	umlal	lr, r5, r1, r2
  40137a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  40137e:	fbe0 e503 	umlal	lr, r5, r0, r3
  401382:	f04f 0600 	mov.w	r6, #0
  401386:	fbe1 5603 	umlal	r5, r6, r1, r3
  40138a:	f09c 0f00 	teq	ip, #0
  40138e:	bf18      	it	ne
  401390:	f04e 0e01 	orrne.w	lr, lr, #1
  401394:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  401398:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  40139c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  4013a0:	d204      	bcs.n	4013ac <__aeabi_dmul+0x80>
  4013a2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  4013a6:	416d      	adcs	r5, r5
  4013a8:	eb46 0606 	adc.w	r6, r6, r6
  4013ac:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  4013b0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  4013b4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  4013b8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  4013bc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  4013c0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4013c4:	bf88      	it	hi
  4013c6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4013ca:	d81e      	bhi.n	40140a <__aeabi_dmul+0xde>
  4013cc:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  4013d0:	bf08      	it	eq
  4013d2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  4013d6:	f150 0000 	adcs.w	r0, r0, #0
  4013da:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4013de:	bd70      	pop	{r4, r5, r6, pc}
  4013e0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  4013e4:	ea46 0101 	orr.w	r1, r6, r1
  4013e8:	ea40 0002 	orr.w	r0, r0, r2
  4013ec:	ea81 0103 	eor.w	r1, r1, r3
  4013f0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  4013f4:	bfc2      	ittt	gt
  4013f6:	ebd4 050c 	rsbsgt	r5, r4, ip
  4013fa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4013fe:	bd70      	popgt	{r4, r5, r6, pc}
  401400:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401404:	f04f 0e00 	mov.w	lr, #0
  401408:	3c01      	subs	r4, #1
  40140a:	f300 80ab 	bgt.w	401564 <__aeabi_dmul+0x238>
  40140e:	f114 0f36 	cmn.w	r4, #54	; 0x36
  401412:	bfde      	ittt	le
  401414:	2000      	movle	r0, #0
  401416:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  40141a:	bd70      	pople	{r4, r5, r6, pc}
  40141c:	f1c4 0400 	rsb	r4, r4, #0
  401420:	3c20      	subs	r4, #32
  401422:	da35      	bge.n	401490 <__aeabi_dmul+0x164>
  401424:	340c      	adds	r4, #12
  401426:	dc1b      	bgt.n	401460 <__aeabi_dmul+0x134>
  401428:	f104 0414 	add.w	r4, r4, #20
  40142c:	f1c4 0520 	rsb	r5, r4, #32
  401430:	fa00 f305 	lsl.w	r3, r0, r5
  401434:	fa20 f004 	lsr.w	r0, r0, r4
  401438:	fa01 f205 	lsl.w	r2, r1, r5
  40143c:	ea40 0002 	orr.w	r0, r0, r2
  401440:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  401444:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401448:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  40144c:	fa21 f604 	lsr.w	r6, r1, r4
  401450:	eb42 0106 	adc.w	r1, r2, r6
  401454:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401458:	bf08      	it	eq
  40145a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40145e:	bd70      	pop	{r4, r5, r6, pc}
  401460:	f1c4 040c 	rsb	r4, r4, #12
  401464:	f1c4 0520 	rsb	r5, r4, #32
  401468:	fa00 f304 	lsl.w	r3, r0, r4
  40146c:	fa20 f005 	lsr.w	r0, r0, r5
  401470:	fa01 f204 	lsl.w	r2, r1, r4
  401474:	ea40 0002 	orr.w	r0, r0, r2
  401478:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40147c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401480:	f141 0100 	adc.w	r1, r1, #0
  401484:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401488:	bf08      	it	eq
  40148a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40148e:	bd70      	pop	{r4, r5, r6, pc}
  401490:	f1c4 0520 	rsb	r5, r4, #32
  401494:	fa00 f205 	lsl.w	r2, r0, r5
  401498:	ea4e 0e02 	orr.w	lr, lr, r2
  40149c:	fa20 f304 	lsr.w	r3, r0, r4
  4014a0:	fa01 f205 	lsl.w	r2, r1, r5
  4014a4:	ea43 0302 	orr.w	r3, r3, r2
  4014a8:	fa21 f004 	lsr.w	r0, r1, r4
  4014ac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4014b0:	fa21 f204 	lsr.w	r2, r1, r4
  4014b4:	ea20 0002 	bic.w	r0, r0, r2
  4014b8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  4014bc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4014c0:	bf08      	it	eq
  4014c2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4014c6:	bd70      	pop	{r4, r5, r6, pc}
  4014c8:	f094 0f00 	teq	r4, #0
  4014cc:	d10f      	bne.n	4014ee <__aeabi_dmul+0x1c2>
  4014ce:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  4014d2:	0040      	lsls	r0, r0, #1
  4014d4:	eb41 0101 	adc.w	r1, r1, r1
  4014d8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4014dc:	bf08      	it	eq
  4014de:	3c01      	subeq	r4, #1
  4014e0:	d0f7      	beq.n	4014d2 <__aeabi_dmul+0x1a6>
  4014e2:	ea41 0106 	orr.w	r1, r1, r6
  4014e6:	f095 0f00 	teq	r5, #0
  4014ea:	bf18      	it	ne
  4014ec:	4770      	bxne	lr
  4014ee:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  4014f2:	0052      	lsls	r2, r2, #1
  4014f4:	eb43 0303 	adc.w	r3, r3, r3
  4014f8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  4014fc:	bf08      	it	eq
  4014fe:	3d01      	subeq	r5, #1
  401500:	d0f7      	beq.n	4014f2 <__aeabi_dmul+0x1c6>
  401502:	ea43 0306 	orr.w	r3, r3, r6
  401506:	4770      	bx	lr
  401508:	ea94 0f0c 	teq	r4, ip
  40150c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401510:	bf18      	it	ne
  401512:	ea95 0f0c 	teqne	r5, ip
  401516:	d00c      	beq.n	401532 <__aeabi_dmul+0x206>
  401518:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40151c:	bf18      	it	ne
  40151e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401522:	d1d1      	bne.n	4014c8 <__aeabi_dmul+0x19c>
  401524:	ea81 0103 	eor.w	r1, r1, r3
  401528:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40152c:	f04f 0000 	mov.w	r0, #0
  401530:	bd70      	pop	{r4, r5, r6, pc}
  401532:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401536:	bf06      	itte	eq
  401538:	4610      	moveq	r0, r2
  40153a:	4619      	moveq	r1, r3
  40153c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401540:	d019      	beq.n	401576 <__aeabi_dmul+0x24a>
  401542:	ea94 0f0c 	teq	r4, ip
  401546:	d102      	bne.n	40154e <__aeabi_dmul+0x222>
  401548:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  40154c:	d113      	bne.n	401576 <__aeabi_dmul+0x24a>
  40154e:	ea95 0f0c 	teq	r5, ip
  401552:	d105      	bne.n	401560 <__aeabi_dmul+0x234>
  401554:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  401558:	bf1c      	itt	ne
  40155a:	4610      	movne	r0, r2
  40155c:	4619      	movne	r1, r3
  40155e:	d10a      	bne.n	401576 <__aeabi_dmul+0x24a>
  401560:	ea81 0103 	eor.w	r1, r1, r3
  401564:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401568:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  40156c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401570:	f04f 0000 	mov.w	r0, #0
  401574:	bd70      	pop	{r4, r5, r6, pc}
  401576:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  40157a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  40157e:	bd70      	pop	{r4, r5, r6, pc}

00401580 <__aeabi_ddiv>:
  401580:	b570      	push	{r4, r5, r6, lr}
  401582:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401586:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40158a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40158e:	bf1d      	ittte	ne
  401590:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401594:	ea94 0f0c 	teqne	r4, ip
  401598:	ea95 0f0c 	teqne	r5, ip
  40159c:	f000 f8a7 	bleq	4016ee <__aeabi_ddiv+0x16e>
  4015a0:	eba4 0405 	sub.w	r4, r4, r5
  4015a4:	ea81 0e03 	eor.w	lr, r1, r3
  4015a8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4015ac:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4015b0:	f000 8088 	beq.w	4016c4 <__aeabi_ddiv+0x144>
  4015b4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4015b8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  4015bc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  4015c0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  4015c4:	ea4f 2202 	mov.w	r2, r2, lsl #8
  4015c8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4015cc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  4015d0:	ea4f 2600 	mov.w	r6, r0, lsl #8
  4015d4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  4015d8:	429d      	cmp	r5, r3
  4015da:	bf08      	it	eq
  4015dc:	4296      	cmpeq	r6, r2
  4015de:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  4015e2:	f504 7440 	add.w	r4, r4, #768	; 0x300
  4015e6:	d202      	bcs.n	4015ee <__aeabi_ddiv+0x6e>
  4015e8:	085b      	lsrs	r3, r3, #1
  4015ea:	ea4f 0232 	mov.w	r2, r2, rrx
  4015ee:	1ab6      	subs	r6, r6, r2
  4015f0:	eb65 0503 	sbc.w	r5, r5, r3
  4015f4:	085b      	lsrs	r3, r3, #1
  4015f6:	ea4f 0232 	mov.w	r2, r2, rrx
  4015fa:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  4015fe:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  401602:	ebb6 0e02 	subs.w	lr, r6, r2
  401606:	eb75 0e03 	sbcs.w	lr, r5, r3
  40160a:	bf22      	ittt	cs
  40160c:	1ab6      	subcs	r6, r6, r2
  40160e:	4675      	movcs	r5, lr
  401610:	ea40 000c 	orrcs.w	r0, r0, ip
  401614:	085b      	lsrs	r3, r3, #1
  401616:	ea4f 0232 	mov.w	r2, r2, rrx
  40161a:	ebb6 0e02 	subs.w	lr, r6, r2
  40161e:	eb75 0e03 	sbcs.w	lr, r5, r3
  401622:	bf22      	ittt	cs
  401624:	1ab6      	subcs	r6, r6, r2
  401626:	4675      	movcs	r5, lr
  401628:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  40162c:	085b      	lsrs	r3, r3, #1
  40162e:	ea4f 0232 	mov.w	r2, r2, rrx
  401632:	ebb6 0e02 	subs.w	lr, r6, r2
  401636:	eb75 0e03 	sbcs.w	lr, r5, r3
  40163a:	bf22      	ittt	cs
  40163c:	1ab6      	subcs	r6, r6, r2
  40163e:	4675      	movcs	r5, lr
  401640:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  401644:	085b      	lsrs	r3, r3, #1
  401646:	ea4f 0232 	mov.w	r2, r2, rrx
  40164a:	ebb6 0e02 	subs.w	lr, r6, r2
  40164e:	eb75 0e03 	sbcs.w	lr, r5, r3
  401652:	bf22      	ittt	cs
  401654:	1ab6      	subcs	r6, r6, r2
  401656:	4675      	movcs	r5, lr
  401658:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  40165c:	ea55 0e06 	orrs.w	lr, r5, r6
  401660:	d018      	beq.n	401694 <__aeabi_ddiv+0x114>
  401662:	ea4f 1505 	mov.w	r5, r5, lsl #4
  401666:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  40166a:	ea4f 1606 	mov.w	r6, r6, lsl #4
  40166e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  401672:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  401676:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  40167a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  40167e:	d1c0      	bne.n	401602 <__aeabi_ddiv+0x82>
  401680:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401684:	d10b      	bne.n	40169e <__aeabi_ddiv+0x11e>
  401686:	ea41 0100 	orr.w	r1, r1, r0
  40168a:	f04f 0000 	mov.w	r0, #0
  40168e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  401692:	e7b6      	b.n	401602 <__aeabi_ddiv+0x82>
  401694:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401698:	bf04      	itt	eq
  40169a:	4301      	orreq	r1, r0
  40169c:	2000      	moveq	r0, #0
  40169e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4016a2:	bf88      	it	hi
  4016a4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4016a8:	f63f aeaf 	bhi.w	40140a <__aeabi_dmul+0xde>
  4016ac:	ebb5 0c03 	subs.w	ip, r5, r3
  4016b0:	bf04      	itt	eq
  4016b2:	ebb6 0c02 	subseq.w	ip, r6, r2
  4016b6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4016ba:	f150 0000 	adcs.w	r0, r0, #0
  4016be:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4016c2:	bd70      	pop	{r4, r5, r6, pc}
  4016c4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4016c8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4016cc:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4016d0:	bfc2      	ittt	gt
  4016d2:	ebd4 050c 	rsbsgt	r5, r4, ip
  4016d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4016da:	bd70      	popgt	{r4, r5, r6, pc}
  4016dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4016e0:	f04f 0e00 	mov.w	lr, #0
  4016e4:	3c01      	subs	r4, #1
  4016e6:	e690      	b.n	40140a <__aeabi_dmul+0xde>
  4016e8:	ea45 0e06 	orr.w	lr, r5, r6
  4016ec:	e68d      	b.n	40140a <__aeabi_dmul+0xde>
  4016ee:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4016f2:	ea94 0f0c 	teq	r4, ip
  4016f6:	bf08      	it	eq
  4016f8:	ea95 0f0c 	teqeq	r5, ip
  4016fc:	f43f af3b 	beq.w	401576 <__aeabi_dmul+0x24a>
  401700:	ea94 0f0c 	teq	r4, ip
  401704:	d10a      	bne.n	40171c <__aeabi_ddiv+0x19c>
  401706:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40170a:	f47f af34 	bne.w	401576 <__aeabi_dmul+0x24a>
  40170e:	ea95 0f0c 	teq	r5, ip
  401712:	f47f af25 	bne.w	401560 <__aeabi_dmul+0x234>
  401716:	4610      	mov	r0, r2
  401718:	4619      	mov	r1, r3
  40171a:	e72c      	b.n	401576 <__aeabi_dmul+0x24a>
  40171c:	ea95 0f0c 	teq	r5, ip
  401720:	d106      	bne.n	401730 <__aeabi_ddiv+0x1b0>
  401722:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401726:	f43f aefd 	beq.w	401524 <__aeabi_dmul+0x1f8>
  40172a:	4610      	mov	r0, r2
  40172c:	4619      	mov	r1, r3
  40172e:	e722      	b.n	401576 <__aeabi_dmul+0x24a>
  401730:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401734:	bf18      	it	ne
  401736:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40173a:	f47f aec5 	bne.w	4014c8 <__aeabi_dmul+0x19c>
  40173e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  401742:	f47f af0d 	bne.w	401560 <__aeabi_dmul+0x234>
  401746:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  40174a:	f47f aeeb 	bne.w	401524 <__aeabi_dmul+0x1f8>
  40174e:	e712      	b.n	401576 <__aeabi_dmul+0x24a>

00401750 <__aeabi_d2uiz>:
  401750:	004a      	lsls	r2, r1, #1
  401752:	d211      	bcs.n	401778 <__aeabi_d2uiz+0x28>
  401754:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  401758:	d211      	bcs.n	40177e <__aeabi_d2uiz+0x2e>
  40175a:	d50d      	bpl.n	401778 <__aeabi_d2uiz+0x28>
  40175c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  401760:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  401764:	d40e      	bmi.n	401784 <__aeabi_d2uiz+0x34>
  401766:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  40176a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  40176e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  401772:	fa23 f002 	lsr.w	r0, r3, r2
  401776:	4770      	bx	lr
  401778:	f04f 0000 	mov.w	r0, #0
  40177c:	4770      	bx	lr
  40177e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  401782:	d102      	bne.n	40178a <__aeabi_d2uiz+0x3a>
  401784:	f04f 30ff 	mov.w	r0, #4294967295
  401788:	4770      	bx	lr
  40178a:	f04f 0000 	mov.w	r0, #0
  40178e:	4770      	bx	lr

00401790 <__libc_init_array>:
  401790:	b570      	push	{r4, r5, r6, lr}
  401792:	4e0f      	ldr	r6, [pc, #60]	; (4017d0 <__libc_init_array+0x40>)
  401794:	4d0f      	ldr	r5, [pc, #60]	; (4017d4 <__libc_init_array+0x44>)
  401796:	1b76      	subs	r6, r6, r5
  401798:	10b6      	asrs	r6, r6, #2
  40179a:	bf18      	it	ne
  40179c:	2400      	movne	r4, #0
  40179e:	d005      	beq.n	4017ac <__libc_init_array+0x1c>
  4017a0:	3401      	adds	r4, #1
  4017a2:	f855 3b04 	ldr.w	r3, [r5], #4
  4017a6:	4798      	blx	r3
  4017a8:	42a6      	cmp	r6, r4
  4017aa:	d1f9      	bne.n	4017a0 <__libc_init_array+0x10>
  4017ac:	4e0a      	ldr	r6, [pc, #40]	; (4017d8 <__libc_init_array+0x48>)
  4017ae:	4d0b      	ldr	r5, [pc, #44]	; (4017dc <__libc_init_array+0x4c>)
  4017b0:	1b76      	subs	r6, r6, r5
  4017b2:	f003 f8d1 	bl	404958 <_init>
  4017b6:	10b6      	asrs	r6, r6, #2
  4017b8:	bf18      	it	ne
  4017ba:	2400      	movne	r4, #0
  4017bc:	d006      	beq.n	4017cc <__libc_init_array+0x3c>
  4017be:	3401      	adds	r4, #1
  4017c0:	f855 3b04 	ldr.w	r3, [r5], #4
  4017c4:	4798      	blx	r3
  4017c6:	42a6      	cmp	r6, r4
  4017c8:	d1f9      	bne.n	4017be <__libc_init_array+0x2e>
  4017ca:	bd70      	pop	{r4, r5, r6, pc}
  4017cc:	bd70      	pop	{r4, r5, r6, pc}
  4017ce:	bf00      	nop
  4017d0:	00404964 	.word	0x00404964
  4017d4:	00404964 	.word	0x00404964
  4017d8:	0040496c 	.word	0x0040496c
  4017dc:	00404964 	.word	0x00404964

004017e0 <iprintf>:
  4017e0:	b40f      	push	{r0, r1, r2, r3}
  4017e2:	b500      	push	{lr}
  4017e4:	4907      	ldr	r1, [pc, #28]	; (401804 <iprintf+0x24>)
  4017e6:	b083      	sub	sp, #12
  4017e8:	ab04      	add	r3, sp, #16
  4017ea:	6808      	ldr	r0, [r1, #0]
  4017ec:	f853 2b04 	ldr.w	r2, [r3], #4
  4017f0:	6881      	ldr	r1, [r0, #8]
  4017f2:	9301      	str	r3, [sp, #4]
  4017f4:	f000 f97a 	bl	401aec <_vfiprintf_r>
  4017f8:	b003      	add	sp, #12
  4017fa:	f85d eb04 	ldr.w	lr, [sp], #4
  4017fe:	b004      	add	sp, #16
  401800:	4770      	bx	lr
  401802:	bf00      	nop
  401804:	20000430 	.word	0x20000430

00401808 <memset>:
  401808:	b470      	push	{r4, r5, r6}
  40180a:	0784      	lsls	r4, r0, #30
  40180c:	d046      	beq.n	40189c <memset+0x94>
  40180e:	1e54      	subs	r4, r2, #1
  401810:	2a00      	cmp	r2, #0
  401812:	d041      	beq.n	401898 <memset+0x90>
  401814:	b2cd      	uxtb	r5, r1
  401816:	4603      	mov	r3, r0
  401818:	e002      	b.n	401820 <memset+0x18>
  40181a:	1e62      	subs	r2, r4, #1
  40181c:	b3e4      	cbz	r4, 401898 <memset+0x90>
  40181e:	4614      	mov	r4, r2
  401820:	f803 5b01 	strb.w	r5, [r3], #1
  401824:	079a      	lsls	r2, r3, #30
  401826:	d1f8      	bne.n	40181a <memset+0x12>
  401828:	2c03      	cmp	r4, #3
  40182a:	d92e      	bls.n	40188a <memset+0x82>
  40182c:	b2cd      	uxtb	r5, r1
  40182e:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401832:	2c0f      	cmp	r4, #15
  401834:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401838:	d919      	bls.n	40186e <memset+0x66>
  40183a:	f103 0210 	add.w	r2, r3, #16
  40183e:	4626      	mov	r6, r4
  401840:	3e10      	subs	r6, #16
  401842:	2e0f      	cmp	r6, #15
  401844:	f842 5c10 	str.w	r5, [r2, #-16]
  401848:	f842 5c0c 	str.w	r5, [r2, #-12]
  40184c:	f842 5c08 	str.w	r5, [r2, #-8]
  401850:	f842 5c04 	str.w	r5, [r2, #-4]
  401854:	f102 0210 	add.w	r2, r2, #16
  401858:	d8f2      	bhi.n	401840 <memset+0x38>
  40185a:	f1a4 0210 	sub.w	r2, r4, #16
  40185e:	f022 020f 	bic.w	r2, r2, #15
  401862:	f004 040f 	and.w	r4, r4, #15
  401866:	3210      	adds	r2, #16
  401868:	2c03      	cmp	r4, #3
  40186a:	4413      	add	r3, r2
  40186c:	d90d      	bls.n	40188a <memset+0x82>
  40186e:	461e      	mov	r6, r3
  401870:	4622      	mov	r2, r4
  401872:	3a04      	subs	r2, #4
  401874:	2a03      	cmp	r2, #3
  401876:	f846 5b04 	str.w	r5, [r6], #4
  40187a:	d8fa      	bhi.n	401872 <memset+0x6a>
  40187c:	1f22      	subs	r2, r4, #4
  40187e:	f022 0203 	bic.w	r2, r2, #3
  401882:	3204      	adds	r2, #4
  401884:	4413      	add	r3, r2
  401886:	f004 0403 	and.w	r4, r4, #3
  40188a:	b12c      	cbz	r4, 401898 <memset+0x90>
  40188c:	b2c9      	uxtb	r1, r1
  40188e:	441c      	add	r4, r3
  401890:	f803 1b01 	strb.w	r1, [r3], #1
  401894:	42a3      	cmp	r3, r4
  401896:	d1fb      	bne.n	401890 <memset+0x88>
  401898:	bc70      	pop	{r4, r5, r6}
  40189a:	4770      	bx	lr
  40189c:	4614      	mov	r4, r2
  40189e:	4603      	mov	r3, r0
  4018a0:	e7c2      	b.n	401828 <memset+0x20>
  4018a2:	bf00      	nop

004018a4 <_puts_r>:
  4018a4:	b5f0      	push	{r4, r5, r6, r7, lr}
  4018a6:	4604      	mov	r4, r0
  4018a8:	b089      	sub	sp, #36	; 0x24
  4018aa:	4608      	mov	r0, r1
  4018ac:	460d      	mov	r5, r1
  4018ae:	f000 f8b3 	bl	401a18 <strlen>
  4018b2:	68a3      	ldr	r3, [r4, #8]
  4018b4:	4f11      	ldr	r7, [pc, #68]	; (4018fc <_puts_r+0x58>)
  4018b6:	899a      	ldrh	r2, [r3, #12]
  4018b8:	9504      	str	r5, [sp, #16]
  4018ba:	2102      	movs	r1, #2
  4018bc:	f100 0e01 	add.w	lr, r0, #1
  4018c0:	2601      	movs	r6, #1
  4018c2:	ad04      	add	r5, sp, #16
  4018c4:	9102      	str	r1, [sp, #8]
  4018c6:	0491      	lsls	r1, r2, #18
  4018c8:	9005      	str	r0, [sp, #20]
  4018ca:	f8cd e00c 	str.w	lr, [sp, #12]
  4018ce:	9706      	str	r7, [sp, #24]
  4018d0:	9607      	str	r6, [sp, #28]
  4018d2:	9501      	str	r5, [sp, #4]
  4018d4:	d406      	bmi.n	4018e4 <_puts_r+0x40>
  4018d6:	6e59      	ldr	r1, [r3, #100]	; 0x64
  4018d8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  4018dc:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  4018e0:	819a      	strh	r2, [r3, #12]
  4018e2:	6659      	str	r1, [r3, #100]	; 0x64
  4018e4:	4620      	mov	r0, r4
  4018e6:	4619      	mov	r1, r3
  4018e8:	aa01      	add	r2, sp, #4
  4018ea:	f001 faa3 	bl	402e34 <__sfvwrite_r>
  4018ee:	2800      	cmp	r0, #0
  4018f0:	bf14      	ite	ne
  4018f2:	f04f 30ff 	movne.w	r0, #4294967295
  4018f6:	200a      	moveq	r0, #10
  4018f8:	b009      	add	sp, #36	; 0x24
  4018fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4018fc:	00404904 	.word	0x00404904

00401900 <puts>:
  401900:	4b02      	ldr	r3, [pc, #8]	; (40190c <puts+0xc>)
  401902:	4601      	mov	r1, r0
  401904:	6818      	ldr	r0, [r3, #0]
  401906:	f7ff bfcd 	b.w	4018a4 <_puts_r>
  40190a:	bf00      	nop
  40190c:	20000430 	.word	0x20000430

00401910 <setbuf>:
  401910:	2900      	cmp	r1, #0
  401912:	bf0c      	ite	eq
  401914:	2202      	moveq	r2, #2
  401916:	2200      	movne	r2, #0
  401918:	f44f 6380 	mov.w	r3, #1024	; 0x400
  40191c:	f000 b800 	b.w	401920 <setvbuf>

00401920 <setvbuf>:
  401920:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401924:	4c3a      	ldr	r4, [pc, #232]	; (401a10 <setvbuf+0xf0>)
  401926:	6826      	ldr	r6, [r4, #0]
  401928:	460d      	mov	r5, r1
  40192a:	4604      	mov	r4, r0
  40192c:	4690      	mov	r8, r2
  40192e:	461f      	mov	r7, r3
  401930:	b116      	cbz	r6, 401938 <setvbuf+0x18>
  401932:	6bb3      	ldr	r3, [r6, #56]	; 0x38
  401934:	2b00      	cmp	r3, #0
  401936:	d03c      	beq.n	4019b2 <setvbuf+0x92>
  401938:	f1b8 0f02 	cmp.w	r8, #2
  40193c:	d82f      	bhi.n	40199e <setvbuf+0x7e>
  40193e:	2f00      	cmp	r7, #0
  401940:	db2d      	blt.n	40199e <setvbuf+0x7e>
  401942:	4621      	mov	r1, r4
  401944:	4630      	mov	r0, r6
  401946:	f001 f831 	bl	4029ac <_fflush_r>
  40194a:	89a1      	ldrh	r1, [r4, #12]
  40194c:	2300      	movs	r3, #0
  40194e:	6063      	str	r3, [r4, #4]
  401950:	61a3      	str	r3, [r4, #24]
  401952:	060b      	lsls	r3, r1, #24
  401954:	d427      	bmi.n	4019a6 <setvbuf+0x86>
  401956:	f021 0183 	bic.w	r1, r1, #131	; 0x83
  40195a:	b289      	uxth	r1, r1
  40195c:	f1b8 0f02 	cmp.w	r8, #2
  401960:	81a1      	strh	r1, [r4, #12]
  401962:	d02a      	beq.n	4019ba <setvbuf+0x9a>
  401964:	2d00      	cmp	r5, #0
  401966:	d036      	beq.n	4019d6 <setvbuf+0xb6>
  401968:	f1b8 0f01 	cmp.w	r8, #1
  40196c:	d011      	beq.n	401992 <setvbuf+0x72>
  40196e:	b289      	uxth	r1, r1
  401970:	f001 0008 	and.w	r0, r1, #8
  401974:	4b27      	ldr	r3, [pc, #156]	; (401a14 <setvbuf+0xf4>)
  401976:	63f3      	str	r3, [r6, #60]	; 0x3c
  401978:	b280      	uxth	r0, r0
  40197a:	6025      	str	r5, [r4, #0]
  40197c:	6125      	str	r5, [r4, #16]
  40197e:	6167      	str	r7, [r4, #20]
  401980:	b178      	cbz	r0, 4019a2 <setvbuf+0x82>
  401982:	f011 0f03 	tst.w	r1, #3
  401986:	bf18      	it	ne
  401988:	2700      	movne	r7, #0
  40198a:	60a7      	str	r7, [r4, #8]
  40198c:	2000      	movs	r0, #0
  40198e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401992:	f041 0101 	orr.w	r1, r1, #1
  401996:	427b      	negs	r3, r7
  401998:	81a1      	strh	r1, [r4, #12]
  40199a:	61a3      	str	r3, [r4, #24]
  40199c:	e7e7      	b.n	40196e <setvbuf+0x4e>
  40199e:	f04f 30ff 	mov.w	r0, #4294967295
  4019a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4019a6:	6921      	ldr	r1, [r4, #16]
  4019a8:	4630      	mov	r0, r6
  4019aa:	f001 f96b 	bl	402c84 <_free_r>
  4019ae:	89a1      	ldrh	r1, [r4, #12]
  4019b0:	e7d1      	b.n	401956 <setvbuf+0x36>
  4019b2:	4630      	mov	r0, r6
  4019b4:	f001 f88e 	bl	402ad4 <__sinit>
  4019b8:	e7be      	b.n	401938 <setvbuf+0x18>
  4019ba:	2000      	movs	r0, #0
  4019bc:	f104 0343 	add.w	r3, r4, #67	; 0x43
  4019c0:	f041 0102 	orr.w	r1, r1, #2
  4019c4:	2500      	movs	r5, #0
  4019c6:	2201      	movs	r2, #1
  4019c8:	81a1      	strh	r1, [r4, #12]
  4019ca:	60a5      	str	r5, [r4, #8]
  4019cc:	6023      	str	r3, [r4, #0]
  4019ce:	6123      	str	r3, [r4, #16]
  4019d0:	6162      	str	r2, [r4, #20]
  4019d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4019d6:	2f00      	cmp	r7, #0
  4019d8:	bf08      	it	eq
  4019da:	f44f 6780 	moveq.w	r7, #1024	; 0x400
  4019de:	4638      	mov	r0, r7
  4019e0:	f001 fc58 	bl	403294 <malloc>
  4019e4:	4605      	mov	r5, r0
  4019e6:	b128      	cbz	r0, 4019f4 <setvbuf+0xd4>
  4019e8:	89a1      	ldrh	r1, [r4, #12]
  4019ea:	f041 0180 	orr.w	r1, r1, #128	; 0x80
  4019ee:	b289      	uxth	r1, r1
  4019f0:	81a1      	strh	r1, [r4, #12]
  4019f2:	e7b9      	b.n	401968 <setvbuf+0x48>
  4019f4:	f44f 6080 	mov.w	r0, #1024	; 0x400
  4019f8:	f001 fc4c 	bl	403294 <malloc>
  4019fc:	4605      	mov	r5, r0
  4019fe:	b918      	cbnz	r0, 401a08 <setvbuf+0xe8>
  401a00:	89a1      	ldrh	r1, [r4, #12]
  401a02:	f04f 30ff 	mov.w	r0, #4294967295
  401a06:	e7d9      	b.n	4019bc <setvbuf+0x9c>
  401a08:	f44f 6780 	mov.w	r7, #1024	; 0x400
  401a0c:	e7ec      	b.n	4019e8 <setvbuf+0xc8>
  401a0e:	bf00      	nop
  401a10:	20000430 	.word	0x20000430
  401a14:	004029d9 	.word	0x004029d9

00401a18 <strlen>:
  401a18:	f020 0103 	bic.w	r1, r0, #3
  401a1c:	f010 0003 	ands.w	r0, r0, #3
  401a20:	f1c0 0000 	rsb	r0, r0, #0
  401a24:	f851 3b04 	ldr.w	r3, [r1], #4
  401a28:	f100 0c04 	add.w	ip, r0, #4
  401a2c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
  401a30:	f06f 0200 	mvn.w	r2, #0
  401a34:	bf1c      	itt	ne
  401a36:	fa22 f20c 	lsrne.w	r2, r2, ip
  401a3a:	4313      	orrne	r3, r2
  401a3c:	f04f 0c01 	mov.w	ip, #1
  401a40:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
  401a44:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
  401a48:	eba3 020c 	sub.w	r2, r3, ip
  401a4c:	ea22 0203 	bic.w	r2, r2, r3
  401a50:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
  401a54:	bf04      	itt	eq
  401a56:	f851 3b04 	ldreq.w	r3, [r1], #4
  401a5a:	3004      	addeq	r0, #4
  401a5c:	d0f4      	beq.n	401a48 <strlen+0x30>
  401a5e:	f1c2 0100 	rsb	r1, r2, #0
  401a62:	ea02 0201 	and.w	r2, r2, r1
  401a66:	fab2 f282 	clz	r2, r2
  401a6a:	f1c2 021f 	rsb	r2, r2, #31
  401a6e:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  401a72:	4770      	bx	lr

00401a74 <__sprint_r.part.0>:
  401a74:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  401a76:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  401a7a:	049c      	lsls	r4, r3, #18
  401a7c:	460f      	mov	r7, r1
  401a7e:	4692      	mov	sl, r2
  401a80:	d52b      	bpl.n	401ada <__sprint_r.part.0+0x66>
  401a82:	6893      	ldr	r3, [r2, #8]
  401a84:	6812      	ldr	r2, [r2, #0]
  401a86:	b333      	cbz	r3, 401ad6 <__sprint_r.part.0+0x62>
  401a88:	4680      	mov	r8, r0
  401a8a:	f102 0908 	add.w	r9, r2, #8
  401a8e:	e919 0060 	ldmdb	r9, {r5, r6}
  401a92:	08b6      	lsrs	r6, r6, #2
  401a94:	d017      	beq.n	401ac6 <__sprint_r.part.0+0x52>
  401a96:	3d04      	subs	r5, #4
  401a98:	2400      	movs	r4, #0
  401a9a:	e001      	b.n	401aa0 <__sprint_r.part.0+0x2c>
  401a9c:	42a6      	cmp	r6, r4
  401a9e:	d010      	beq.n	401ac2 <__sprint_r.part.0+0x4e>
  401aa0:	4640      	mov	r0, r8
  401aa2:	f855 1f04 	ldr.w	r1, [r5, #4]!
  401aa6:	463a      	mov	r2, r7
  401aa8:	f001 f88c 	bl	402bc4 <_fputwc_r>
  401aac:	1c43      	adds	r3, r0, #1
  401aae:	f104 0401 	add.w	r4, r4, #1
  401ab2:	d1f3      	bne.n	401a9c <__sprint_r.part.0+0x28>
  401ab4:	2300      	movs	r3, #0
  401ab6:	f8ca 3008 	str.w	r3, [sl, #8]
  401aba:	f8ca 3004 	str.w	r3, [sl, #4]
  401abe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401ac2:	f8da 3008 	ldr.w	r3, [sl, #8]
  401ac6:	eba3 0386 	sub.w	r3, r3, r6, lsl #2
  401aca:	f8ca 3008 	str.w	r3, [sl, #8]
  401ace:	f109 0908 	add.w	r9, r9, #8
  401ad2:	2b00      	cmp	r3, #0
  401ad4:	d1db      	bne.n	401a8e <__sprint_r.part.0+0x1a>
  401ad6:	2000      	movs	r0, #0
  401ad8:	e7ec      	b.n	401ab4 <__sprint_r.part.0+0x40>
  401ada:	f001 f9ab 	bl	402e34 <__sfvwrite_r>
  401ade:	2300      	movs	r3, #0
  401ae0:	f8ca 3008 	str.w	r3, [sl, #8]
  401ae4:	f8ca 3004 	str.w	r3, [sl, #4]
  401ae8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00401aec <_vfiprintf_r>:
  401aec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401af0:	b0ab      	sub	sp, #172	; 0xac
  401af2:	461c      	mov	r4, r3
  401af4:	9100      	str	r1, [sp, #0]
  401af6:	4693      	mov	fp, r2
  401af8:	9304      	str	r3, [sp, #16]
  401afa:	9001      	str	r0, [sp, #4]
  401afc:	b118      	cbz	r0, 401b06 <_vfiprintf_r+0x1a>
  401afe:	6b83      	ldr	r3, [r0, #56]	; 0x38
  401b00:	2b00      	cmp	r3, #0
  401b02:	f000 80e3 	beq.w	401ccc <_vfiprintf_r+0x1e0>
  401b06:	9b00      	ldr	r3, [sp, #0]
  401b08:	8999      	ldrh	r1, [r3, #12]
  401b0a:	b28a      	uxth	r2, r1
  401b0c:	0490      	lsls	r0, r2, #18
  401b0e:	d408      	bmi.n	401b22 <_vfiprintf_r+0x36>
  401b10:	4618      	mov	r0, r3
  401b12:	6e5b      	ldr	r3, [r3, #100]	; 0x64
  401b14:	f441 5200 	orr.w	r2, r1, #8192	; 0x2000
  401b18:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  401b1c:	8182      	strh	r2, [r0, #12]
  401b1e:	6643      	str	r3, [r0, #100]	; 0x64
  401b20:	b292      	uxth	r2, r2
  401b22:	0711      	lsls	r1, r2, #28
  401b24:	f140 80b2 	bpl.w	401c8c <_vfiprintf_r+0x1a0>
  401b28:	9b00      	ldr	r3, [sp, #0]
  401b2a:	691b      	ldr	r3, [r3, #16]
  401b2c:	2b00      	cmp	r3, #0
  401b2e:	f000 80ad 	beq.w	401c8c <_vfiprintf_r+0x1a0>
  401b32:	f002 021a 	and.w	r2, r2, #26
  401b36:	2a0a      	cmp	r2, #10
  401b38:	f000 80b4 	beq.w	401ca4 <_vfiprintf_r+0x1b8>
  401b3c:	2300      	movs	r3, #0
  401b3e:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
  401b42:	9309      	str	r3, [sp, #36]	; 0x24
  401b44:	930f      	str	r3, [sp, #60]	; 0x3c
  401b46:	930e      	str	r3, [sp, #56]	; 0x38
  401b48:	9302      	str	r3, [sp, #8]
  401b4a:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
  401b4e:	4654      	mov	r4, sl
  401b50:	f89b 3000 	ldrb.w	r3, [fp]
  401b54:	2b00      	cmp	r3, #0
  401b56:	f000 84a3 	beq.w	4024a0 <_vfiprintf_r+0x9b4>
  401b5a:	2b25      	cmp	r3, #37	; 0x25
  401b5c:	f000 84a0 	beq.w	4024a0 <_vfiprintf_r+0x9b4>
  401b60:	465a      	mov	r2, fp
  401b62:	e001      	b.n	401b68 <_vfiprintf_r+0x7c>
  401b64:	2b25      	cmp	r3, #37	; 0x25
  401b66:	d003      	beq.n	401b70 <_vfiprintf_r+0x84>
  401b68:	f812 3f01 	ldrb.w	r3, [r2, #1]!
  401b6c:	2b00      	cmp	r3, #0
  401b6e:	d1f9      	bne.n	401b64 <_vfiprintf_r+0x78>
  401b70:	ebcb 0602 	rsb	r6, fp, r2
  401b74:	4615      	mov	r5, r2
  401b76:	b196      	cbz	r6, 401b9e <_vfiprintf_r+0xb2>
  401b78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  401b7a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401b7c:	f8c4 b000 	str.w	fp, [r4]
  401b80:	3301      	adds	r3, #1
  401b82:	4432      	add	r2, r6
  401b84:	2b07      	cmp	r3, #7
  401b86:	6066      	str	r6, [r4, #4]
  401b88:	920f      	str	r2, [sp, #60]	; 0x3c
  401b8a:	930e      	str	r3, [sp, #56]	; 0x38
  401b8c:	dd79      	ble.n	401c82 <_vfiprintf_r+0x196>
  401b8e:	2a00      	cmp	r2, #0
  401b90:	f040 84af 	bne.w	4024f2 <_vfiprintf_r+0xa06>
  401b94:	9b02      	ldr	r3, [sp, #8]
  401b96:	920e      	str	r2, [sp, #56]	; 0x38
  401b98:	4433      	add	r3, r6
  401b9a:	4654      	mov	r4, sl
  401b9c:	9302      	str	r3, [sp, #8]
  401b9e:	782b      	ldrb	r3, [r5, #0]
  401ba0:	2b00      	cmp	r3, #0
  401ba2:	f000 8360 	beq.w	402266 <_vfiprintf_r+0x77a>
  401ba6:	2100      	movs	r1, #0
  401ba8:	f04f 0300 	mov.w	r3, #0
  401bac:	f04f 3cff 	mov.w	ip, #4294967295
  401bb0:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  401bb4:	1c68      	adds	r0, r5, #1
  401bb6:	786b      	ldrb	r3, [r5, #1]
  401bb8:	4688      	mov	r8, r1
  401bba:	460d      	mov	r5, r1
  401bbc:	4666      	mov	r6, ip
  401bbe:	f100 0b01 	add.w	fp, r0, #1
  401bc2:	f1a3 0220 	sub.w	r2, r3, #32
  401bc6:	2a58      	cmp	r2, #88	; 0x58
  401bc8:	f200 82ab 	bhi.w	402122 <_vfiprintf_r+0x636>
  401bcc:	e8df f012 	tbh	[pc, r2, lsl #1]
  401bd0:	02a9029b 	.word	0x02a9029b
  401bd4:	02a302a9 	.word	0x02a302a9
  401bd8:	02a902a9 	.word	0x02a902a9
  401bdc:	02a902a9 	.word	0x02a902a9
  401be0:	02a902a9 	.word	0x02a902a9
  401be4:	02620255 	.word	0x02620255
  401be8:	010d02a9 	.word	0x010d02a9
  401bec:	02a9026e 	.word	0x02a9026e
  401bf0:	012f0129 	.word	0x012f0129
  401bf4:	012f012f 	.word	0x012f012f
  401bf8:	012f012f 	.word	0x012f012f
  401bfc:	012f012f 	.word	0x012f012f
  401c00:	012f012f 	.word	0x012f012f
  401c04:	02a902a9 	.word	0x02a902a9
  401c08:	02a902a9 	.word	0x02a902a9
  401c0c:	02a902a9 	.word	0x02a902a9
  401c10:	02a902a9 	.word	0x02a902a9
  401c14:	02a902a9 	.word	0x02a902a9
  401c18:	02a9013d 	.word	0x02a9013d
  401c1c:	02a902a9 	.word	0x02a902a9
  401c20:	02a902a9 	.word	0x02a902a9
  401c24:	02a902a9 	.word	0x02a902a9
  401c28:	02a902a9 	.word	0x02a902a9
  401c2c:	017402a9 	.word	0x017402a9
  401c30:	02a902a9 	.word	0x02a902a9
  401c34:	02a902a9 	.word	0x02a902a9
  401c38:	018b02a9 	.word	0x018b02a9
  401c3c:	02a902a9 	.word	0x02a902a9
  401c40:	02a901a3 	.word	0x02a901a3
  401c44:	02a902a9 	.word	0x02a902a9
  401c48:	02a902a9 	.word	0x02a902a9
  401c4c:	02a902a9 	.word	0x02a902a9
  401c50:	02a902a9 	.word	0x02a902a9
  401c54:	01c702a9 	.word	0x01c702a9
  401c58:	02a901da 	.word	0x02a901da
  401c5c:	02a902a9 	.word	0x02a902a9
  401c60:	01da0123 	.word	0x01da0123
  401c64:	02a902a9 	.word	0x02a902a9
  401c68:	02a9024c 	.word	0x02a9024c
  401c6c:	0113028a 	.word	0x0113028a
  401c70:	020701f3 	.word	0x020701f3
  401c74:	020d02a9 	.word	0x020d02a9
  401c78:	008102a9 	.word	0x008102a9
  401c7c:	02a902a9 	.word	0x02a902a9
  401c80:	0233      	.short	0x0233
  401c82:	3408      	adds	r4, #8
  401c84:	9b02      	ldr	r3, [sp, #8]
  401c86:	4433      	add	r3, r6
  401c88:	9302      	str	r3, [sp, #8]
  401c8a:	e788      	b.n	401b9e <_vfiprintf_r+0xb2>
  401c8c:	9801      	ldr	r0, [sp, #4]
  401c8e:	9900      	ldr	r1, [sp, #0]
  401c90:	f000 fd70 	bl	402774 <__swsetup_r>
  401c94:	b9a8      	cbnz	r0, 401cc2 <_vfiprintf_r+0x1d6>
  401c96:	9b00      	ldr	r3, [sp, #0]
  401c98:	899a      	ldrh	r2, [r3, #12]
  401c9a:	f002 021a 	and.w	r2, r2, #26
  401c9e:	2a0a      	cmp	r2, #10
  401ca0:	f47f af4c 	bne.w	401b3c <_vfiprintf_r+0x50>
  401ca4:	9b00      	ldr	r3, [sp, #0]
  401ca6:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
  401caa:	2b00      	cmp	r3, #0
  401cac:	f6ff af46 	blt.w	401b3c <_vfiprintf_r+0x50>
  401cb0:	9801      	ldr	r0, [sp, #4]
  401cb2:	9900      	ldr	r1, [sp, #0]
  401cb4:	465a      	mov	r2, fp
  401cb6:	4623      	mov	r3, r4
  401cb8:	f000 fd20 	bl	4026fc <__sbprintf>
  401cbc:	b02b      	add	sp, #172	; 0xac
  401cbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401cc2:	f04f 30ff 	mov.w	r0, #4294967295
  401cc6:	b02b      	add	sp, #172	; 0xac
  401cc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401ccc:	f000 ff02 	bl	402ad4 <__sinit>
  401cd0:	e719      	b.n	401b06 <_vfiprintf_r+0x1a>
  401cd2:	f018 0f20 	tst.w	r8, #32
  401cd6:	9503      	str	r5, [sp, #12]
  401cd8:	46b4      	mov	ip, r6
  401cda:	f000 810c 	beq.w	401ef6 <_vfiprintf_r+0x40a>
  401cde:	9b04      	ldr	r3, [sp, #16]
  401ce0:	3307      	adds	r3, #7
  401ce2:	f023 0307 	bic.w	r3, r3, #7
  401ce6:	f103 0208 	add.w	r2, r3, #8
  401cea:	e9d3 6700 	ldrd	r6, r7, [r3]
  401cee:	9204      	str	r2, [sp, #16]
  401cf0:	2301      	movs	r3, #1
  401cf2:	f04f 0200 	mov.w	r2, #0
  401cf6:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
  401cfa:	46e1      	mov	r9, ip
  401cfc:	2500      	movs	r5, #0
  401cfe:	f1bc 0f00 	cmp.w	ip, #0
  401d02:	bfa8      	it	ge
  401d04:	f028 0880 	bicge.w	r8, r8, #128	; 0x80
  401d08:	ea56 0207 	orrs.w	r2, r6, r7
  401d0c:	f040 80c4 	bne.w	401e98 <_vfiprintf_r+0x3ac>
  401d10:	f1bc 0f00 	cmp.w	ip, #0
  401d14:	f000 8381 	beq.w	40241a <_vfiprintf_r+0x92e>
  401d18:	2b01      	cmp	r3, #1
  401d1a:	f000 80c5 	beq.w	401ea8 <_vfiprintf_r+0x3bc>
  401d1e:	2b02      	cmp	r3, #2
  401d20:	f000 8387 	beq.w	402432 <_vfiprintf_r+0x946>
  401d24:	4651      	mov	r1, sl
  401d26:	08f2      	lsrs	r2, r6, #3
  401d28:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  401d2c:	08f8      	lsrs	r0, r7, #3
  401d2e:	f006 0307 	and.w	r3, r6, #7
  401d32:	4607      	mov	r7, r0
  401d34:	4616      	mov	r6, r2
  401d36:	3330      	adds	r3, #48	; 0x30
  401d38:	ea56 0207 	orrs.w	r2, r6, r7
  401d3c:	f801 3d01 	strb.w	r3, [r1, #-1]!
  401d40:	d1f1      	bne.n	401d26 <_vfiprintf_r+0x23a>
  401d42:	f018 0f01 	tst.w	r8, #1
  401d46:	9107      	str	r1, [sp, #28]
  401d48:	f040 83fc 	bne.w	402544 <_vfiprintf_r+0xa58>
  401d4c:	ebc1 090a 	rsb	r9, r1, sl
  401d50:	45e1      	cmp	r9, ip
  401d52:	464e      	mov	r6, r9
  401d54:	bfb8      	it	lt
  401d56:	4666      	movlt	r6, ip
  401d58:	b105      	cbz	r5, 401d5c <_vfiprintf_r+0x270>
  401d5a:	3601      	adds	r6, #1
  401d5c:	f018 0302 	ands.w	r3, r8, #2
  401d60:	9305      	str	r3, [sp, #20]
  401d62:	bf18      	it	ne
  401d64:	3602      	addne	r6, #2
  401d66:	f018 0384 	ands.w	r3, r8, #132	; 0x84
  401d6a:	9306      	str	r3, [sp, #24]
  401d6c:	f040 81fa 	bne.w	402164 <_vfiprintf_r+0x678>
  401d70:	9b03      	ldr	r3, [sp, #12]
  401d72:	1b9d      	subs	r5, r3, r6
  401d74:	2d00      	cmp	r5, #0
  401d76:	f340 81f5 	ble.w	402164 <_vfiprintf_r+0x678>
  401d7a:	2d10      	cmp	r5, #16
  401d7c:	f340 848c 	ble.w	402698 <_vfiprintf_r+0xbac>
  401d80:	f8dd e038 	ldr.w	lr, [sp, #56]	; 0x38
  401d84:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401d86:	4fc6      	ldr	r7, [pc, #792]	; (4020a0 <_vfiprintf_r+0x5b4>)
  401d88:	4620      	mov	r0, r4
  401d8a:	2310      	movs	r3, #16
  401d8c:	4664      	mov	r4, ip
  401d8e:	4671      	mov	r1, lr
  401d90:	4684      	mov	ip, r0
  401d92:	e007      	b.n	401da4 <_vfiprintf_r+0x2b8>
  401d94:	f101 0e02 	add.w	lr, r1, #2
  401d98:	f10c 0c08 	add.w	ip, ip, #8
  401d9c:	4601      	mov	r1, r0
  401d9e:	3d10      	subs	r5, #16
  401da0:	2d10      	cmp	r5, #16
  401da2:	dd13      	ble.n	401dcc <_vfiprintf_r+0x2e0>
  401da4:	1c48      	adds	r0, r1, #1
  401da6:	3210      	adds	r2, #16
  401da8:	2807      	cmp	r0, #7
  401daa:	920f      	str	r2, [sp, #60]	; 0x3c
  401dac:	f8cc 7000 	str.w	r7, [ip]
  401db0:	f8cc 3004 	str.w	r3, [ip, #4]
  401db4:	900e      	str	r0, [sp, #56]	; 0x38
  401db6:	dded      	ble.n	401d94 <_vfiprintf_r+0x2a8>
  401db8:	2a00      	cmp	r2, #0
  401dba:	f040 81c3 	bne.w	402144 <_vfiprintf_r+0x658>
  401dbe:	3d10      	subs	r5, #16
  401dc0:	2d10      	cmp	r5, #16
  401dc2:	4611      	mov	r1, r2
  401dc4:	f04f 0e01 	mov.w	lr, #1
  401dc8:	46d4      	mov	ip, sl
  401dca:	dceb      	bgt.n	401da4 <_vfiprintf_r+0x2b8>
  401dcc:	4663      	mov	r3, ip
  401dce:	4671      	mov	r1, lr
  401dd0:	46a4      	mov	ip, r4
  401dd2:	461c      	mov	r4, r3
  401dd4:	442a      	add	r2, r5
  401dd6:	2907      	cmp	r1, #7
  401dd8:	920f      	str	r2, [sp, #60]	; 0x3c
  401dda:	6027      	str	r7, [r4, #0]
  401ddc:	6065      	str	r5, [r4, #4]
  401dde:	910e      	str	r1, [sp, #56]	; 0x38
  401de0:	f300 8346 	bgt.w	402470 <_vfiprintf_r+0x984>
  401de4:	3408      	adds	r4, #8
  401de6:	1c48      	adds	r0, r1, #1
  401de8:	e1bf      	b.n	40216a <_vfiprintf_r+0x67e>
  401dea:	4658      	mov	r0, fp
  401dec:	f048 0804 	orr.w	r8, r8, #4
  401df0:	f89b 3000 	ldrb.w	r3, [fp]
  401df4:	e6e3      	b.n	401bbe <_vfiprintf_r+0xd2>
  401df6:	f018 0320 	ands.w	r3, r8, #32
  401dfa:	9503      	str	r5, [sp, #12]
  401dfc:	46b4      	mov	ip, r6
  401dfe:	d062      	beq.n	401ec6 <_vfiprintf_r+0x3da>
  401e00:	9b04      	ldr	r3, [sp, #16]
  401e02:	3307      	adds	r3, #7
  401e04:	f023 0307 	bic.w	r3, r3, #7
  401e08:	f103 0208 	add.w	r2, r3, #8
  401e0c:	e9d3 6700 	ldrd	r6, r7, [r3]
  401e10:	9204      	str	r2, [sp, #16]
  401e12:	2300      	movs	r3, #0
  401e14:	e76d      	b.n	401cf2 <_vfiprintf_r+0x206>
  401e16:	f048 0840 	orr.w	r8, r8, #64	; 0x40
  401e1a:	f89b 3000 	ldrb.w	r3, [fp]
  401e1e:	4658      	mov	r0, fp
  401e20:	e6cd      	b.n	401bbe <_vfiprintf_r+0xd2>
  401e22:	f048 0880 	orr.w	r8, r8, #128	; 0x80
  401e26:	f89b 3000 	ldrb.w	r3, [fp]
  401e2a:	4658      	mov	r0, fp
  401e2c:	e6c7      	b.n	401bbe <_vfiprintf_r+0xd2>
  401e2e:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  401e32:	2500      	movs	r5, #0
  401e34:	f81b 3b01 	ldrb.w	r3, [fp], #1
  401e38:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  401e3c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
  401e40:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  401e44:	2a09      	cmp	r2, #9
  401e46:	d9f5      	bls.n	401e34 <_vfiprintf_r+0x348>
  401e48:	e6bb      	b.n	401bc2 <_vfiprintf_r+0xd6>
  401e4a:	f048 0810 	orr.w	r8, r8, #16
  401e4e:	f018 0f20 	tst.w	r8, #32
  401e52:	9503      	str	r5, [sp, #12]
  401e54:	46b4      	mov	ip, r6
  401e56:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  401e5a:	f000 809b 	beq.w	401f94 <_vfiprintf_r+0x4a8>
  401e5e:	9904      	ldr	r1, [sp, #16]
  401e60:	3107      	adds	r1, #7
  401e62:	f021 0107 	bic.w	r1, r1, #7
  401e66:	e9d1 2300 	ldrd	r2, r3, [r1]
  401e6a:	3108      	adds	r1, #8
  401e6c:	9104      	str	r1, [sp, #16]
  401e6e:	4616      	mov	r6, r2
  401e70:	461f      	mov	r7, r3
  401e72:	2a00      	cmp	r2, #0
  401e74:	f173 0300 	sbcs.w	r3, r3, #0
  401e78:	f2c0 83a6 	blt.w	4025c8 <_vfiprintf_r+0xadc>
  401e7c:	f1bc 0f00 	cmp.w	ip, #0
  401e80:	bfa8      	it	ge
  401e82:	f028 0880 	bicge.w	r8, r8, #128	; 0x80
  401e86:	ea56 0207 	orrs.w	r2, r6, r7
  401e8a:	f89d 502f 	ldrb.w	r5, [sp, #47]	; 0x2f
  401e8e:	46e1      	mov	r9, ip
  401e90:	f04f 0301 	mov.w	r3, #1
  401e94:	f43f af3c 	beq.w	401d10 <_vfiprintf_r+0x224>
  401e98:	2b01      	cmp	r3, #1
  401e9a:	f47f af40 	bne.w	401d1e <_vfiprintf_r+0x232>
  401e9e:	2f00      	cmp	r7, #0
  401ea0:	bf08      	it	eq
  401ea2:	2e0a      	cmpeq	r6, #10
  401ea4:	f080 8334 	bcs.w	402510 <_vfiprintf_r+0xa24>
  401ea8:	ab2a      	add	r3, sp, #168	; 0xa8
  401eaa:	3630      	adds	r6, #48	; 0x30
  401eac:	f803 6d41 	strb.w	r6, [r3, #-65]!
  401eb0:	ebc3 090a 	rsb	r9, r3, sl
  401eb4:	9307      	str	r3, [sp, #28]
  401eb6:	e74b      	b.n	401d50 <_vfiprintf_r+0x264>
  401eb8:	f048 0810 	orr.w	r8, r8, #16
  401ebc:	f018 0320 	ands.w	r3, r8, #32
  401ec0:	9503      	str	r5, [sp, #12]
  401ec2:	46b4      	mov	ip, r6
  401ec4:	d19c      	bne.n	401e00 <_vfiprintf_r+0x314>
  401ec6:	f018 0210 	ands.w	r2, r8, #16
  401eca:	f040 82f7 	bne.w	4024bc <_vfiprintf_r+0x9d0>
  401ece:	f018 0340 	ands.w	r3, r8, #64	; 0x40
  401ed2:	f000 82f3 	beq.w	4024bc <_vfiprintf_r+0x9d0>
  401ed6:	9904      	ldr	r1, [sp, #16]
  401ed8:	4613      	mov	r3, r2
  401eda:	460a      	mov	r2, r1
  401edc:	3204      	adds	r2, #4
  401ede:	880e      	ldrh	r6, [r1, #0]
  401ee0:	9204      	str	r2, [sp, #16]
  401ee2:	2700      	movs	r7, #0
  401ee4:	e705      	b.n	401cf2 <_vfiprintf_r+0x206>
  401ee6:	f048 0810 	orr.w	r8, r8, #16
  401eea:	f018 0f20 	tst.w	r8, #32
  401eee:	9503      	str	r5, [sp, #12]
  401ef0:	46b4      	mov	ip, r6
  401ef2:	f47f aef4 	bne.w	401cde <_vfiprintf_r+0x1f2>
  401ef6:	9a04      	ldr	r2, [sp, #16]
  401ef8:	f018 0f10 	tst.w	r8, #16
  401efc:	4613      	mov	r3, r2
  401efe:	f040 82e4 	bne.w	4024ca <_vfiprintf_r+0x9de>
  401f02:	f018 0f40 	tst.w	r8, #64	; 0x40
  401f06:	f000 82e0 	beq.w	4024ca <_vfiprintf_r+0x9de>
  401f0a:	8816      	ldrh	r6, [r2, #0]
  401f0c:	3204      	adds	r2, #4
  401f0e:	2700      	movs	r7, #0
  401f10:	2301      	movs	r3, #1
  401f12:	9204      	str	r2, [sp, #16]
  401f14:	e6ed      	b.n	401cf2 <_vfiprintf_r+0x206>
  401f16:	4a63      	ldr	r2, [pc, #396]	; (4020a4 <_vfiprintf_r+0x5b8>)
  401f18:	9503      	str	r5, [sp, #12]
  401f1a:	f018 0f20 	tst.w	r8, #32
  401f1e:	46b4      	mov	ip, r6
  401f20:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  401f24:	9209      	str	r2, [sp, #36]	; 0x24
  401f26:	f000 8090 	beq.w	40204a <_vfiprintf_r+0x55e>
  401f2a:	9a04      	ldr	r2, [sp, #16]
  401f2c:	3207      	adds	r2, #7
  401f2e:	f022 0207 	bic.w	r2, r2, #7
  401f32:	e9d2 6700 	ldrd	r6, r7, [r2]
  401f36:	f102 0108 	add.w	r1, r2, #8
  401f3a:	9104      	str	r1, [sp, #16]
  401f3c:	f018 0f01 	tst.w	r8, #1
  401f40:	f000 8290 	beq.w	402464 <_vfiprintf_r+0x978>
  401f44:	ea56 0207 	orrs.w	r2, r6, r7
  401f48:	f000 828c 	beq.w	402464 <_vfiprintf_r+0x978>
  401f4c:	2230      	movs	r2, #48	; 0x30
  401f4e:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
  401f52:	f048 0802 	orr.w	r8, r8, #2
  401f56:	f88d 2030 	strb.w	r2, [sp, #48]	; 0x30
  401f5a:	2302      	movs	r3, #2
  401f5c:	e6c9      	b.n	401cf2 <_vfiprintf_r+0x206>
  401f5e:	9a04      	ldr	r2, [sp, #16]
  401f60:	9503      	str	r5, [sp, #12]
  401f62:	6813      	ldr	r3, [r2, #0]
  401f64:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
  401f68:	4613      	mov	r3, r2
  401f6a:	3304      	adds	r3, #4
  401f6c:	2601      	movs	r6, #1
  401f6e:	f04f 0100 	mov.w	r1, #0
  401f72:	9304      	str	r3, [sp, #16]
  401f74:	ab10      	add	r3, sp, #64	; 0x40
  401f76:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  401f7a:	46b1      	mov	r9, r6
  401f7c:	9307      	str	r3, [sp, #28]
  401f7e:	f04f 0c00 	mov.w	ip, #0
  401f82:	e6eb      	b.n	401d5c <_vfiprintf_r+0x270>
  401f84:	f018 0f20 	tst.w	r8, #32
  401f88:	9503      	str	r5, [sp, #12]
  401f8a:	46b4      	mov	ip, r6
  401f8c:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  401f90:	f47f af65 	bne.w	401e5e <_vfiprintf_r+0x372>
  401f94:	f018 0f10 	tst.w	r8, #16
  401f98:	f040 82a2 	bne.w	4024e0 <_vfiprintf_r+0x9f4>
  401f9c:	f018 0f40 	tst.w	r8, #64	; 0x40
  401fa0:	f000 829e 	beq.w	4024e0 <_vfiprintf_r+0x9f4>
  401fa4:	9904      	ldr	r1, [sp, #16]
  401fa6:	f9b1 6000 	ldrsh.w	r6, [r1]
  401faa:	3104      	adds	r1, #4
  401fac:	17f7      	asrs	r7, r6, #31
  401fae:	4632      	mov	r2, r6
  401fb0:	463b      	mov	r3, r7
  401fb2:	9104      	str	r1, [sp, #16]
  401fb4:	e75d      	b.n	401e72 <_vfiprintf_r+0x386>
  401fb6:	9904      	ldr	r1, [sp, #16]
  401fb8:	9503      	str	r5, [sp, #12]
  401fba:	2330      	movs	r3, #48	; 0x30
  401fbc:	460a      	mov	r2, r1
  401fbe:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
  401fc2:	2378      	movs	r3, #120	; 0x78
  401fc4:	3204      	adds	r2, #4
  401fc6:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
  401fca:	4b37      	ldr	r3, [pc, #220]	; (4020a8 <_vfiprintf_r+0x5bc>)
  401fcc:	9309      	str	r3, [sp, #36]	; 0x24
  401fce:	46b4      	mov	ip, r6
  401fd0:	f048 0802 	orr.w	r8, r8, #2
  401fd4:	680e      	ldr	r6, [r1, #0]
  401fd6:	9204      	str	r2, [sp, #16]
  401fd8:	2700      	movs	r7, #0
  401fda:	2302      	movs	r3, #2
  401fdc:	e689      	b.n	401cf2 <_vfiprintf_r+0x206>
  401fde:	f048 0820 	orr.w	r8, r8, #32
  401fe2:	f89b 3000 	ldrb.w	r3, [fp]
  401fe6:	4658      	mov	r0, fp
  401fe8:	e5e9      	b.n	401bbe <_vfiprintf_r+0xd2>
  401fea:	9a04      	ldr	r2, [sp, #16]
  401fec:	9503      	str	r5, [sp, #12]
  401fee:	6813      	ldr	r3, [r2, #0]
  401ff0:	9307      	str	r3, [sp, #28]
  401ff2:	f04f 0100 	mov.w	r1, #0
  401ff6:	46b4      	mov	ip, r6
  401ff8:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  401ffc:	1d16      	adds	r6, r2, #4
  401ffe:	2b00      	cmp	r3, #0
  402000:	f000 8350 	beq.w	4026a4 <_vfiprintf_r+0xbb8>
  402004:	f1bc 0f00 	cmp.w	ip, #0
  402008:	f2c0 832a 	blt.w	402660 <_vfiprintf_r+0xb74>
  40200c:	9d07      	ldr	r5, [sp, #28]
  40200e:	f8cd c010 	str.w	ip, [sp, #16]
  402012:	4662      	mov	r2, ip
  402014:	4628      	mov	r0, r5
  402016:	2100      	movs	r1, #0
  402018:	f001 fbd6 	bl	4037c8 <memchr>
  40201c:	f8dd c010 	ldr.w	ip, [sp, #16]
  402020:	2800      	cmp	r0, #0
  402022:	f000 8350 	beq.w	4026c6 <_vfiprintf_r+0xbda>
  402026:	ebc5 0900 	rsb	r9, r5, r0
  40202a:	9604      	str	r6, [sp, #16]
  40202c:	f89d 502f 	ldrb.w	r5, [sp, #47]	; 0x2f
  402030:	f04f 0c00 	mov.w	ip, #0
  402034:	e68c      	b.n	401d50 <_vfiprintf_r+0x264>
  402036:	4a1c      	ldr	r2, [pc, #112]	; (4020a8 <_vfiprintf_r+0x5bc>)
  402038:	9503      	str	r5, [sp, #12]
  40203a:	f018 0f20 	tst.w	r8, #32
  40203e:	46b4      	mov	ip, r6
  402040:	9209      	str	r2, [sp, #36]	; 0x24
  402042:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  402046:	f47f af70 	bne.w	401f2a <_vfiprintf_r+0x43e>
  40204a:	9904      	ldr	r1, [sp, #16]
  40204c:	f018 0f10 	tst.w	r8, #16
  402050:	460a      	mov	r2, r1
  402052:	f040 8240 	bne.w	4024d6 <_vfiprintf_r+0x9ea>
  402056:	f018 0f40 	tst.w	r8, #64	; 0x40
  40205a:	f000 823c 	beq.w	4024d6 <_vfiprintf_r+0x9ea>
  40205e:	3204      	adds	r2, #4
  402060:	880e      	ldrh	r6, [r1, #0]
  402062:	9204      	str	r2, [sp, #16]
  402064:	2700      	movs	r7, #0
  402066:	e769      	b.n	401f3c <_vfiprintf_r+0x450>
  402068:	f89b 3000 	ldrb.w	r3, [fp]
  40206c:	2b6c      	cmp	r3, #108	; 0x6c
  40206e:	f000 82ea 	beq.w	402646 <_vfiprintf_r+0xb5a>
  402072:	f048 0810 	orr.w	r8, r8, #16
  402076:	4658      	mov	r0, fp
  402078:	e5a1      	b.n	401bbe <_vfiprintf_r+0xd2>
  40207a:	9a04      	ldr	r2, [sp, #16]
  40207c:	6815      	ldr	r5, [r2, #0]
  40207e:	4613      	mov	r3, r2
  402080:	2d00      	cmp	r5, #0
  402082:	f103 0304 	add.w	r3, r3, #4
  402086:	f2c0 82e6 	blt.w	402656 <_vfiprintf_r+0xb6a>
  40208a:	9304      	str	r3, [sp, #16]
  40208c:	f89b 3000 	ldrb.w	r3, [fp]
  402090:	4658      	mov	r0, fp
  402092:	e594      	b.n	401bbe <_vfiprintf_r+0xd2>
  402094:	f89b 3000 	ldrb.w	r3, [fp]
  402098:	4658      	mov	r0, fp
  40209a:	212b      	movs	r1, #43	; 0x2b
  40209c:	e58f      	b.n	401bbe <_vfiprintf_r+0xd2>
  40209e:	bf00      	nop
  4020a0:	00404948 	.word	0x00404948
  4020a4:	00404918 	.word	0x00404918
  4020a8:	0040492c 	.word	0x0040492c
  4020ac:	f89b 3000 	ldrb.w	r3, [fp]
  4020b0:	2b2a      	cmp	r3, #42	; 0x2a
  4020b2:	f10b 0001 	add.w	r0, fp, #1
  4020b6:	f000 830f 	beq.w	4026d8 <_vfiprintf_r+0xbec>
  4020ba:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  4020be:	2a09      	cmp	r2, #9
  4020c0:	4683      	mov	fp, r0
  4020c2:	f04f 0600 	mov.w	r6, #0
  4020c6:	f63f ad7c 	bhi.w	401bc2 <_vfiprintf_r+0xd6>
  4020ca:	f81b 3b01 	ldrb.w	r3, [fp], #1
  4020ce:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  4020d2:	eb02 0646 	add.w	r6, r2, r6, lsl #1
  4020d6:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  4020da:	2a09      	cmp	r2, #9
  4020dc:	d9f5      	bls.n	4020ca <_vfiprintf_r+0x5de>
  4020de:	ea46 76e6 	orr.w	r6, r6, r6, asr #31
  4020e2:	e56e      	b.n	401bc2 <_vfiprintf_r+0xd6>
  4020e4:	f018 0f20 	tst.w	r8, #32
  4020e8:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  4020ec:	f000 8283 	beq.w	4025f6 <_vfiprintf_r+0xb0a>
  4020f0:	9a04      	ldr	r2, [sp, #16]
  4020f2:	9902      	ldr	r1, [sp, #8]
  4020f4:	6813      	ldr	r3, [r2, #0]
  4020f6:	17cf      	asrs	r7, r1, #31
  4020f8:	4608      	mov	r0, r1
  4020fa:	3204      	adds	r2, #4
  4020fc:	4639      	mov	r1, r7
  4020fe:	9204      	str	r2, [sp, #16]
  402100:	e9c3 0100 	strd	r0, r1, [r3]
  402104:	e524      	b.n	401b50 <_vfiprintf_r+0x64>
  402106:	4658      	mov	r0, fp
  402108:	f89b 3000 	ldrb.w	r3, [fp]
  40210c:	2900      	cmp	r1, #0
  40210e:	f47f ad56 	bne.w	401bbe <_vfiprintf_r+0xd2>
  402112:	2120      	movs	r1, #32
  402114:	e553      	b.n	401bbe <_vfiprintf_r+0xd2>
  402116:	f048 0801 	orr.w	r8, r8, #1
  40211a:	4658      	mov	r0, fp
  40211c:	f89b 3000 	ldrb.w	r3, [fp]
  402120:	e54d      	b.n	401bbe <_vfiprintf_r+0xd2>
  402122:	9503      	str	r5, [sp, #12]
  402124:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  402128:	2b00      	cmp	r3, #0
  40212a:	f000 809c 	beq.w	402266 <_vfiprintf_r+0x77a>
  40212e:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
  402132:	f04f 0300 	mov.w	r3, #0
  402136:	2601      	movs	r6, #1
  402138:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  40213c:	ab10      	add	r3, sp, #64	; 0x40
  40213e:	46b1      	mov	r9, r6
  402140:	9307      	str	r3, [sp, #28]
  402142:	e71c      	b.n	401f7e <_vfiprintf_r+0x492>
  402144:	9801      	ldr	r0, [sp, #4]
  402146:	9900      	ldr	r1, [sp, #0]
  402148:	9308      	str	r3, [sp, #32]
  40214a:	aa0d      	add	r2, sp, #52	; 0x34
  40214c:	f7ff fc92 	bl	401a74 <__sprint_r.part.0>
  402150:	2800      	cmp	r0, #0
  402152:	f040 808f 	bne.w	402274 <_vfiprintf_r+0x788>
  402156:	990e      	ldr	r1, [sp, #56]	; 0x38
  402158:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40215a:	9b08      	ldr	r3, [sp, #32]
  40215c:	f101 0e01 	add.w	lr, r1, #1
  402160:	46d4      	mov	ip, sl
  402162:	e61c      	b.n	401d9e <_vfiprintf_r+0x2b2>
  402164:	990e      	ldr	r1, [sp, #56]	; 0x38
  402166:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402168:	1c48      	adds	r0, r1, #1
  40216a:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
  40216e:	b16b      	cbz	r3, 40218c <_vfiprintf_r+0x6a0>
  402170:	3201      	adds	r2, #1
  402172:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
  402176:	2101      	movs	r1, #1
  402178:	2807      	cmp	r0, #7
  40217a:	920f      	str	r2, [sp, #60]	; 0x3c
  40217c:	900e      	str	r0, [sp, #56]	; 0x38
  40217e:	6023      	str	r3, [r4, #0]
  402180:	6061      	str	r1, [r4, #4]
  402182:	f300 8134 	bgt.w	4023ee <_vfiprintf_r+0x902>
  402186:	4601      	mov	r1, r0
  402188:	3408      	adds	r4, #8
  40218a:	3001      	adds	r0, #1
  40218c:	9b05      	ldr	r3, [sp, #20]
  40218e:	b163      	cbz	r3, 4021aa <_vfiprintf_r+0x6be>
  402190:	3202      	adds	r2, #2
  402192:	a90c      	add	r1, sp, #48	; 0x30
  402194:	2302      	movs	r3, #2
  402196:	2807      	cmp	r0, #7
  402198:	920f      	str	r2, [sp, #60]	; 0x3c
  40219a:	900e      	str	r0, [sp, #56]	; 0x38
  40219c:	e884 000a 	stmia.w	r4, {r1, r3}
  4021a0:	f300 8134 	bgt.w	40240c <_vfiprintf_r+0x920>
  4021a4:	4601      	mov	r1, r0
  4021a6:	3408      	adds	r4, #8
  4021a8:	3001      	adds	r0, #1
  4021aa:	9b06      	ldr	r3, [sp, #24]
  4021ac:	2b80      	cmp	r3, #128	; 0x80
  4021ae:	f000 80d4 	beq.w	40235a <_vfiprintf_r+0x86e>
  4021b2:	ebc9 070c 	rsb	r7, r9, ip
  4021b6:	2f00      	cmp	r7, #0
  4021b8:	dd2b      	ble.n	402212 <_vfiprintf_r+0x726>
  4021ba:	2f10      	cmp	r7, #16
  4021bc:	4daa      	ldr	r5, [pc, #680]	; (402468 <_vfiprintf_r+0x97c>)
  4021be:	dd1f      	ble.n	402200 <_vfiprintf_r+0x714>
  4021c0:	46a6      	mov	lr, r4
  4021c2:	2310      	movs	r3, #16
  4021c4:	9c01      	ldr	r4, [sp, #4]
  4021c6:	e007      	b.n	4021d8 <_vfiprintf_r+0x6ec>
  4021c8:	f101 0c02 	add.w	ip, r1, #2
  4021cc:	f10e 0e08 	add.w	lr, lr, #8
  4021d0:	4601      	mov	r1, r0
  4021d2:	3f10      	subs	r7, #16
  4021d4:	2f10      	cmp	r7, #16
  4021d6:	dd11      	ble.n	4021fc <_vfiprintf_r+0x710>
  4021d8:	1c48      	adds	r0, r1, #1
  4021da:	3210      	adds	r2, #16
  4021dc:	2807      	cmp	r0, #7
  4021de:	920f      	str	r2, [sp, #60]	; 0x3c
  4021e0:	f8ce 5000 	str.w	r5, [lr]
  4021e4:	f8ce 3004 	str.w	r3, [lr, #4]
  4021e8:	900e      	str	r0, [sp, #56]	; 0x38
  4021ea:	dded      	ble.n	4021c8 <_vfiprintf_r+0x6dc>
  4021ec:	bb6a      	cbnz	r2, 40224a <_vfiprintf_r+0x75e>
  4021ee:	3f10      	subs	r7, #16
  4021f0:	2f10      	cmp	r7, #16
  4021f2:	f04f 0c01 	mov.w	ip, #1
  4021f6:	4611      	mov	r1, r2
  4021f8:	46d6      	mov	lr, sl
  4021fa:	dced      	bgt.n	4021d8 <_vfiprintf_r+0x6ec>
  4021fc:	4674      	mov	r4, lr
  4021fe:	4660      	mov	r0, ip
  402200:	443a      	add	r2, r7
  402202:	2807      	cmp	r0, #7
  402204:	920f      	str	r2, [sp, #60]	; 0x3c
  402206:	e884 00a0 	stmia.w	r4, {r5, r7}
  40220a:	900e      	str	r0, [sp, #56]	; 0x38
  40220c:	dc3b      	bgt.n	402286 <_vfiprintf_r+0x79a>
  40220e:	3408      	adds	r4, #8
  402210:	3001      	adds	r0, #1
  402212:	eb02 0309 	add.w	r3, r2, r9
  402216:	9a07      	ldr	r2, [sp, #28]
  402218:	930f      	str	r3, [sp, #60]	; 0x3c
  40221a:	2807      	cmp	r0, #7
  40221c:	e884 0204 	stmia.w	r4, {r2, r9}
  402220:	900e      	str	r0, [sp, #56]	; 0x38
  402222:	dd3d      	ble.n	4022a0 <_vfiprintf_r+0x7b4>
  402224:	2b00      	cmp	r3, #0
  402226:	f040 813e 	bne.w	4024a6 <_vfiprintf_r+0x9ba>
  40222a:	f018 0f04 	tst.w	r8, #4
  40222e:	930e      	str	r3, [sp, #56]	; 0x38
  402230:	f040 812f 	bne.w	402492 <_vfiprintf_r+0x9a6>
  402234:	9b02      	ldr	r3, [sp, #8]
  402236:	9a03      	ldr	r2, [sp, #12]
  402238:	4296      	cmp	r6, r2
  40223a:	bfac      	ite	ge
  40223c:	199b      	addge	r3, r3, r6
  40223e:	189b      	addlt	r3, r3, r2
  402240:	9302      	str	r3, [sp, #8]
  402242:	2300      	movs	r3, #0
  402244:	930e      	str	r3, [sp, #56]	; 0x38
  402246:	4654      	mov	r4, sl
  402248:	e482      	b.n	401b50 <_vfiprintf_r+0x64>
  40224a:	4620      	mov	r0, r4
  40224c:	9900      	ldr	r1, [sp, #0]
  40224e:	9305      	str	r3, [sp, #20]
  402250:	aa0d      	add	r2, sp, #52	; 0x34
  402252:	f7ff fc0f 	bl	401a74 <__sprint_r.part.0>
  402256:	b968      	cbnz	r0, 402274 <_vfiprintf_r+0x788>
  402258:	990e      	ldr	r1, [sp, #56]	; 0x38
  40225a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40225c:	9b05      	ldr	r3, [sp, #20]
  40225e:	f101 0c01 	add.w	ip, r1, #1
  402262:	46d6      	mov	lr, sl
  402264:	e7b5      	b.n	4021d2 <_vfiprintf_r+0x6e6>
  402266:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  402268:	b123      	cbz	r3, 402274 <_vfiprintf_r+0x788>
  40226a:	9801      	ldr	r0, [sp, #4]
  40226c:	9900      	ldr	r1, [sp, #0]
  40226e:	aa0d      	add	r2, sp, #52	; 0x34
  402270:	f7ff fc00 	bl	401a74 <__sprint_r.part.0>
  402274:	9b00      	ldr	r3, [sp, #0]
  402276:	899b      	ldrh	r3, [r3, #12]
  402278:	065b      	lsls	r3, r3, #25
  40227a:	f53f ad22 	bmi.w	401cc2 <_vfiprintf_r+0x1d6>
  40227e:	9802      	ldr	r0, [sp, #8]
  402280:	b02b      	add	sp, #172	; 0xac
  402282:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402286:	2a00      	cmp	r2, #0
  402288:	f040 8191 	bne.w	4025ae <_vfiprintf_r+0xac2>
  40228c:	2201      	movs	r2, #1
  40228e:	9907      	ldr	r1, [sp, #28]
  402290:	f8cd 906c 	str.w	r9, [sp, #108]	; 0x6c
  402294:	464b      	mov	r3, r9
  402296:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  40229a:	911a      	str	r1, [sp, #104]	; 0x68
  40229c:	920e      	str	r2, [sp, #56]	; 0x38
  40229e:	4654      	mov	r4, sl
  4022a0:	f104 0208 	add.w	r2, r4, #8
  4022a4:	f018 0f04 	tst.w	r8, #4
  4022a8:	d039      	beq.n	40231e <_vfiprintf_r+0x832>
  4022aa:	9903      	ldr	r1, [sp, #12]
  4022ac:	1b8d      	subs	r5, r1, r6
  4022ae:	2d00      	cmp	r5, #0
  4022b0:	dd35      	ble.n	40231e <_vfiprintf_r+0x832>
  4022b2:	2d10      	cmp	r5, #16
  4022b4:	f340 8202 	ble.w	4026bc <_vfiprintf_r+0xbd0>
  4022b8:	980e      	ldr	r0, [sp, #56]	; 0x38
  4022ba:	4f6c      	ldr	r7, [pc, #432]	; (40246c <_vfiprintf_r+0x980>)
  4022bc:	f8dd 8004 	ldr.w	r8, [sp, #4]
  4022c0:	f8dd 9000 	ldr.w	r9, [sp]
  4022c4:	2410      	movs	r4, #16
  4022c6:	e006      	b.n	4022d6 <_vfiprintf_r+0x7ea>
  4022c8:	f100 0e02 	add.w	lr, r0, #2
  4022cc:	3208      	adds	r2, #8
  4022ce:	4608      	mov	r0, r1
  4022d0:	3d10      	subs	r5, #16
  4022d2:	2d10      	cmp	r5, #16
  4022d4:	dd10      	ble.n	4022f8 <_vfiprintf_r+0x80c>
  4022d6:	1c41      	adds	r1, r0, #1
  4022d8:	3310      	adds	r3, #16
  4022da:	2907      	cmp	r1, #7
  4022dc:	930f      	str	r3, [sp, #60]	; 0x3c
  4022de:	6017      	str	r7, [r2, #0]
  4022e0:	6054      	str	r4, [r2, #4]
  4022e2:	910e      	str	r1, [sp, #56]	; 0x38
  4022e4:	ddf0      	ble.n	4022c8 <_vfiprintf_r+0x7dc>
  4022e6:	2b00      	cmp	r3, #0
  4022e8:	d12a      	bne.n	402340 <_vfiprintf_r+0x854>
  4022ea:	3d10      	subs	r5, #16
  4022ec:	2d10      	cmp	r5, #16
  4022ee:	f04f 0e01 	mov.w	lr, #1
  4022f2:	4618      	mov	r0, r3
  4022f4:	4652      	mov	r2, sl
  4022f6:	dcee      	bgt.n	4022d6 <_vfiprintf_r+0x7ea>
  4022f8:	442b      	add	r3, r5
  4022fa:	f1be 0f07 	cmp.w	lr, #7
  4022fe:	930f      	str	r3, [sp, #60]	; 0x3c
  402300:	6017      	str	r7, [r2, #0]
  402302:	6055      	str	r5, [r2, #4]
  402304:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  402308:	dd09      	ble.n	40231e <_vfiprintf_r+0x832>
  40230a:	2b00      	cmp	r3, #0
  40230c:	d092      	beq.n	402234 <_vfiprintf_r+0x748>
  40230e:	9801      	ldr	r0, [sp, #4]
  402310:	9900      	ldr	r1, [sp, #0]
  402312:	aa0d      	add	r2, sp, #52	; 0x34
  402314:	f7ff fbae 	bl	401a74 <__sprint_r.part.0>
  402318:	2800      	cmp	r0, #0
  40231a:	d1ab      	bne.n	402274 <_vfiprintf_r+0x788>
  40231c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40231e:	9a02      	ldr	r2, [sp, #8]
  402320:	9903      	ldr	r1, [sp, #12]
  402322:	428e      	cmp	r6, r1
  402324:	bfac      	ite	ge
  402326:	1992      	addge	r2, r2, r6
  402328:	1852      	addlt	r2, r2, r1
  40232a:	9202      	str	r2, [sp, #8]
  40232c:	2b00      	cmp	r3, #0
  40232e:	d088      	beq.n	402242 <_vfiprintf_r+0x756>
  402330:	9801      	ldr	r0, [sp, #4]
  402332:	9900      	ldr	r1, [sp, #0]
  402334:	aa0d      	add	r2, sp, #52	; 0x34
  402336:	f7ff fb9d 	bl	401a74 <__sprint_r.part.0>
  40233a:	2800      	cmp	r0, #0
  40233c:	d081      	beq.n	402242 <_vfiprintf_r+0x756>
  40233e:	e799      	b.n	402274 <_vfiprintf_r+0x788>
  402340:	4640      	mov	r0, r8
  402342:	4649      	mov	r1, r9
  402344:	aa0d      	add	r2, sp, #52	; 0x34
  402346:	f7ff fb95 	bl	401a74 <__sprint_r.part.0>
  40234a:	2800      	cmp	r0, #0
  40234c:	d192      	bne.n	402274 <_vfiprintf_r+0x788>
  40234e:	980e      	ldr	r0, [sp, #56]	; 0x38
  402350:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  402352:	f100 0e01 	add.w	lr, r0, #1
  402356:	4652      	mov	r2, sl
  402358:	e7ba      	b.n	4022d0 <_vfiprintf_r+0x7e4>
  40235a:	9b03      	ldr	r3, [sp, #12]
  40235c:	1b9f      	subs	r7, r3, r6
  40235e:	2f00      	cmp	r7, #0
  402360:	f77f af27 	ble.w	4021b2 <_vfiprintf_r+0x6c6>
  402364:	2f10      	cmp	r7, #16
  402366:	4d40      	ldr	r5, [pc, #256]	; (402468 <_vfiprintf_r+0x97c>)
  402368:	f340 81b4 	ble.w	4026d4 <_vfiprintf_r+0xbe8>
  40236c:	4620      	mov	r0, r4
  40236e:	2310      	movs	r3, #16
  402370:	4664      	mov	r4, ip
  402372:	4684      	mov	ip, r0
  402374:	e007      	b.n	402386 <_vfiprintf_r+0x89a>
  402376:	f101 0e02 	add.w	lr, r1, #2
  40237a:	f10c 0c08 	add.w	ip, ip, #8
  40237e:	4601      	mov	r1, r0
  402380:	3f10      	subs	r7, #16
  402382:	2f10      	cmp	r7, #16
  402384:	dd11      	ble.n	4023aa <_vfiprintf_r+0x8be>
  402386:	1c48      	adds	r0, r1, #1
  402388:	3210      	adds	r2, #16
  40238a:	2807      	cmp	r0, #7
  40238c:	920f      	str	r2, [sp, #60]	; 0x3c
  40238e:	f8cc 5000 	str.w	r5, [ip]
  402392:	f8cc 3004 	str.w	r3, [ip, #4]
  402396:	900e      	str	r0, [sp, #56]	; 0x38
  402398:	dded      	ble.n	402376 <_vfiprintf_r+0x88a>
  40239a:	b9c2      	cbnz	r2, 4023ce <_vfiprintf_r+0x8e2>
  40239c:	3f10      	subs	r7, #16
  40239e:	2f10      	cmp	r7, #16
  4023a0:	f04f 0e01 	mov.w	lr, #1
  4023a4:	4611      	mov	r1, r2
  4023a6:	46d4      	mov	ip, sl
  4023a8:	dced      	bgt.n	402386 <_vfiprintf_r+0x89a>
  4023aa:	4663      	mov	r3, ip
  4023ac:	46a4      	mov	ip, r4
  4023ae:	461c      	mov	r4, r3
  4023b0:	443a      	add	r2, r7
  4023b2:	f1be 0f07 	cmp.w	lr, #7
  4023b6:	920f      	str	r2, [sp, #60]	; 0x3c
  4023b8:	e884 00a0 	stmia.w	r4, {r5, r7}
  4023bc:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  4023c0:	f300 80ef 	bgt.w	4025a2 <_vfiprintf_r+0xab6>
  4023c4:	3408      	adds	r4, #8
  4023c6:	f10e 0001 	add.w	r0, lr, #1
  4023ca:	4671      	mov	r1, lr
  4023cc:	e6f1      	b.n	4021b2 <_vfiprintf_r+0x6c6>
  4023ce:	9801      	ldr	r0, [sp, #4]
  4023d0:	9900      	ldr	r1, [sp, #0]
  4023d2:	9305      	str	r3, [sp, #20]
  4023d4:	aa0d      	add	r2, sp, #52	; 0x34
  4023d6:	f7ff fb4d 	bl	401a74 <__sprint_r.part.0>
  4023da:	2800      	cmp	r0, #0
  4023dc:	f47f af4a 	bne.w	402274 <_vfiprintf_r+0x788>
  4023e0:	990e      	ldr	r1, [sp, #56]	; 0x38
  4023e2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4023e4:	9b05      	ldr	r3, [sp, #20]
  4023e6:	f101 0e01 	add.w	lr, r1, #1
  4023ea:	46d4      	mov	ip, sl
  4023ec:	e7c8      	b.n	402380 <_vfiprintf_r+0x894>
  4023ee:	2a00      	cmp	r2, #0
  4023f0:	f040 80c6 	bne.w	402580 <_vfiprintf_r+0xa94>
  4023f4:	9b05      	ldr	r3, [sp, #20]
  4023f6:	2b00      	cmp	r3, #0
  4023f8:	f000 8086 	beq.w	402508 <_vfiprintf_r+0xa1c>
  4023fc:	aa0c      	add	r2, sp, #48	; 0x30
  4023fe:	2302      	movs	r3, #2
  402400:	921a      	str	r2, [sp, #104]	; 0x68
  402402:	4608      	mov	r0, r1
  402404:	931b      	str	r3, [sp, #108]	; 0x6c
  402406:	461a      	mov	r2, r3
  402408:	4654      	mov	r4, sl
  40240a:	e6cb      	b.n	4021a4 <_vfiprintf_r+0x6b8>
  40240c:	2a00      	cmp	r2, #0
  40240e:	f040 80a6 	bne.w	40255e <_vfiprintf_r+0xa72>
  402412:	2001      	movs	r0, #1
  402414:	4611      	mov	r1, r2
  402416:	4654      	mov	r4, sl
  402418:	e6c7      	b.n	4021aa <_vfiprintf_r+0x6be>
  40241a:	bb03      	cbnz	r3, 40245e <_vfiprintf_r+0x972>
  40241c:	f018 0f01 	tst.w	r8, #1
  402420:	d01d      	beq.n	40245e <_vfiprintf_r+0x972>
  402422:	ab2a      	add	r3, sp, #168	; 0xa8
  402424:	2230      	movs	r2, #48	; 0x30
  402426:	f803 2d41 	strb.w	r2, [r3, #-65]!
  40242a:	ebc3 090a 	rsb	r9, r3, sl
  40242e:	9307      	str	r3, [sp, #28]
  402430:	e48e      	b.n	401d50 <_vfiprintf_r+0x264>
  402432:	9809      	ldr	r0, [sp, #36]	; 0x24
  402434:	46d1      	mov	r9, sl
  402436:	0933      	lsrs	r3, r6, #4
  402438:	f006 010f 	and.w	r1, r6, #15
  40243c:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  402440:	093a      	lsrs	r2, r7, #4
  402442:	461e      	mov	r6, r3
  402444:	4617      	mov	r7, r2
  402446:	5c43      	ldrb	r3, [r0, r1]
  402448:	f809 3d01 	strb.w	r3, [r9, #-1]!
  40244c:	ea56 0307 	orrs.w	r3, r6, r7
  402450:	d1f1      	bne.n	402436 <_vfiprintf_r+0x94a>
  402452:	464b      	mov	r3, r9
  402454:	f8cd 901c 	str.w	r9, [sp, #28]
  402458:	ebc3 090a 	rsb	r9, r3, sl
  40245c:	e478      	b.n	401d50 <_vfiprintf_r+0x264>
  40245e:	f8cd a01c 	str.w	sl, [sp, #28]
  402462:	e475      	b.n	401d50 <_vfiprintf_r+0x264>
  402464:	2302      	movs	r3, #2
  402466:	e444      	b.n	401cf2 <_vfiprintf_r+0x206>
  402468:	00404908 	.word	0x00404908
  40246c:	00404948 	.word	0x00404948
  402470:	2a00      	cmp	r2, #0
  402472:	f040 80d7 	bne.w	402624 <_vfiprintf_r+0xb38>
  402476:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
  40247a:	2b00      	cmp	r3, #0
  40247c:	f000 80ae 	beq.w	4025dc <_vfiprintf_r+0xaf0>
  402480:	2301      	movs	r3, #1
  402482:	f10d 012f 	add.w	r1, sp, #47	; 0x2f
  402486:	4618      	mov	r0, r3
  402488:	931b      	str	r3, [sp, #108]	; 0x6c
  40248a:	461a      	mov	r2, r3
  40248c:	911a      	str	r1, [sp, #104]	; 0x68
  40248e:	4654      	mov	r4, sl
  402490:	e679      	b.n	402186 <_vfiprintf_r+0x69a>
  402492:	9a03      	ldr	r2, [sp, #12]
  402494:	1b95      	subs	r5, r2, r6
  402496:	2d00      	cmp	r5, #0
  402498:	4652      	mov	r2, sl
  40249a:	f73f af0a 	bgt.w	4022b2 <_vfiprintf_r+0x7c6>
  40249e:	e6c9      	b.n	402234 <_vfiprintf_r+0x748>
  4024a0:	465d      	mov	r5, fp
  4024a2:	f7ff bb7c 	b.w	401b9e <_vfiprintf_r+0xb2>
  4024a6:	9801      	ldr	r0, [sp, #4]
  4024a8:	9900      	ldr	r1, [sp, #0]
  4024aa:	aa0d      	add	r2, sp, #52	; 0x34
  4024ac:	f7ff fae2 	bl	401a74 <__sprint_r.part.0>
  4024b0:	2800      	cmp	r0, #0
  4024b2:	f47f aedf 	bne.w	402274 <_vfiprintf_r+0x788>
  4024b6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4024b8:	4652      	mov	r2, sl
  4024ba:	e6f3      	b.n	4022a4 <_vfiprintf_r+0x7b8>
  4024bc:	9904      	ldr	r1, [sp, #16]
  4024be:	460a      	mov	r2, r1
  4024c0:	3204      	adds	r2, #4
  4024c2:	680e      	ldr	r6, [r1, #0]
  4024c4:	9204      	str	r2, [sp, #16]
  4024c6:	2700      	movs	r7, #0
  4024c8:	e413      	b.n	401cf2 <_vfiprintf_r+0x206>
  4024ca:	3204      	adds	r2, #4
  4024cc:	681e      	ldr	r6, [r3, #0]
  4024ce:	9204      	str	r2, [sp, #16]
  4024d0:	2301      	movs	r3, #1
  4024d2:	2700      	movs	r7, #0
  4024d4:	e40d      	b.n	401cf2 <_vfiprintf_r+0x206>
  4024d6:	6816      	ldr	r6, [r2, #0]
  4024d8:	3204      	adds	r2, #4
  4024da:	9204      	str	r2, [sp, #16]
  4024dc:	2700      	movs	r7, #0
  4024de:	e52d      	b.n	401f3c <_vfiprintf_r+0x450>
  4024e0:	9a04      	ldr	r2, [sp, #16]
  4024e2:	6816      	ldr	r6, [r2, #0]
  4024e4:	4613      	mov	r3, r2
  4024e6:	3304      	adds	r3, #4
  4024e8:	17f7      	asrs	r7, r6, #31
  4024ea:	9304      	str	r3, [sp, #16]
  4024ec:	4632      	mov	r2, r6
  4024ee:	463b      	mov	r3, r7
  4024f0:	e4bf      	b.n	401e72 <_vfiprintf_r+0x386>
  4024f2:	9801      	ldr	r0, [sp, #4]
  4024f4:	9900      	ldr	r1, [sp, #0]
  4024f6:	aa0d      	add	r2, sp, #52	; 0x34
  4024f8:	f7ff fabc 	bl	401a74 <__sprint_r.part.0>
  4024fc:	2800      	cmp	r0, #0
  4024fe:	f47f aeb9 	bne.w	402274 <_vfiprintf_r+0x788>
  402502:	4654      	mov	r4, sl
  402504:	f7ff bbbe 	b.w	401c84 <_vfiprintf_r+0x198>
  402508:	4608      	mov	r0, r1
  40250a:	4654      	mov	r4, sl
  40250c:	4611      	mov	r1, r2
  40250e:	e64c      	b.n	4021aa <_vfiprintf_r+0x6be>
  402510:	46d1      	mov	r9, sl
  402512:	f8cd c014 	str.w	ip, [sp, #20]
  402516:	4630      	mov	r0, r6
  402518:	4639      	mov	r1, r7
  40251a:	220a      	movs	r2, #10
  40251c:	2300      	movs	r3, #0
  40251e:	f001 fe7d 	bl	40421c <__aeabi_uldivmod>
  402522:	3230      	adds	r2, #48	; 0x30
  402524:	4630      	mov	r0, r6
  402526:	4639      	mov	r1, r7
  402528:	f809 2d01 	strb.w	r2, [r9, #-1]!
  40252c:	2300      	movs	r3, #0
  40252e:	220a      	movs	r2, #10
  402530:	f001 fe74 	bl	40421c <__aeabi_uldivmod>
  402534:	4606      	mov	r6, r0
  402536:	460f      	mov	r7, r1
  402538:	ea56 0307 	orrs.w	r3, r6, r7
  40253c:	d1eb      	bne.n	402516 <_vfiprintf_r+0xa2a>
  40253e:	f8dd c014 	ldr.w	ip, [sp, #20]
  402542:	e786      	b.n	402452 <_vfiprintf_r+0x966>
  402544:	2b30      	cmp	r3, #48	; 0x30
  402546:	9b07      	ldr	r3, [sp, #28]
  402548:	d086      	beq.n	402458 <_vfiprintf_r+0x96c>
  40254a:	3b01      	subs	r3, #1
  40254c:	461a      	mov	r2, r3
  40254e:	9307      	str	r3, [sp, #28]
  402550:	2330      	movs	r3, #48	; 0x30
  402552:	ebc2 090a 	rsb	r9, r2, sl
  402556:	f801 3c01 	strb.w	r3, [r1, #-1]
  40255a:	f7ff bbf9 	b.w	401d50 <_vfiprintf_r+0x264>
  40255e:	9801      	ldr	r0, [sp, #4]
  402560:	9900      	ldr	r1, [sp, #0]
  402562:	f8cd c014 	str.w	ip, [sp, #20]
  402566:	aa0d      	add	r2, sp, #52	; 0x34
  402568:	f7ff fa84 	bl	401a74 <__sprint_r.part.0>
  40256c:	2800      	cmp	r0, #0
  40256e:	f47f ae81 	bne.w	402274 <_vfiprintf_r+0x788>
  402572:	990e      	ldr	r1, [sp, #56]	; 0x38
  402574:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402576:	f8dd c014 	ldr.w	ip, [sp, #20]
  40257a:	1c48      	adds	r0, r1, #1
  40257c:	4654      	mov	r4, sl
  40257e:	e614      	b.n	4021aa <_vfiprintf_r+0x6be>
  402580:	9801      	ldr	r0, [sp, #4]
  402582:	9900      	ldr	r1, [sp, #0]
  402584:	f8cd c020 	str.w	ip, [sp, #32]
  402588:	aa0d      	add	r2, sp, #52	; 0x34
  40258a:	f7ff fa73 	bl	401a74 <__sprint_r.part.0>
  40258e:	2800      	cmp	r0, #0
  402590:	f47f ae70 	bne.w	402274 <_vfiprintf_r+0x788>
  402594:	990e      	ldr	r1, [sp, #56]	; 0x38
  402596:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402598:	f8dd c020 	ldr.w	ip, [sp, #32]
  40259c:	1c48      	adds	r0, r1, #1
  40259e:	4654      	mov	r4, sl
  4025a0:	e5f4      	b.n	40218c <_vfiprintf_r+0x6a0>
  4025a2:	2a00      	cmp	r2, #0
  4025a4:	d167      	bne.n	402676 <_vfiprintf_r+0xb8a>
  4025a6:	2001      	movs	r0, #1
  4025a8:	4611      	mov	r1, r2
  4025aa:	4654      	mov	r4, sl
  4025ac:	e601      	b.n	4021b2 <_vfiprintf_r+0x6c6>
  4025ae:	9801      	ldr	r0, [sp, #4]
  4025b0:	9900      	ldr	r1, [sp, #0]
  4025b2:	aa0d      	add	r2, sp, #52	; 0x34
  4025b4:	f7ff fa5e 	bl	401a74 <__sprint_r.part.0>
  4025b8:	2800      	cmp	r0, #0
  4025ba:	f47f ae5b 	bne.w	402274 <_vfiprintf_r+0x788>
  4025be:	980e      	ldr	r0, [sp, #56]	; 0x38
  4025c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4025c2:	3001      	adds	r0, #1
  4025c4:	4654      	mov	r4, sl
  4025c6:	e624      	b.n	402212 <_vfiprintf_r+0x726>
  4025c8:	252d      	movs	r5, #45	; 0x2d
  4025ca:	4276      	negs	r6, r6
  4025cc:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  4025d0:	f88d 502f 	strb.w	r5, [sp, #47]	; 0x2f
  4025d4:	46e1      	mov	r9, ip
  4025d6:	2301      	movs	r3, #1
  4025d8:	f7ff bb91 	b.w	401cfe <_vfiprintf_r+0x212>
  4025dc:	9b05      	ldr	r3, [sp, #20]
  4025de:	4611      	mov	r1, r2
  4025e0:	2001      	movs	r0, #1
  4025e2:	4654      	mov	r4, sl
  4025e4:	2b00      	cmp	r3, #0
  4025e6:	f43f ade4 	beq.w	4021b2 <_vfiprintf_r+0x6c6>
  4025ea:	aa0c      	add	r2, sp, #48	; 0x30
  4025ec:	2302      	movs	r3, #2
  4025ee:	e88a 000c 	stmia.w	sl, {r2, r3}
  4025f2:	461a      	mov	r2, r3
  4025f4:	e5d6      	b.n	4021a4 <_vfiprintf_r+0x6b8>
  4025f6:	f018 0f10 	tst.w	r8, #16
  4025fa:	d10b      	bne.n	402614 <_vfiprintf_r+0xb28>
  4025fc:	f018 0f40 	tst.w	r8, #64	; 0x40
  402600:	d008      	beq.n	402614 <_vfiprintf_r+0xb28>
  402602:	9a04      	ldr	r2, [sp, #16]
  402604:	6813      	ldr	r3, [r2, #0]
  402606:	3204      	adds	r2, #4
  402608:	9204      	str	r2, [sp, #16]
  40260a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
  40260e:	801a      	strh	r2, [r3, #0]
  402610:	f7ff ba9e 	b.w	401b50 <_vfiprintf_r+0x64>
  402614:	9a04      	ldr	r2, [sp, #16]
  402616:	6813      	ldr	r3, [r2, #0]
  402618:	3204      	adds	r2, #4
  40261a:	9204      	str	r2, [sp, #16]
  40261c:	9a02      	ldr	r2, [sp, #8]
  40261e:	601a      	str	r2, [r3, #0]
  402620:	f7ff ba96 	b.w	401b50 <_vfiprintf_r+0x64>
  402624:	9801      	ldr	r0, [sp, #4]
  402626:	9900      	ldr	r1, [sp, #0]
  402628:	f8cd c020 	str.w	ip, [sp, #32]
  40262c:	aa0d      	add	r2, sp, #52	; 0x34
  40262e:	f7ff fa21 	bl	401a74 <__sprint_r.part.0>
  402632:	2800      	cmp	r0, #0
  402634:	f47f ae1e 	bne.w	402274 <_vfiprintf_r+0x788>
  402638:	990e      	ldr	r1, [sp, #56]	; 0x38
  40263a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40263c:	f8dd c020 	ldr.w	ip, [sp, #32]
  402640:	1c48      	adds	r0, r1, #1
  402642:	4654      	mov	r4, sl
  402644:	e591      	b.n	40216a <_vfiprintf_r+0x67e>
  402646:	f048 0820 	orr.w	r8, r8, #32
  40264a:	f10b 0001 	add.w	r0, fp, #1
  40264e:	f89b 3001 	ldrb.w	r3, [fp, #1]
  402652:	f7ff bab4 	b.w	401bbe <_vfiprintf_r+0xd2>
  402656:	426d      	negs	r5, r5
  402658:	9304      	str	r3, [sp, #16]
  40265a:	4658      	mov	r0, fp
  40265c:	f7ff bbc6 	b.w	401dec <_vfiprintf_r+0x300>
  402660:	9807      	ldr	r0, [sp, #28]
  402662:	9604      	str	r6, [sp, #16]
  402664:	f7ff f9d8 	bl	401a18 <strlen>
  402668:	f89d 502f 	ldrb.w	r5, [sp, #47]	; 0x2f
  40266c:	4681      	mov	r9, r0
  40266e:	f04f 0c00 	mov.w	ip, #0
  402672:	f7ff bb6d 	b.w	401d50 <_vfiprintf_r+0x264>
  402676:	9801      	ldr	r0, [sp, #4]
  402678:	9900      	ldr	r1, [sp, #0]
  40267a:	f8cd c014 	str.w	ip, [sp, #20]
  40267e:	aa0d      	add	r2, sp, #52	; 0x34
  402680:	f7ff f9f8 	bl	401a74 <__sprint_r.part.0>
  402684:	2800      	cmp	r0, #0
  402686:	f47f adf5 	bne.w	402274 <_vfiprintf_r+0x788>
  40268a:	990e      	ldr	r1, [sp, #56]	; 0x38
  40268c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40268e:	f8dd c014 	ldr.w	ip, [sp, #20]
  402692:	1c48      	adds	r0, r1, #1
  402694:	4654      	mov	r4, sl
  402696:	e58c      	b.n	4021b2 <_vfiprintf_r+0x6c6>
  402698:	990e      	ldr	r1, [sp, #56]	; 0x38
  40269a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40269c:	4f15      	ldr	r7, [pc, #84]	; (4026f4 <_vfiprintf_r+0xc08>)
  40269e:	3101      	adds	r1, #1
  4026a0:	f7ff bb98 	b.w	401dd4 <_vfiprintf_r+0x2e8>
  4026a4:	f1bc 0f06 	cmp.w	ip, #6
  4026a8:	bf28      	it	cs
  4026aa:	f04f 0c06 	movcs.w	ip, #6
  4026ae:	4b12      	ldr	r3, [pc, #72]	; (4026f8 <_vfiprintf_r+0xc0c>)
  4026b0:	9604      	str	r6, [sp, #16]
  4026b2:	46e1      	mov	r9, ip
  4026b4:	ea2c 76ec 	bic.w	r6, ip, ip, asr #31
  4026b8:	9307      	str	r3, [sp, #28]
  4026ba:	e460      	b.n	401f7e <_vfiprintf_r+0x492>
  4026bc:	990e      	ldr	r1, [sp, #56]	; 0x38
  4026be:	4f0d      	ldr	r7, [pc, #52]	; (4026f4 <_vfiprintf_r+0xc08>)
  4026c0:	f101 0e01 	add.w	lr, r1, #1
  4026c4:	e618      	b.n	4022f8 <_vfiprintf_r+0x80c>
  4026c6:	46e1      	mov	r9, ip
  4026c8:	f89d 502f 	ldrb.w	r5, [sp, #47]	; 0x2f
  4026cc:	9604      	str	r6, [sp, #16]
  4026ce:	4684      	mov	ip, r0
  4026d0:	f7ff bb3e 	b.w	401d50 <_vfiprintf_r+0x264>
  4026d4:	4686      	mov	lr, r0
  4026d6:	e66b      	b.n	4023b0 <_vfiprintf_r+0x8c4>
  4026d8:	9a04      	ldr	r2, [sp, #16]
  4026da:	f89b 3001 	ldrb.w	r3, [fp, #1]
  4026de:	6816      	ldr	r6, [r2, #0]
  4026e0:	3204      	adds	r2, #4
  4026e2:	2e00      	cmp	r6, #0
  4026e4:	9204      	str	r2, [sp, #16]
  4026e6:	f6bf aa6a 	bge.w	401bbe <_vfiprintf_r+0xd2>
  4026ea:	f04f 36ff 	mov.w	r6, #4294967295
  4026ee:	f7ff ba66 	b.w	401bbe <_vfiprintf_r+0xd2>
  4026f2:	bf00      	nop
  4026f4:	00404948 	.word	0x00404948
  4026f8:	00404940 	.word	0x00404940

004026fc <__sbprintf>:
  4026fc:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
  402700:	460c      	mov	r4, r1
  402702:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  402706:	f8b1 e00c 	ldrh.w	lr, [r1, #12]
  40270a:	69e7      	ldr	r7, [r4, #28]
  40270c:	6e49      	ldr	r1, [r1, #100]	; 0x64
  40270e:	f8b4 900e 	ldrh.w	r9, [r4, #14]
  402712:	9119      	str	r1, [sp, #100]	; 0x64
  402714:	ad1a      	add	r5, sp, #104	; 0x68
  402716:	f44f 6680 	mov.w	r6, #1024	; 0x400
  40271a:	f02e 0e02 	bic.w	lr, lr, #2
  40271e:	f04f 0c00 	mov.w	ip, #0
  402722:	9707      	str	r7, [sp, #28]
  402724:	4669      	mov	r1, sp
  402726:	6a67      	ldr	r7, [r4, #36]	; 0x24
  402728:	9500      	str	r5, [sp, #0]
  40272a:	9504      	str	r5, [sp, #16]
  40272c:	9602      	str	r6, [sp, #8]
  40272e:	9605      	str	r6, [sp, #20]
  402730:	f8ad e00c 	strh.w	lr, [sp, #12]
  402734:	f8ad 900e 	strh.w	r9, [sp, #14]
  402738:	9709      	str	r7, [sp, #36]	; 0x24
  40273a:	f8cd c018 	str.w	ip, [sp, #24]
  40273e:	4606      	mov	r6, r0
  402740:	f7ff f9d4 	bl	401aec <_vfiprintf_r>
  402744:	1e05      	subs	r5, r0, #0
  402746:	db07      	blt.n	402758 <__sbprintf+0x5c>
  402748:	4630      	mov	r0, r6
  40274a:	4669      	mov	r1, sp
  40274c:	f000 f92e 	bl	4029ac <_fflush_r>
  402750:	2800      	cmp	r0, #0
  402752:	bf18      	it	ne
  402754:	f04f 35ff 	movne.w	r5, #4294967295
  402758:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  40275c:	065b      	lsls	r3, r3, #25
  40275e:	d503      	bpl.n	402768 <__sbprintf+0x6c>
  402760:	89a3      	ldrh	r3, [r4, #12]
  402762:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402766:	81a3      	strh	r3, [r4, #12]
  402768:	4628      	mov	r0, r5
  40276a:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  40276e:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
  402772:	bf00      	nop

00402774 <__swsetup_r>:
  402774:	b538      	push	{r3, r4, r5, lr}
  402776:	4b2f      	ldr	r3, [pc, #188]	; (402834 <__swsetup_r+0xc0>)
  402778:	681b      	ldr	r3, [r3, #0]
  40277a:	4605      	mov	r5, r0
  40277c:	460c      	mov	r4, r1
  40277e:	b113      	cbz	r3, 402786 <__swsetup_r+0x12>
  402780:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  402782:	2a00      	cmp	r2, #0
  402784:	d036      	beq.n	4027f4 <__swsetup_r+0x80>
  402786:	89a2      	ldrh	r2, [r4, #12]
  402788:	b293      	uxth	r3, r2
  40278a:	0718      	lsls	r0, r3, #28
  40278c:	d50c      	bpl.n	4027a8 <__swsetup_r+0x34>
  40278e:	6920      	ldr	r0, [r4, #16]
  402790:	b1a8      	cbz	r0, 4027be <__swsetup_r+0x4a>
  402792:	f013 0201 	ands.w	r2, r3, #1
  402796:	d01e      	beq.n	4027d6 <__swsetup_r+0x62>
  402798:	6963      	ldr	r3, [r4, #20]
  40279a:	2200      	movs	r2, #0
  40279c:	425b      	negs	r3, r3
  40279e:	61a3      	str	r3, [r4, #24]
  4027a0:	60a2      	str	r2, [r4, #8]
  4027a2:	b1f0      	cbz	r0, 4027e2 <__swsetup_r+0x6e>
  4027a4:	2000      	movs	r0, #0
  4027a6:	bd38      	pop	{r3, r4, r5, pc}
  4027a8:	06d9      	lsls	r1, r3, #27
  4027aa:	d53b      	bpl.n	402824 <__swsetup_r+0xb0>
  4027ac:	0758      	lsls	r0, r3, #29
  4027ae:	d425      	bmi.n	4027fc <__swsetup_r+0x88>
  4027b0:	6920      	ldr	r0, [r4, #16]
  4027b2:	f042 0308 	orr.w	r3, r2, #8
  4027b6:	81a3      	strh	r3, [r4, #12]
  4027b8:	b29b      	uxth	r3, r3
  4027ba:	2800      	cmp	r0, #0
  4027bc:	d1e9      	bne.n	402792 <__swsetup_r+0x1e>
  4027be:	f403 7220 	and.w	r2, r3, #640	; 0x280
  4027c2:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  4027c6:	d0e4      	beq.n	402792 <__swsetup_r+0x1e>
  4027c8:	4628      	mov	r0, r5
  4027ca:	4621      	mov	r1, r4
  4027cc:	f000 fcf2 	bl	4031b4 <__smakebuf_r>
  4027d0:	89a3      	ldrh	r3, [r4, #12]
  4027d2:	6920      	ldr	r0, [r4, #16]
  4027d4:	e7dd      	b.n	402792 <__swsetup_r+0x1e>
  4027d6:	0799      	lsls	r1, r3, #30
  4027d8:	bf58      	it	pl
  4027da:	6962      	ldrpl	r2, [r4, #20]
  4027dc:	60a2      	str	r2, [r4, #8]
  4027de:	2800      	cmp	r0, #0
  4027e0:	d1e0      	bne.n	4027a4 <__swsetup_r+0x30>
  4027e2:	89a3      	ldrh	r3, [r4, #12]
  4027e4:	061a      	lsls	r2, r3, #24
  4027e6:	d5de      	bpl.n	4027a6 <__swsetup_r+0x32>
  4027e8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4027ec:	81a3      	strh	r3, [r4, #12]
  4027ee:	f04f 30ff 	mov.w	r0, #4294967295
  4027f2:	bd38      	pop	{r3, r4, r5, pc}
  4027f4:	4618      	mov	r0, r3
  4027f6:	f000 f96d 	bl	402ad4 <__sinit>
  4027fa:	e7c4      	b.n	402786 <__swsetup_r+0x12>
  4027fc:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4027fe:	b149      	cbz	r1, 402814 <__swsetup_r+0xa0>
  402800:	f104 0340 	add.w	r3, r4, #64	; 0x40
  402804:	4299      	cmp	r1, r3
  402806:	d003      	beq.n	402810 <__swsetup_r+0x9c>
  402808:	4628      	mov	r0, r5
  40280a:	f000 fa3b 	bl	402c84 <_free_r>
  40280e:	89a2      	ldrh	r2, [r4, #12]
  402810:	2300      	movs	r3, #0
  402812:	6323      	str	r3, [r4, #48]	; 0x30
  402814:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  402818:	2300      	movs	r3, #0
  40281a:	6920      	ldr	r0, [r4, #16]
  40281c:	6063      	str	r3, [r4, #4]
  40281e:	b292      	uxth	r2, r2
  402820:	6020      	str	r0, [r4, #0]
  402822:	e7c6      	b.n	4027b2 <__swsetup_r+0x3e>
  402824:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  402828:	2309      	movs	r3, #9
  40282a:	602b      	str	r3, [r5, #0]
  40282c:	f04f 30ff 	mov.w	r0, #4294967295
  402830:	81a2      	strh	r2, [r4, #12]
  402832:	bd38      	pop	{r3, r4, r5, pc}
  402834:	20000430 	.word	0x20000430

00402838 <register_fini>:
  402838:	4b02      	ldr	r3, [pc, #8]	; (402844 <register_fini+0xc>)
  40283a:	b113      	cbz	r3, 402842 <register_fini+0xa>
  40283c:	4802      	ldr	r0, [pc, #8]	; (402848 <register_fini+0x10>)
  40283e:	f000 b805 	b.w	40284c <atexit>
  402842:	4770      	bx	lr
  402844:	00000000 	.word	0x00000000
  402848:	00402ae9 	.word	0x00402ae9

0040284c <atexit>:
  40284c:	4601      	mov	r1, r0
  40284e:	2000      	movs	r0, #0
  402850:	4602      	mov	r2, r0
  402852:	4603      	mov	r3, r0
  402854:	f001 bbee 	b.w	404034 <__register_exitproc>

00402858 <__sflush_r>:
  402858:	898b      	ldrh	r3, [r1, #12]
  40285a:	b29a      	uxth	r2, r3
  40285c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402860:	460d      	mov	r5, r1
  402862:	0711      	lsls	r1, r2, #28
  402864:	4680      	mov	r8, r0
  402866:	d43c      	bmi.n	4028e2 <__sflush_r+0x8a>
  402868:	686a      	ldr	r2, [r5, #4]
  40286a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  40286e:	2a00      	cmp	r2, #0
  402870:	81ab      	strh	r3, [r5, #12]
  402872:	dd65      	ble.n	402940 <__sflush_r+0xe8>
  402874:	6aae      	ldr	r6, [r5, #40]	; 0x28
  402876:	2e00      	cmp	r6, #0
  402878:	d04b      	beq.n	402912 <__sflush_r+0xba>
  40287a:	b29b      	uxth	r3, r3
  40287c:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
  402880:	2100      	movs	r1, #0
  402882:	b292      	uxth	r2, r2
  402884:	f8d8 4000 	ldr.w	r4, [r8]
  402888:	f8c8 1000 	str.w	r1, [r8]
  40288c:	2a00      	cmp	r2, #0
  40288e:	d05b      	beq.n	402948 <__sflush_r+0xf0>
  402890:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  402892:	075f      	lsls	r7, r3, #29
  402894:	d505      	bpl.n	4028a2 <__sflush_r+0x4a>
  402896:	6869      	ldr	r1, [r5, #4]
  402898:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  40289a:	1a52      	subs	r2, r2, r1
  40289c:	b10b      	cbz	r3, 4028a2 <__sflush_r+0x4a>
  40289e:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  4028a0:	1ad2      	subs	r2, r2, r3
  4028a2:	4640      	mov	r0, r8
  4028a4:	69e9      	ldr	r1, [r5, #28]
  4028a6:	2300      	movs	r3, #0
  4028a8:	47b0      	blx	r6
  4028aa:	1c46      	adds	r6, r0, #1
  4028ac:	d056      	beq.n	40295c <__sflush_r+0x104>
  4028ae:	89ab      	ldrh	r3, [r5, #12]
  4028b0:	692a      	ldr	r2, [r5, #16]
  4028b2:	602a      	str	r2, [r5, #0]
  4028b4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  4028b8:	b29b      	uxth	r3, r3
  4028ba:	2200      	movs	r2, #0
  4028bc:	606a      	str	r2, [r5, #4]
  4028be:	04da      	lsls	r2, r3, #19
  4028c0:	81ab      	strh	r3, [r5, #12]
  4028c2:	d43b      	bmi.n	40293c <__sflush_r+0xe4>
  4028c4:	6b29      	ldr	r1, [r5, #48]	; 0x30
  4028c6:	f8c8 4000 	str.w	r4, [r8]
  4028ca:	b311      	cbz	r1, 402912 <__sflush_r+0xba>
  4028cc:	f105 0340 	add.w	r3, r5, #64	; 0x40
  4028d0:	4299      	cmp	r1, r3
  4028d2:	d002      	beq.n	4028da <__sflush_r+0x82>
  4028d4:	4640      	mov	r0, r8
  4028d6:	f000 f9d5 	bl	402c84 <_free_r>
  4028da:	2000      	movs	r0, #0
  4028dc:	6328      	str	r0, [r5, #48]	; 0x30
  4028de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4028e2:	692e      	ldr	r6, [r5, #16]
  4028e4:	b1ae      	cbz	r6, 402912 <__sflush_r+0xba>
  4028e6:	682c      	ldr	r4, [r5, #0]
  4028e8:	602e      	str	r6, [r5, #0]
  4028ea:	0791      	lsls	r1, r2, #30
  4028ec:	bf0c      	ite	eq
  4028ee:	696b      	ldreq	r3, [r5, #20]
  4028f0:	2300      	movne	r3, #0
  4028f2:	1ba4      	subs	r4, r4, r6
  4028f4:	60ab      	str	r3, [r5, #8]
  4028f6:	e00a      	b.n	40290e <__sflush_r+0xb6>
  4028f8:	4632      	mov	r2, r6
  4028fa:	4623      	mov	r3, r4
  4028fc:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  4028fe:	69e9      	ldr	r1, [r5, #28]
  402900:	4640      	mov	r0, r8
  402902:	47b8      	blx	r7
  402904:	2800      	cmp	r0, #0
  402906:	eba4 0400 	sub.w	r4, r4, r0
  40290a:	4406      	add	r6, r0
  40290c:	dd04      	ble.n	402918 <__sflush_r+0xc0>
  40290e:	2c00      	cmp	r4, #0
  402910:	dcf2      	bgt.n	4028f8 <__sflush_r+0xa0>
  402912:	2000      	movs	r0, #0
  402914:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402918:	89ab      	ldrh	r3, [r5, #12]
  40291a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40291e:	81ab      	strh	r3, [r5, #12]
  402920:	f04f 30ff 	mov.w	r0, #4294967295
  402924:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402928:	89ab      	ldrh	r3, [r5, #12]
  40292a:	692a      	ldr	r2, [r5, #16]
  40292c:	6069      	str	r1, [r5, #4]
  40292e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  402932:	b29b      	uxth	r3, r3
  402934:	81ab      	strh	r3, [r5, #12]
  402936:	04db      	lsls	r3, r3, #19
  402938:	602a      	str	r2, [r5, #0]
  40293a:	d5c3      	bpl.n	4028c4 <__sflush_r+0x6c>
  40293c:	6528      	str	r0, [r5, #80]	; 0x50
  40293e:	e7c1      	b.n	4028c4 <__sflush_r+0x6c>
  402940:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  402942:	2a00      	cmp	r2, #0
  402944:	dc96      	bgt.n	402874 <__sflush_r+0x1c>
  402946:	e7e4      	b.n	402912 <__sflush_r+0xba>
  402948:	2301      	movs	r3, #1
  40294a:	4640      	mov	r0, r8
  40294c:	69e9      	ldr	r1, [r5, #28]
  40294e:	47b0      	blx	r6
  402950:	1c43      	adds	r3, r0, #1
  402952:	4602      	mov	r2, r0
  402954:	d019      	beq.n	40298a <__sflush_r+0x132>
  402956:	89ab      	ldrh	r3, [r5, #12]
  402958:	6aae      	ldr	r6, [r5, #40]	; 0x28
  40295a:	e79a      	b.n	402892 <__sflush_r+0x3a>
  40295c:	f8d8 1000 	ldr.w	r1, [r8]
  402960:	2900      	cmp	r1, #0
  402962:	d0e1      	beq.n	402928 <__sflush_r+0xd0>
  402964:	291d      	cmp	r1, #29
  402966:	d007      	beq.n	402978 <__sflush_r+0x120>
  402968:	2916      	cmp	r1, #22
  40296a:	d005      	beq.n	402978 <__sflush_r+0x120>
  40296c:	89ab      	ldrh	r3, [r5, #12]
  40296e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402972:	81ab      	strh	r3, [r5, #12]
  402974:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402978:	89ab      	ldrh	r3, [r5, #12]
  40297a:	692a      	ldr	r2, [r5, #16]
  40297c:	602a      	str	r2, [r5, #0]
  40297e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  402982:	2200      	movs	r2, #0
  402984:	81ab      	strh	r3, [r5, #12]
  402986:	606a      	str	r2, [r5, #4]
  402988:	e79c      	b.n	4028c4 <__sflush_r+0x6c>
  40298a:	f8d8 3000 	ldr.w	r3, [r8]
  40298e:	2b00      	cmp	r3, #0
  402990:	d0e1      	beq.n	402956 <__sflush_r+0xfe>
  402992:	2b1d      	cmp	r3, #29
  402994:	d007      	beq.n	4029a6 <__sflush_r+0x14e>
  402996:	2b16      	cmp	r3, #22
  402998:	d005      	beq.n	4029a6 <__sflush_r+0x14e>
  40299a:	89ab      	ldrh	r3, [r5, #12]
  40299c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4029a0:	81ab      	strh	r3, [r5, #12]
  4029a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4029a6:	f8c8 4000 	str.w	r4, [r8]
  4029aa:	e7b2      	b.n	402912 <__sflush_r+0xba>

004029ac <_fflush_r>:
  4029ac:	b510      	push	{r4, lr}
  4029ae:	4604      	mov	r4, r0
  4029b0:	b082      	sub	sp, #8
  4029b2:	b108      	cbz	r0, 4029b8 <_fflush_r+0xc>
  4029b4:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4029b6:	b153      	cbz	r3, 4029ce <_fflush_r+0x22>
  4029b8:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
  4029bc:	b908      	cbnz	r0, 4029c2 <_fflush_r+0x16>
  4029be:	b002      	add	sp, #8
  4029c0:	bd10      	pop	{r4, pc}
  4029c2:	4620      	mov	r0, r4
  4029c4:	b002      	add	sp, #8
  4029c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4029ca:	f7ff bf45 	b.w	402858 <__sflush_r>
  4029ce:	9101      	str	r1, [sp, #4]
  4029d0:	f000 f880 	bl	402ad4 <__sinit>
  4029d4:	9901      	ldr	r1, [sp, #4]
  4029d6:	e7ef      	b.n	4029b8 <_fflush_r+0xc>

004029d8 <_cleanup_r>:
  4029d8:	4901      	ldr	r1, [pc, #4]	; (4029e0 <_cleanup_r+0x8>)
  4029da:	f000 bbb7 	b.w	40314c <_fwalk_reent>
  4029de:	bf00      	nop
  4029e0:	004040fd 	.word	0x004040fd

004029e4 <__sinit.part.1>:
  4029e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4029e8:	4b35      	ldr	r3, [pc, #212]	; (402ac0 <__sinit.part.1+0xdc>)
  4029ea:	6845      	ldr	r5, [r0, #4]
  4029ec:	63c3      	str	r3, [r0, #60]	; 0x3c
  4029ee:	2400      	movs	r4, #0
  4029f0:	4607      	mov	r7, r0
  4029f2:	f500 723b 	add.w	r2, r0, #748	; 0x2ec
  4029f6:	2304      	movs	r3, #4
  4029f8:	2103      	movs	r1, #3
  4029fa:	f8c0 12e4 	str.w	r1, [r0, #740]	; 0x2e4
  4029fe:	f8c0 22e8 	str.w	r2, [r0, #744]	; 0x2e8
  402a02:	f8c0 42e0 	str.w	r4, [r0, #736]	; 0x2e0
  402a06:	b083      	sub	sp, #12
  402a08:	602c      	str	r4, [r5, #0]
  402a0a:	606c      	str	r4, [r5, #4]
  402a0c:	60ac      	str	r4, [r5, #8]
  402a0e:	666c      	str	r4, [r5, #100]	; 0x64
  402a10:	81ec      	strh	r4, [r5, #14]
  402a12:	612c      	str	r4, [r5, #16]
  402a14:	616c      	str	r4, [r5, #20]
  402a16:	61ac      	str	r4, [r5, #24]
  402a18:	81ab      	strh	r3, [r5, #12]
  402a1a:	4621      	mov	r1, r4
  402a1c:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  402a20:	2208      	movs	r2, #8
  402a22:	f7fe fef1 	bl	401808 <memset>
  402a26:	68be      	ldr	r6, [r7, #8]
  402a28:	f8df b098 	ldr.w	fp, [pc, #152]	; 402ac4 <__sinit.part.1+0xe0>
  402a2c:	f8df a098 	ldr.w	sl, [pc, #152]	; 402ac8 <__sinit.part.1+0xe4>
  402a30:	f8df 9098 	ldr.w	r9, [pc, #152]	; 402acc <__sinit.part.1+0xe8>
  402a34:	f8df 8098 	ldr.w	r8, [pc, #152]	; 402ad0 <__sinit.part.1+0xec>
  402a38:	f8c5 b020 	str.w	fp, [r5, #32]
  402a3c:	2301      	movs	r3, #1
  402a3e:	2209      	movs	r2, #9
  402a40:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  402a44:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  402a48:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  402a4c:	61ed      	str	r5, [r5, #28]
  402a4e:	4621      	mov	r1, r4
  402a50:	81f3      	strh	r3, [r6, #14]
  402a52:	81b2      	strh	r2, [r6, #12]
  402a54:	f106 005c 	add.w	r0, r6, #92	; 0x5c
  402a58:	6034      	str	r4, [r6, #0]
  402a5a:	6074      	str	r4, [r6, #4]
  402a5c:	60b4      	str	r4, [r6, #8]
  402a5e:	6674      	str	r4, [r6, #100]	; 0x64
  402a60:	6134      	str	r4, [r6, #16]
  402a62:	6174      	str	r4, [r6, #20]
  402a64:	61b4      	str	r4, [r6, #24]
  402a66:	2208      	movs	r2, #8
  402a68:	9301      	str	r3, [sp, #4]
  402a6a:	f7fe fecd 	bl	401808 <memset>
  402a6e:	68fd      	ldr	r5, [r7, #12]
  402a70:	61f6      	str	r6, [r6, #28]
  402a72:	2012      	movs	r0, #18
  402a74:	2202      	movs	r2, #2
  402a76:	f8c6 b020 	str.w	fp, [r6, #32]
  402a7a:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
  402a7e:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
  402a82:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
  402a86:	4621      	mov	r1, r4
  402a88:	81a8      	strh	r0, [r5, #12]
  402a8a:	81ea      	strh	r2, [r5, #14]
  402a8c:	602c      	str	r4, [r5, #0]
  402a8e:	606c      	str	r4, [r5, #4]
  402a90:	60ac      	str	r4, [r5, #8]
  402a92:	666c      	str	r4, [r5, #100]	; 0x64
  402a94:	612c      	str	r4, [r5, #16]
  402a96:	616c      	str	r4, [r5, #20]
  402a98:	61ac      	str	r4, [r5, #24]
  402a9a:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  402a9e:	2208      	movs	r2, #8
  402aa0:	f7fe feb2 	bl	401808 <memset>
  402aa4:	9b01      	ldr	r3, [sp, #4]
  402aa6:	61ed      	str	r5, [r5, #28]
  402aa8:	f8c5 b020 	str.w	fp, [r5, #32]
  402aac:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  402ab0:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  402ab4:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  402ab8:	63bb      	str	r3, [r7, #56]	; 0x38
  402aba:	b003      	add	sp, #12
  402abc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402ac0:	004029d9 	.word	0x004029d9
  402ac4:	00403e71 	.word	0x00403e71
  402ac8:	00403e95 	.word	0x00403e95
  402acc:	00403ecd 	.word	0x00403ecd
  402ad0:	00403eed 	.word	0x00403eed

00402ad4 <__sinit>:
  402ad4:	6b83      	ldr	r3, [r0, #56]	; 0x38
  402ad6:	b103      	cbz	r3, 402ada <__sinit+0x6>
  402ad8:	4770      	bx	lr
  402ada:	f7ff bf83 	b.w	4029e4 <__sinit.part.1>
  402ade:	bf00      	nop

00402ae0 <__sfp_lock_acquire>:
  402ae0:	4770      	bx	lr
  402ae2:	bf00      	nop

00402ae4 <__sfp_lock_release>:
  402ae4:	4770      	bx	lr
  402ae6:	bf00      	nop

00402ae8 <__libc_fini_array>:
  402ae8:	b538      	push	{r3, r4, r5, lr}
  402aea:	4b08      	ldr	r3, [pc, #32]	; (402b0c <__libc_fini_array+0x24>)
  402aec:	4d08      	ldr	r5, [pc, #32]	; (402b10 <__libc_fini_array+0x28>)
  402aee:	1aed      	subs	r5, r5, r3
  402af0:	10ac      	asrs	r4, r5, #2
  402af2:	bf18      	it	ne
  402af4:	18ed      	addne	r5, r5, r3
  402af6:	d005      	beq.n	402b04 <__libc_fini_array+0x1c>
  402af8:	3c01      	subs	r4, #1
  402afa:	f855 3d04 	ldr.w	r3, [r5, #-4]!
  402afe:	4798      	blx	r3
  402b00:	2c00      	cmp	r4, #0
  402b02:	d1f9      	bne.n	402af8 <__libc_fini_array+0x10>
  402b04:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  402b08:	f001 bf30 	b.w	40496c <_fini>
  402b0c:	00404978 	.word	0x00404978
  402b10:	0040497c 	.word	0x0040497c

00402b14 <__fputwc>:
  402b14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402b18:	b082      	sub	sp, #8
  402b1a:	4607      	mov	r7, r0
  402b1c:	460e      	mov	r6, r1
  402b1e:	4614      	mov	r4, r2
  402b20:	f000 fb42 	bl	4031a8 <__locale_mb_cur_max>
  402b24:	2801      	cmp	r0, #1
  402b26:	d041      	beq.n	402bac <__fputwc+0x98>
  402b28:	4638      	mov	r0, r7
  402b2a:	a901      	add	r1, sp, #4
  402b2c:	4632      	mov	r2, r6
  402b2e:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  402b32:	f001 fa33 	bl	403f9c <_wcrtomb_r>
  402b36:	f1b0 3fff 	cmp.w	r0, #4294967295
  402b3a:	4680      	mov	r8, r0
  402b3c:	d02f      	beq.n	402b9e <__fputwc+0x8a>
  402b3e:	2800      	cmp	r0, #0
  402b40:	d03c      	beq.n	402bbc <__fputwc+0xa8>
  402b42:	f89d 1004 	ldrb.w	r1, [sp, #4]
  402b46:	2500      	movs	r5, #0
  402b48:	e009      	b.n	402b5e <__fputwc+0x4a>
  402b4a:	6823      	ldr	r3, [r4, #0]
  402b4c:	7019      	strb	r1, [r3, #0]
  402b4e:	6823      	ldr	r3, [r4, #0]
  402b50:	3301      	adds	r3, #1
  402b52:	6023      	str	r3, [r4, #0]
  402b54:	3501      	adds	r5, #1
  402b56:	45a8      	cmp	r8, r5
  402b58:	d930      	bls.n	402bbc <__fputwc+0xa8>
  402b5a:	ab01      	add	r3, sp, #4
  402b5c:	5d59      	ldrb	r1, [r3, r5]
  402b5e:	68a3      	ldr	r3, [r4, #8]
  402b60:	3b01      	subs	r3, #1
  402b62:	2b00      	cmp	r3, #0
  402b64:	60a3      	str	r3, [r4, #8]
  402b66:	daf0      	bge.n	402b4a <__fputwc+0x36>
  402b68:	69a2      	ldr	r2, [r4, #24]
  402b6a:	4293      	cmp	r3, r2
  402b6c:	db07      	blt.n	402b7e <__fputwc+0x6a>
  402b6e:	6823      	ldr	r3, [r4, #0]
  402b70:	7019      	strb	r1, [r3, #0]
  402b72:	6823      	ldr	r3, [r4, #0]
  402b74:	7819      	ldrb	r1, [r3, #0]
  402b76:	290a      	cmp	r1, #10
  402b78:	f103 0301 	add.w	r3, r3, #1
  402b7c:	d1e9      	bne.n	402b52 <__fputwc+0x3e>
  402b7e:	4638      	mov	r0, r7
  402b80:	4622      	mov	r2, r4
  402b82:	f001 f9b7 	bl	403ef4 <__swbuf_r>
  402b86:	f1a0 30ff 	sub.w	r0, r0, #4294967295
  402b8a:	fab0 f080 	clz	r0, r0
  402b8e:	0940      	lsrs	r0, r0, #5
  402b90:	2800      	cmp	r0, #0
  402b92:	d0df      	beq.n	402b54 <__fputwc+0x40>
  402b94:	f04f 30ff 	mov.w	r0, #4294967295
  402b98:	b002      	add	sp, #8
  402b9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402b9e:	89a3      	ldrh	r3, [r4, #12]
  402ba0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402ba4:	81a3      	strh	r3, [r4, #12]
  402ba6:	b002      	add	sp, #8
  402ba8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402bac:	1e73      	subs	r3, r6, #1
  402bae:	2bfe      	cmp	r3, #254	; 0xfe
  402bb0:	d8ba      	bhi.n	402b28 <__fputwc+0x14>
  402bb2:	b2f1      	uxtb	r1, r6
  402bb4:	4680      	mov	r8, r0
  402bb6:	f88d 1004 	strb.w	r1, [sp, #4]
  402bba:	e7c4      	b.n	402b46 <__fputwc+0x32>
  402bbc:	4630      	mov	r0, r6
  402bbe:	b002      	add	sp, #8
  402bc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00402bc4 <_fputwc_r>:
  402bc4:	8993      	ldrh	r3, [r2, #12]
  402bc6:	f413 5f00 	tst.w	r3, #8192	; 0x2000
  402bca:	d10b      	bne.n	402be4 <_fputwc_r+0x20>
  402bcc:	b410      	push	{r4}
  402bce:	6e54      	ldr	r4, [r2, #100]	; 0x64
  402bd0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  402bd4:	f444 5400 	orr.w	r4, r4, #8192	; 0x2000
  402bd8:	6654      	str	r4, [r2, #100]	; 0x64
  402bda:	8193      	strh	r3, [r2, #12]
  402bdc:	f85d 4b04 	ldr.w	r4, [sp], #4
  402be0:	f7ff bf98 	b.w	402b14 <__fputwc>
  402be4:	f7ff bf96 	b.w	402b14 <__fputwc>

00402be8 <_malloc_trim_r>:
  402be8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  402bea:	4f23      	ldr	r7, [pc, #140]	; (402c78 <_malloc_trim_r+0x90>)
  402bec:	460c      	mov	r4, r1
  402bee:	4606      	mov	r6, r0
  402bf0:	f000 ff32 	bl	403a58 <__malloc_lock>
  402bf4:	68bb      	ldr	r3, [r7, #8]
  402bf6:	685d      	ldr	r5, [r3, #4]
  402bf8:	f025 0503 	bic.w	r5, r5, #3
  402bfc:	1b29      	subs	r1, r5, r4
  402bfe:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
  402c02:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  402c06:	f021 010f 	bic.w	r1, r1, #15
  402c0a:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  402c0e:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  402c12:	db07      	blt.n	402c24 <_malloc_trim_r+0x3c>
  402c14:	4630      	mov	r0, r6
  402c16:	2100      	movs	r1, #0
  402c18:	f001 f918 	bl	403e4c <_sbrk_r>
  402c1c:	68bb      	ldr	r3, [r7, #8]
  402c1e:	442b      	add	r3, r5
  402c20:	4298      	cmp	r0, r3
  402c22:	d004      	beq.n	402c2e <_malloc_trim_r+0x46>
  402c24:	4630      	mov	r0, r6
  402c26:	f000 ff19 	bl	403a5c <__malloc_unlock>
  402c2a:	2000      	movs	r0, #0
  402c2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402c2e:	4630      	mov	r0, r6
  402c30:	4261      	negs	r1, r4
  402c32:	f001 f90b 	bl	403e4c <_sbrk_r>
  402c36:	3001      	adds	r0, #1
  402c38:	d00d      	beq.n	402c56 <_malloc_trim_r+0x6e>
  402c3a:	4b10      	ldr	r3, [pc, #64]	; (402c7c <_malloc_trim_r+0x94>)
  402c3c:	68ba      	ldr	r2, [r7, #8]
  402c3e:	6819      	ldr	r1, [r3, #0]
  402c40:	1b2d      	subs	r5, r5, r4
  402c42:	f045 0501 	orr.w	r5, r5, #1
  402c46:	4630      	mov	r0, r6
  402c48:	1b09      	subs	r1, r1, r4
  402c4a:	6055      	str	r5, [r2, #4]
  402c4c:	6019      	str	r1, [r3, #0]
  402c4e:	f000 ff05 	bl	403a5c <__malloc_unlock>
  402c52:	2001      	movs	r0, #1
  402c54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402c56:	4630      	mov	r0, r6
  402c58:	2100      	movs	r1, #0
  402c5a:	f001 f8f7 	bl	403e4c <_sbrk_r>
  402c5e:	68ba      	ldr	r2, [r7, #8]
  402c60:	1a83      	subs	r3, r0, r2
  402c62:	2b0f      	cmp	r3, #15
  402c64:	ddde      	ble.n	402c24 <_malloc_trim_r+0x3c>
  402c66:	4c06      	ldr	r4, [pc, #24]	; (402c80 <_malloc_trim_r+0x98>)
  402c68:	4904      	ldr	r1, [pc, #16]	; (402c7c <_malloc_trim_r+0x94>)
  402c6a:	6824      	ldr	r4, [r4, #0]
  402c6c:	f043 0301 	orr.w	r3, r3, #1
  402c70:	1b00      	subs	r0, r0, r4
  402c72:	6053      	str	r3, [r2, #4]
  402c74:	6008      	str	r0, [r1, #0]
  402c76:	e7d5      	b.n	402c24 <_malloc_trim_r+0x3c>
  402c78:	20000458 	.word	0x20000458
  402c7c:	2000090c 	.word	0x2000090c
  402c80:	20000864 	.word	0x20000864

00402c84 <_free_r>:
  402c84:	2900      	cmp	r1, #0
  402c86:	d04e      	beq.n	402d26 <_free_r+0xa2>
  402c88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402c8c:	460c      	mov	r4, r1
  402c8e:	4680      	mov	r8, r0
  402c90:	f000 fee2 	bl	403a58 <__malloc_lock>
  402c94:	f854 7c04 	ldr.w	r7, [r4, #-4]
  402c98:	4962      	ldr	r1, [pc, #392]	; (402e24 <_free_r+0x1a0>)
  402c9a:	f027 0201 	bic.w	r2, r7, #1
  402c9e:	f1a4 0508 	sub.w	r5, r4, #8
  402ca2:	18ab      	adds	r3, r5, r2
  402ca4:	688e      	ldr	r6, [r1, #8]
  402ca6:	6858      	ldr	r0, [r3, #4]
  402ca8:	429e      	cmp	r6, r3
  402caa:	f020 0003 	bic.w	r0, r0, #3
  402cae:	d05a      	beq.n	402d66 <_free_r+0xe2>
  402cb0:	07fe      	lsls	r6, r7, #31
  402cb2:	6058      	str	r0, [r3, #4]
  402cb4:	d40b      	bmi.n	402cce <_free_r+0x4a>
  402cb6:	f854 7c08 	ldr.w	r7, [r4, #-8]
  402cba:	1bed      	subs	r5, r5, r7
  402cbc:	f101 0e08 	add.w	lr, r1, #8
  402cc0:	68ac      	ldr	r4, [r5, #8]
  402cc2:	4574      	cmp	r4, lr
  402cc4:	443a      	add	r2, r7
  402cc6:	d067      	beq.n	402d98 <_free_r+0x114>
  402cc8:	68ef      	ldr	r7, [r5, #12]
  402cca:	60e7      	str	r7, [r4, #12]
  402ccc:	60bc      	str	r4, [r7, #8]
  402cce:	181c      	adds	r4, r3, r0
  402cd0:	6864      	ldr	r4, [r4, #4]
  402cd2:	07e4      	lsls	r4, r4, #31
  402cd4:	d40c      	bmi.n	402cf0 <_free_r+0x6c>
  402cd6:	4f54      	ldr	r7, [pc, #336]	; (402e28 <_free_r+0x1a4>)
  402cd8:	689c      	ldr	r4, [r3, #8]
  402cda:	42bc      	cmp	r4, r7
  402cdc:	4402      	add	r2, r0
  402cde:	d07c      	beq.n	402dda <_free_r+0x156>
  402ce0:	68d8      	ldr	r0, [r3, #12]
  402ce2:	60e0      	str	r0, [r4, #12]
  402ce4:	f042 0301 	orr.w	r3, r2, #1
  402ce8:	6084      	str	r4, [r0, #8]
  402cea:	606b      	str	r3, [r5, #4]
  402cec:	50aa      	str	r2, [r5, r2]
  402cee:	e003      	b.n	402cf8 <_free_r+0x74>
  402cf0:	f042 0301 	orr.w	r3, r2, #1
  402cf4:	606b      	str	r3, [r5, #4]
  402cf6:	50aa      	str	r2, [r5, r2]
  402cf8:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  402cfc:	d214      	bcs.n	402d28 <_free_r+0xa4>
  402cfe:	08d2      	lsrs	r2, r2, #3
  402d00:	eb01 03c2 	add.w	r3, r1, r2, lsl #3
  402d04:	6848      	ldr	r0, [r1, #4]
  402d06:	689f      	ldr	r7, [r3, #8]
  402d08:	60af      	str	r7, [r5, #8]
  402d0a:	1092      	asrs	r2, r2, #2
  402d0c:	2401      	movs	r4, #1
  402d0e:	fa04 f202 	lsl.w	r2, r4, r2
  402d12:	4310      	orrs	r0, r2
  402d14:	60eb      	str	r3, [r5, #12]
  402d16:	6048      	str	r0, [r1, #4]
  402d18:	609d      	str	r5, [r3, #8]
  402d1a:	60fd      	str	r5, [r7, #12]
  402d1c:	4640      	mov	r0, r8
  402d1e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  402d22:	f000 be9b 	b.w	403a5c <__malloc_unlock>
  402d26:	4770      	bx	lr
  402d28:	0a53      	lsrs	r3, r2, #9
  402d2a:	2b04      	cmp	r3, #4
  402d2c:	d847      	bhi.n	402dbe <_free_r+0x13a>
  402d2e:	0993      	lsrs	r3, r2, #6
  402d30:	f103 0438 	add.w	r4, r3, #56	; 0x38
  402d34:	0060      	lsls	r0, r4, #1
  402d36:	eb01 0080 	add.w	r0, r1, r0, lsl #2
  402d3a:	493a      	ldr	r1, [pc, #232]	; (402e24 <_free_r+0x1a0>)
  402d3c:	6883      	ldr	r3, [r0, #8]
  402d3e:	4283      	cmp	r3, r0
  402d40:	d043      	beq.n	402dca <_free_r+0x146>
  402d42:	6859      	ldr	r1, [r3, #4]
  402d44:	f021 0103 	bic.w	r1, r1, #3
  402d48:	4291      	cmp	r1, r2
  402d4a:	d902      	bls.n	402d52 <_free_r+0xce>
  402d4c:	689b      	ldr	r3, [r3, #8]
  402d4e:	4298      	cmp	r0, r3
  402d50:	d1f7      	bne.n	402d42 <_free_r+0xbe>
  402d52:	68da      	ldr	r2, [r3, #12]
  402d54:	60ea      	str	r2, [r5, #12]
  402d56:	60ab      	str	r3, [r5, #8]
  402d58:	4640      	mov	r0, r8
  402d5a:	6095      	str	r5, [r2, #8]
  402d5c:	60dd      	str	r5, [r3, #12]
  402d5e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  402d62:	f000 be7b 	b.w	403a5c <__malloc_unlock>
  402d66:	07ff      	lsls	r7, r7, #31
  402d68:	4402      	add	r2, r0
  402d6a:	d407      	bmi.n	402d7c <_free_r+0xf8>
  402d6c:	f854 3c08 	ldr.w	r3, [r4, #-8]
  402d70:	1aed      	subs	r5, r5, r3
  402d72:	441a      	add	r2, r3
  402d74:	68a8      	ldr	r0, [r5, #8]
  402d76:	68eb      	ldr	r3, [r5, #12]
  402d78:	60c3      	str	r3, [r0, #12]
  402d7a:	6098      	str	r0, [r3, #8]
  402d7c:	4b2b      	ldr	r3, [pc, #172]	; (402e2c <_free_r+0x1a8>)
  402d7e:	681b      	ldr	r3, [r3, #0]
  402d80:	f042 0001 	orr.w	r0, r2, #1
  402d84:	429a      	cmp	r2, r3
  402d86:	6068      	str	r0, [r5, #4]
  402d88:	608d      	str	r5, [r1, #8]
  402d8a:	d3c7      	bcc.n	402d1c <_free_r+0x98>
  402d8c:	4b28      	ldr	r3, [pc, #160]	; (402e30 <_free_r+0x1ac>)
  402d8e:	4640      	mov	r0, r8
  402d90:	6819      	ldr	r1, [r3, #0]
  402d92:	f7ff ff29 	bl	402be8 <_malloc_trim_r>
  402d96:	e7c1      	b.n	402d1c <_free_r+0x98>
  402d98:	1819      	adds	r1, r3, r0
  402d9a:	6849      	ldr	r1, [r1, #4]
  402d9c:	07c9      	lsls	r1, r1, #31
  402d9e:	d409      	bmi.n	402db4 <_free_r+0x130>
  402da0:	68d9      	ldr	r1, [r3, #12]
  402da2:	689b      	ldr	r3, [r3, #8]
  402da4:	4402      	add	r2, r0
  402da6:	f042 0001 	orr.w	r0, r2, #1
  402daa:	60d9      	str	r1, [r3, #12]
  402dac:	608b      	str	r3, [r1, #8]
  402dae:	6068      	str	r0, [r5, #4]
  402db0:	50aa      	str	r2, [r5, r2]
  402db2:	e7b3      	b.n	402d1c <_free_r+0x98>
  402db4:	f042 0301 	orr.w	r3, r2, #1
  402db8:	606b      	str	r3, [r5, #4]
  402dba:	50aa      	str	r2, [r5, r2]
  402dbc:	e7ae      	b.n	402d1c <_free_r+0x98>
  402dbe:	2b14      	cmp	r3, #20
  402dc0:	d814      	bhi.n	402dec <_free_r+0x168>
  402dc2:	f103 045b 	add.w	r4, r3, #91	; 0x5b
  402dc6:	0060      	lsls	r0, r4, #1
  402dc8:	e7b5      	b.n	402d36 <_free_r+0xb2>
  402dca:	684a      	ldr	r2, [r1, #4]
  402dcc:	10a4      	asrs	r4, r4, #2
  402dce:	2001      	movs	r0, #1
  402dd0:	40a0      	lsls	r0, r4
  402dd2:	4302      	orrs	r2, r0
  402dd4:	604a      	str	r2, [r1, #4]
  402dd6:	461a      	mov	r2, r3
  402dd8:	e7bc      	b.n	402d54 <_free_r+0xd0>
  402dda:	f042 0301 	orr.w	r3, r2, #1
  402dde:	614d      	str	r5, [r1, #20]
  402de0:	610d      	str	r5, [r1, #16]
  402de2:	60ec      	str	r4, [r5, #12]
  402de4:	60ac      	str	r4, [r5, #8]
  402de6:	606b      	str	r3, [r5, #4]
  402de8:	50aa      	str	r2, [r5, r2]
  402dea:	e797      	b.n	402d1c <_free_r+0x98>
  402dec:	2b54      	cmp	r3, #84	; 0x54
  402dee:	d804      	bhi.n	402dfa <_free_r+0x176>
  402df0:	0b13      	lsrs	r3, r2, #12
  402df2:	f103 046e 	add.w	r4, r3, #110	; 0x6e
  402df6:	0060      	lsls	r0, r4, #1
  402df8:	e79d      	b.n	402d36 <_free_r+0xb2>
  402dfa:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  402dfe:	d804      	bhi.n	402e0a <_free_r+0x186>
  402e00:	0bd3      	lsrs	r3, r2, #15
  402e02:	f103 0477 	add.w	r4, r3, #119	; 0x77
  402e06:	0060      	lsls	r0, r4, #1
  402e08:	e795      	b.n	402d36 <_free_r+0xb2>
  402e0a:	f240 5054 	movw	r0, #1364	; 0x554
  402e0e:	4283      	cmp	r3, r0
  402e10:	d804      	bhi.n	402e1c <_free_r+0x198>
  402e12:	0c93      	lsrs	r3, r2, #18
  402e14:	f103 047c 	add.w	r4, r3, #124	; 0x7c
  402e18:	0060      	lsls	r0, r4, #1
  402e1a:	e78c      	b.n	402d36 <_free_r+0xb2>
  402e1c:	20fc      	movs	r0, #252	; 0xfc
  402e1e:	247e      	movs	r4, #126	; 0x7e
  402e20:	e789      	b.n	402d36 <_free_r+0xb2>
  402e22:	bf00      	nop
  402e24:	20000458 	.word	0x20000458
  402e28:	20000460 	.word	0x20000460
  402e2c:	20000860 	.word	0x20000860
  402e30:	20000908 	.word	0x20000908

00402e34 <__sfvwrite_r>:
  402e34:	6893      	ldr	r3, [r2, #8]
  402e36:	2b00      	cmp	r3, #0
  402e38:	d07a      	beq.n	402f30 <__sfvwrite_r+0xfc>
  402e3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402e3e:	f8b1 e00c 	ldrh.w	lr, [r1, #12]
  402e42:	f01e 0f08 	tst.w	lr, #8
  402e46:	b083      	sub	sp, #12
  402e48:	460c      	mov	r4, r1
  402e4a:	4681      	mov	r9, r0
  402e4c:	4616      	mov	r6, r2
  402e4e:	d026      	beq.n	402e9e <__sfvwrite_r+0x6a>
  402e50:	690b      	ldr	r3, [r1, #16]
  402e52:	b323      	cbz	r3, 402e9e <__sfvwrite_r+0x6a>
  402e54:	f00e 0802 	and.w	r8, lr, #2
  402e58:	fa1f f088 	uxth.w	r0, r8
  402e5c:	6835      	ldr	r5, [r6, #0]
  402e5e:	b370      	cbz	r0, 402ebe <__sfvwrite_r+0x8a>
  402e60:	f04f 0a00 	mov.w	sl, #0
  402e64:	f8df b2e0 	ldr.w	fp, [pc, #736]	; 403148 <__sfvwrite_r+0x314>
  402e68:	46d0      	mov	r8, sl
  402e6a:	45d8      	cmp	r8, fp
  402e6c:	4643      	mov	r3, r8
  402e6e:	4652      	mov	r2, sl
  402e70:	bf28      	it	cs
  402e72:	465b      	movcs	r3, fp
  402e74:	4648      	mov	r0, r9
  402e76:	f1b8 0f00 	cmp.w	r8, #0
  402e7a:	d053      	beq.n	402f24 <__sfvwrite_r+0xf0>
  402e7c:	69e1      	ldr	r1, [r4, #28]
  402e7e:	6a67      	ldr	r7, [r4, #36]	; 0x24
  402e80:	47b8      	blx	r7
  402e82:	2800      	cmp	r0, #0
  402e84:	dd73      	ble.n	402f6e <__sfvwrite_r+0x13a>
  402e86:	68b3      	ldr	r3, [r6, #8]
  402e88:	1a1b      	subs	r3, r3, r0
  402e8a:	4482      	add	sl, r0
  402e8c:	ebc0 0808 	rsb	r8, r0, r8
  402e90:	60b3      	str	r3, [r6, #8]
  402e92:	2b00      	cmp	r3, #0
  402e94:	d1e9      	bne.n	402e6a <__sfvwrite_r+0x36>
  402e96:	2000      	movs	r0, #0
  402e98:	b003      	add	sp, #12
  402e9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402e9e:	4648      	mov	r0, r9
  402ea0:	4621      	mov	r1, r4
  402ea2:	f7ff fc67 	bl	402774 <__swsetup_r>
  402ea6:	2800      	cmp	r0, #0
  402ea8:	f040 8145 	bne.w	403136 <__sfvwrite_r+0x302>
  402eac:	f8b4 e00c 	ldrh.w	lr, [r4, #12]
  402eb0:	6835      	ldr	r5, [r6, #0]
  402eb2:	f00e 0802 	and.w	r8, lr, #2
  402eb6:	fa1f f088 	uxth.w	r0, r8
  402eba:	2800      	cmp	r0, #0
  402ebc:	d1d0      	bne.n	402e60 <__sfvwrite_r+0x2c>
  402ebe:	f01e 0b01 	ands.w	fp, lr, #1
  402ec2:	d15d      	bne.n	402f80 <__sfvwrite_r+0x14c>
  402ec4:	46d8      	mov	r8, fp
  402ec6:	f1b8 0f00 	cmp.w	r8, #0
  402eca:	d025      	beq.n	402f18 <__sfvwrite_r+0xe4>
  402ecc:	f41e 7f00 	tst.w	lr, #512	; 0x200
  402ed0:	68a7      	ldr	r7, [r4, #8]
  402ed2:	d02f      	beq.n	402f34 <__sfvwrite_r+0x100>
  402ed4:	45b8      	cmp	r8, r7
  402ed6:	46ba      	mov	sl, r7
  402ed8:	f0c0 80a9 	bcc.w	40302e <__sfvwrite_r+0x1fa>
  402edc:	f41e 6f90 	tst.w	lr, #1152	; 0x480
  402ee0:	f040 80b6 	bne.w	403050 <__sfvwrite_r+0x21c>
  402ee4:	6820      	ldr	r0, [r4, #0]
  402ee6:	4652      	mov	r2, sl
  402ee8:	4659      	mov	r1, fp
  402eea:	f000 fd51 	bl	403990 <memmove>
  402eee:	68a0      	ldr	r0, [r4, #8]
  402ef0:	6822      	ldr	r2, [r4, #0]
  402ef2:	1bc0      	subs	r0, r0, r7
  402ef4:	eb02 030a 	add.w	r3, r2, sl
  402ef8:	60a0      	str	r0, [r4, #8]
  402efa:	6023      	str	r3, [r4, #0]
  402efc:	4640      	mov	r0, r8
  402efe:	68b3      	ldr	r3, [r6, #8]
  402f00:	1a1b      	subs	r3, r3, r0
  402f02:	4483      	add	fp, r0
  402f04:	ebc0 0808 	rsb	r8, r0, r8
  402f08:	60b3      	str	r3, [r6, #8]
  402f0a:	2b00      	cmp	r3, #0
  402f0c:	d0c3      	beq.n	402e96 <__sfvwrite_r+0x62>
  402f0e:	f8b4 e00c 	ldrh.w	lr, [r4, #12]
  402f12:	f1b8 0f00 	cmp.w	r8, #0
  402f16:	d1d9      	bne.n	402ecc <__sfvwrite_r+0x98>
  402f18:	f8d5 b000 	ldr.w	fp, [r5]
  402f1c:	f8d5 8004 	ldr.w	r8, [r5, #4]
  402f20:	3508      	adds	r5, #8
  402f22:	e7d0      	b.n	402ec6 <__sfvwrite_r+0x92>
  402f24:	f8d5 a000 	ldr.w	sl, [r5]
  402f28:	f8d5 8004 	ldr.w	r8, [r5, #4]
  402f2c:	3508      	adds	r5, #8
  402f2e:	e79c      	b.n	402e6a <__sfvwrite_r+0x36>
  402f30:	2000      	movs	r0, #0
  402f32:	4770      	bx	lr
  402f34:	6820      	ldr	r0, [r4, #0]
  402f36:	6923      	ldr	r3, [r4, #16]
  402f38:	4298      	cmp	r0, r3
  402f3a:	d803      	bhi.n	402f44 <__sfvwrite_r+0x110>
  402f3c:	6962      	ldr	r2, [r4, #20]
  402f3e:	4590      	cmp	r8, r2
  402f40:	f080 80b9 	bcs.w	4030b6 <__sfvwrite_r+0x282>
  402f44:	4547      	cmp	r7, r8
  402f46:	bf28      	it	cs
  402f48:	4647      	movcs	r7, r8
  402f4a:	463a      	mov	r2, r7
  402f4c:	4659      	mov	r1, fp
  402f4e:	f000 fd1f 	bl	403990 <memmove>
  402f52:	68a3      	ldr	r3, [r4, #8]
  402f54:	6822      	ldr	r2, [r4, #0]
  402f56:	1bdb      	subs	r3, r3, r7
  402f58:	443a      	add	r2, r7
  402f5a:	60a3      	str	r3, [r4, #8]
  402f5c:	6022      	str	r2, [r4, #0]
  402f5e:	2b00      	cmp	r3, #0
  402f60:	d14a      	bne.n	402ff8 <__sfvwrite_r+0x1c4>
  402f62:	4648      	mov	r0, r9
  402f64:	4621      	mov	r1, r4
  402f66:	f7ff fd21 	bl	4029ac <_fflush_r>
  402f6a:	2800      	cmp	r0, #0
  402f6c:	d044      	beq.n	402ff8 <__sfvwrite_r+0x1c4>
  402f6e:	89a3      	ldrh	r3, [r4, #12]
  402f70:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402f74:	f04f 30ff 	mov.w	r0, #4294967295
  402f78:	81a3      	strh	r3, [r4, #12]
  402f7a:	b003      	add	sp, #12
  402f7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402f80:	4680      	mov	r8, r0
  402f82:	9000      	str	r0, [sp, #0]
  402f84:	4683      	mov	fp, r0
  402f86:	4682      	mov	sl, r0
  402f88:	f1ba 0f00 	cmp.w	sl, #0
  402f8c:	d02c      	beq.n	402fe8 <__sfvwrite_r+0x1b4>
  402f8e:	9b00      	ldr	r3, [sp, #0]
  402f90:	2b00      	cmp	r3, #0
  402f92:	d050      	beq.n	403036 <__sfvwrite_r+0x202>
  402f94:	6820      	ldr	r0, [r4, #0]
  402f96:	6921      	ldr	r1, [r4, #16]
  402f98:	f8d4 e008 	ldr.w	lr, [r4, #8]
  402f9c:	6962      	ldr	r2, [r4, #20]
  402f9e:	45d0      	cmp	r8, sl
  402fa0:	4643      	mov	r3, r8
  402fa2:	bf28      	it	cs
  402fa4:	4653      	movcs	r3, sl
  402fa6:	4288      	cmp	r0, r1
  402fa8:	461f      	mov	r7, r3
  402faa:	d904      	bls.n	402fb6 <__sfvwrite_r+0x182>
  402fac:	eb0e 0c02 	add.w	ip, lr, r2
  402fb0:	4563      	cmp	r3, ip
  402fb2:	f300 8092 	bgt.w	4030da <__sfvwrite_r+0x2a6>
  402fb6:	4293      	cmp	r3, r2
  402fb8:	db20      	blt.n	402ffc <__sfvwrite_r+0x1c8>
  402fba:	4613      	mov	r3, r2
  402fbc:	6a67      	ldr	r7, [r4, #36]	; 0x24
  402fbe:	69e1      	ldr	r1, [r4, #28]
  402fc0:	4648      	mov	r0, r9
  402fc2:	465a      	mov	r2, fp
  402fc4:	47b8      	blx	r7
  402fc6:	1e07      	subs	r7, r0, #0
  402fc8:	ddd1      	ble.n	402f6e <__sfvwrite_r+0x13a>
  402fca:	ebb8 0807 	subs.w	r8, r8, r7
  402fce:	d025      	beq.n	40301c <__sfvwrite_r+0x1e8>
  402fd0:	68b3      	ldr	r3, [r6, #8]
  402fd2:	1bdb      	subs	r3, r3, r7
  402fd4:	44bb      	add	fp, r7
  402fd6:	ebc7 0a0a 	rsb	sl, r7, sl
  402fda:	60b3      	str	r3, [r6, #8]
  402fdc:	2b00      	cmp	r3, #0
  402fde:	f43f af5a 	beq.w	402e96 <__sfvwrite_r+0x62>
  402fe2:	f1ba 0f00 	cmp.w	sl, #0
  402fe6:	d1d2      	bne.n	402f8e <__sfvwrite_r+0x15a>
  402fe8:	2300      	movs	r3, #0
  402fea:	f8d5 b000 	ldr.w	fp, [r5]
  402fee:	f8d5 a004 	ldr.w	sl, [r5, #4]
  402ff2:	9300      	str	r3, [sp, #0]
  402ff4:	3508      	adds	r5, #8
  402ff6:	e7c7      	b.n	402f88 <__sfvwrite_r+0x154>
  402ff8:	4638      	mov	r0, r7
  402ffa:	e780      	b.n	402efe <__sfvwrite_r+0xca>
  402ffc:	461a      	mov	r2, r3
  402ffe:	4659      	mov	r1, fp
  403000:	9301      	str	r3, [sp, #4]
  403002:	f000 fcc5 	bl	403990 <memmove>
  403006:	68a2      	ldr	r2, [r4, #8]
  403008:	6821      	ldr	r1, [r4, #0]
  40300a:	9b01      	ldr	r3, [sp, #4]
  40300c:	ebb8 0807 	subs.w	r8, r8, r7
  403010:	eba2 0203 	sub.w	r2, r2, r3
  403014:	440b      	add	r3, r1
  403016:	60a2      	str	r2, [r4, #8]
  403018:	6023      	str	r3, [r4, #0]
  40301a:	d1d9      	bne.n	402fd0 <__sfvwrite_r+0x19c>
  40301c:	4648      	mov	r0, r9
  40301e:	4621      	mov	r1, r4
  403020:	f7ff fcc4 	bl	4029ac <_fflush_r>
  403024:	2800      	cmp	r0, #0
  403026:	d1a2      	bne.n	402f6e <__sfvwrite_r+0x13a>
  403028:	f8cd 8000 	str.w	r8, [sp]
  40302c:	e7d0      	b.n	402fd0 <__sfvwrite_r+0x19c>
  40302e:	6820      	ldr	r0, [r4, #0]
  403030:	4647      	mov	r7, r8
  403032:	46c2      	mov	sl, r8
  403034:	e757      	b.n	402ee6 <__sfvwrite_r+0xb2>
  403036:	4658      	mov	r0, fp
  403038:	210a      	movs	r1, #10
  40303a:	4652      	mov	r2, sl
  40303c:	f000 fbc4 	bl	4037c8 <memchr>
  403040:	2800      	cmp	r0, #0
  403042:	d073      	beq.n	40312c <__sfvwrite_r+0x2f8>
  403044:	3001      	adds	r0, #1
  403046:	2301      	movs	r3, #1
  403048:	ebcb 0800 	rsb	r8, fp, r0
  40304c:	9300      	str	r3, [sp, #0]
  40304e:	e7a1      	b.n	402f94 <__sfvwrite_r+0x160>
  403050:	6967      	ldr	r7, [r4, #20]
  403052:	6921      	ldr	r1, [r4, #16]
  403054:	6823      	ldr	r3, [r4, #0]
  403056:	eb07 0747 	add.w	r7, r7, r7, lsl #1
  40305a:	1a5b      	subs	r3, r3, r1
  40305c:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
  403060:	1c58      	adds	r0, r3, #1
  403062:	107f      	asrs	r7, r7, #1
  403064:	4440      	add	r0, r8
  403066:	4287      	cmp	r7, r0
  403068:	463a      	mov	r2, r7
  40306a:	bf3c      	itt	cc
  40306c:	4607      	movcc	r7, r0
  40306e:	463a      	movcc	r2, r7
  403070:	f41e 6f80 	tst.w	lr, #1024	; 0x400
  403074:	9300      	str	r3, [sp, #0]
  403076:	d046      	beq.n	403106 <__sfvwrite_r+0x2d2>
  403078:	4611      	mov	r1, r2
  40307a:	4648      	mov	r0, r9
  40307c:	f000 f912 	bl	4032a4 <_malloc_r>
  403080:	9b00      	ldr	r3, [sp, #0]
  403082:	4682      	mov	sl, r0
  403084:	2800      	cmp	r0, #0
  403086:	d059      	beq.n	40313c <__sfvwrite_r+0x308>
  403088:	461a      	mov	r2, r3
  40308a:	6921      	ldr	r1, [r4, #16]
  40308c:	9300      	str	r3, [sp, #0]
  40308e:	f000 fbe5 	bl	40385c <memcpy>
  403092:	89a2      	ldrh	r2, [r4, #12]
  403094:	9b00      	ldr	r3, [sp, #0]
  403096:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  40309a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  40309e:	81a2      	strh	r2, [r4, #12]
  4030a0:	eb0a 0003 	add.w	r0, sl, r3
  4030a4:	1afb      	subs	r3, r7, r3
  4030a6:	f8c4 a010 	str.w	sl, [r4, #16]
  4030aa:	6167      	str	r7, [r4, #20]
  4030ac:	6020      	str	r0, [r4, #0]
  4030ae:	60a3      	str	r3, [r4, #8]
  4030b0:	4647      	mov	r7, r8
  4030b2:	46c2      	mov	sl, r8
  4030b4:	e717      	b.n	402ee6 <__sfvwrite_r+0xb2>
  4030b6:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
  4030ba:	4543      	cmp	r3, r8
  4030bc:	bf28      	it	cs
  4030be:	4643      	movcs	r3, r8
  4030c0:	6a67      	ldr	r7, [r4, #36]	; 0x24
  4030c2:	fb93 f3f2 	sdiv	r3, r3, r2
  4030c6:	4648      	mov	r0, r9
  4030c8:	fb03 f302 	mul.w	r3, r3, r2
  4030cc:	69e1      	ldr	r1, [r4, #28]
  4030ce:	465a      	mov	r2, fp
  4030d0:	47b8      	blx	r7
  4030d2:	2800      	cmp	r0, #0
  4030d4:	f73f af13 	bgt.w	402efe <__sfvwrite_r+0xca>
  4030d8:	e749      	b.n	402f6e <__sfvwrite_r+0x13a>
  4030da:	4662      	mov	r2, ip
  4030dc:	4659      	mov	r1, fp
  4030de:	f8cd c004 	str.w	ip, [sp, #4]
  4030e2:	f000 fc55 	bl	403990 <memmove>
  4030e6:	6823      	ldr	r3, [r4, #0]
  4030e8:	f8dd c004 	ldr.w	ip, [sp, #4]
  4030ec:	4463      	add	r3, ip
  4030ee:	6023      	str	r3, [r4, #0]
  4030f0:	4648      	mov	r0, r9
  4030f2:	4621      	mov	r1, r4
  4030f4:	f7ff fc5a 	bl	4029ac <_fflush_r>
  4030f8:	f8dd c004 	ldr.w	ip, [sp, #4]
  4030fc:	2800      	cmp	r0, #0
  4030fe:	f47f af36 	bne.w	402f6e <__sfvwrite_r+0x13a>
  403102:	4667      	mov	r7, ip
  403104:	e761      	b.n	402fca <__sfvwrite_r+0x196>
  403106:	4648      	mov	r0, r9
  403108:	f000 fcaa 	bl	403a60 <_realloc_r>
  40310c:	9b00      	ldr	r3, [sp, #0]
  40310e:	4682      	mov	sl, r0
  403110:	2800      	cmp	r0, #0
  403112:	d1c5      	bne.n	4030a0 <__sfvwrite_r+0x26c>
  403114:	4648      	mov	r0, r9
  403116:	6921      	ldr	r1, [r4, #16]
  403118:	f7ff fdb4 	bl	402c84 <_free_r>
  40311c:	89a3      	ldrh	r3, [r4, #12]
  40311e:	220c      	movs	r2, #12
  403120:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  403124:	b29b      	uxth	r3, r3
  403126:	f8c9 2000 	str.w	r2, [r9]
  40312a:	e721      	b.n	402f70 <__sfvwrite_r+0x13c>
  40312c:	2301      	movs	r3, #1
  40312e:	f10a 0801 	add.w	r8, sl, #1
  403132:	9300      	str	r3, [sp, #0]
  403134:	e72e      	b.n	402f94 <__sfvwrite_r+0x160>
  403136:	f04f 30ff 	mov.w	r0, #4294967295
  40313a:	e6ad      	b.n	402e98 <__sfvwrite_r+0x64>
  40313c:	230c      	movs	r3, #12
  40313e:	f8c9 3000 	str.w	r3, [r9]
  403142:	89a3      	ldrh	r3, [r4, #12]
  403144:	e714      	b.n	402f70 <__sfvwrite_r+0x13c>
  403146:	bf00      	nop
  403148:	7ffffc00 	.word	0x7ffffc00

0040314c <_fwalk_reent>:
  40314c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  403150:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  403154:	d01f      	beq.n	403196 <_fwalk_reent+0x4a>
  403156:	4688      	mov	r8, r1
  403158:	4606      	mov	r6, r0
  40315a:	f04f 0900 	mov.w	r9, #0
  40315e:	687d      	ldr	r5, [r7, #4]
  403160:	68bc      	ldr	r4, [r7, #8]
  403162:	3d01      	subs	r5, #1
  403164:	d411      	bmi.n	40318a <_fwalk_reent+0x3e>
  403166:	89a3      	ldrh	r3, [r4, #12]
  403168:	2b01      	cmp	r3, #1
  40316a:	f105 35ff 	add.w	r5, r5, #4294967295
  40316e:	d908      	bls.n	403182 <_fwalk_reent+0x36>
  403170:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  403174:	3301      	adds	r3, #1
  403176:	4621      	mov	r1, r4
  403178:	4630      	mov	r0, r6
  40317a:	d002      	beq.n	403182 <_fwalk_reent+0x36>
  40317c:	47c0      	blx	r8
  40317e:	ea49 0900 	orr.w	r9, r9, r0
  403182:	1c6b      	adds	r3, r5, #1
  403184:	f104 0468 	add.w	r4, r4, #104	; 0x68
  403188:	d1ed      	bne.n	403166 <_fwalk_reent+0x1a>
  40318a:	683f      	ldr	r7, [r7, #0]
  40318c:	2f00      	cmp	r7, #0
  40318e:	d1e6      	bne.n	40315e <_fwalk_reent+0x12>
  403190:	4648      	mov	r0, r9
  403192:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  403196:	46b9      	mov	r9, r7
  403198:	4648      	mov	r0, r9
  40319a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40319e:	bf00      	nop

004031a0 <__locale_charset>:
  4031a0:	4800      	ldr	r0, [pc, #0]	; (4031a4 <__locale_charset+0x4>)
  4031a2:	4770      	bx	lr
  4031a4:	20000434 	.word	0x20000434

004031a8 <__locale_mb_cur_max>:
  4031a8:	4b01      	ldr	r3, [pc, #4]	; (4031b0 <__locale_mb_cur_max+0x8>)
  4031aa:	6818      	ldr	r0, [r3, #0]
  4031ac:	4770      	bx	lr
  4031ae:	bf00      	nop
  4031b0:	20000454 	.word	0x20000454

004031b4 <__smakebuf_r>:
  4031b4:	898b      	ldrh	r3, [r1, #12]
  4031b6:	b29a      	uxth	r2, r3
  4031b8:	f012 0f02 	tst.w	r2, #2
  4031bc:	d13c      	bne.n	403238 <__smakebuf_r+0x84>
  4031be:	b5f0      	push	{r4, r5, r6, r7, lr}
  4031c0:	460c      	mov	r4, r1
  4031c2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4031c6:	2900      	cmp	r1, #0
  4031c8:	b091      	sub	sp, #68	; 0x44
  4031ca:	4605      	mov	r5, r0
  4031cc:	db19      	blt.n	403202 <__smakebuf_r+0x4e>
  4031ce:	aa01      	add	r2, sp, #4
  4031d0:	f000 ffd6 	bl	404180 <_fstat_r>
  4031d4:	2800      	cmp	r0, #0
  4031d6:	db12      	blt.n	4031fe <__smakebuf_r+0x4a>
  4031d8:	9b02      	ldr	r3, [sp, #8]
  4031da:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  4031de:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
  4031e2:	f5a3 5700 	sub.w	r7, r3, #8192	; 0x2000
  4031e6:	fab7 f787 	clz	r7, r7
  4031ea:	ea4f 1757 	mov.w	r7, r7, lsr #5
  4031ee:	d02a      	beq.n	403246 <__smakebuf_r+0x92>
  4031f0:	89a3      	ldrh	r3, [r4, #12]
  4031f2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  4031f6:	81a3      	strh	r3, [r4, #12]
  4031f8:	f44f 6680 	mov.w	r6, #1024	; 0x400
  4031fc:	e00b      	b.n	403216 <__smakebuf_r+0x62>
  4031fe:	89a3      	ldrh	r3, [r4, #12]
  403200:	b29a      	uxth	r2, r3
  403202:	f012 0f80 	tst.w	r2, #128	; 0x80
  403206:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  40320a:	81a3      	strh	r3, [r4, #12]
  40320c:	bf0c      	ite	eq
  40320e:	f44f 6680 	moveq.w	r6, #1024	; 0x400
  403212:	2640      	movne	r6, #64	; 0x40
  403214:	2700      	movs	r7, #0
  403216:	4628      	mov	r0, r5
  403218:	4631      	mov	r1, r6
  40321a:	f000 f843 	bl	4032a4 <_malloc_r>
  40321e:	89a3      	ldrh	r3, [r4, #12]
  403220:	b340      	cbz	r0, 403274 <__smakebuf_r+0xc0>
  403222:	4a1a      	ldr	r2, [pc, #104]	; (40328c <__smakebuf_r+0xd8>)
  403224:	63ea      	str	r2, [r5, #60]	; 0x3c
  403226:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40322a:	81a3      	strh	r3, [r4, #12]
  40322c:	6020      	str	r0, [r4, #0]
  40322e:	6120      	str	r0, [r4, #16]
  403230:	6166      	str	r6, [r4, #20]
  403232:	b99f      	cbnz	r7, 40325c <__smakebuf_r+0xa8>
  403234:	b011      	add	sp, #68	; 0x44
  403236:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403238:	f101 0343 	add.w	r3, r1, #67	; 0x43
  40323c:	2201      	movs	r2, #1
  40323e:	600b      	str	r3, [r1, #0]
  403240:	610b      	str	r3, [r1, #16]
  403242:	614a      	str	r2, [r1, #20]
  403244:	4770      	bx	lr
  403246:	4b12      	ldr	r3, [pc, #72]	; (403290 <__smakebuf_r+0xdc>)
  403248:	6aa2      	ldr	r2, [r4, #40]	; 0x28
  40324a:	429a      	cmp	r2, r3
  40324c:	d1d0      	bne.n	4031f0 <__smakebuf_r+0x3c>
  40324e:	89a3      	ldrh	r3, [r4, #12]
  403250:	f44f 6680 	mov.w	r6, #1024	; 0x400
  403254:	4333      	orrs	r3, r6
  403256:	81a3      	strh	r3, [r4, #12]
  403258:	64e6      	str	r6, [r4, #76]	; 0x4c
  40325a:	e7dc      	b.n	403216 <__smakebuf_r+0x62>
  40325c:	4628      	mov	r0, r5
  40325e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  403262:	f000 ffa1 	bl	4041a8 <_isatty_r>
  403266:	2800      	cmp	r0, #0
  403268:	d0e4      	beq.n	403234 <__smakebuf_r+0x80>
  40326a:	89a3      	ldrh	r3, [r4, #12]
  40326c:	f043 0301 	orr.w	r3, r3, #1
  403270:	81a3      	strh	r3, [r4, #12]
  403272:	e7df      	b.n	403234 <__smakebuf_r+0x80>
  403274:	059a      	lsls	r2, r3, #22
  403276:	d4dd      	bmi.n	403234 <__smakebuf_r+0x80>
  403278:	f104 0243 	add.w	r2, r4, #67	; 0x43
  40327c:	f043 0302 	orr.w	r3, r3, #2
  403280:	2101      	movs	r1, #1
  403282:	81a3      	strh	r3, [r4, #12]
  403284:	6022      	str	r2, [r4, #0]
  403286:	6122      	str	r2, [r4, #16]
  403288:	6161      	str	r1, [r4, #20]
  40328a:	e7d3      	b.n	403234 <__smakebuf_r+0x80>
  40328c:	004029d9 	.word	0x004029d9
  403290:	00403ecd 	.word	0x00403ecd

00403294 <malloc>:
  403294:	4b02      	ldr	r3, [pc, #8]	; (4032a0 <malloc+0xc>)
  403296:	4601      	mov	r1, r0
  403298:	6818      	ldr	r0, [r3, #0]
  40329a:	f000 b803 	b.w	4032a4 <_malloc_r>
  40329e:	bf00      	nop
  4032a0:	20000430 	.word	0x20000430

004032a4 <_malloc_r>:
  4032a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4032a8:	f101 050b 	add.w	r5, r1, #11
  4032ac:	2d16      	cmp	r5, #22
  4032ae:	b083      	sub	sp, #12
  4032b0:	4606      	mov	r6, r0
  4032b2:	d927      	bls.n	403304 <_malloc_r+0x60>
  4032b4:	f035 0507 	bics.w	r5, r5, #7
  4032b8:	f100 80b6 	bmi.w	403428 <_malloc_r+0x184>
  4032bc:	42a9      	cmp	r1, r5
  4032be:	f200 80b3 	bhi.w	403428 <_malloc_r+0x184>
  4032c2:	f000 fbc9 	bl	403a58 <__malloc_lock>
  4032c6:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
  4032ca:	d222      	bcs.n	403312 <_malloc_r+0x6e>
  4032cc:	4fc2      	ldr	r7, [pc, #776]	; (4035d8 <_malloc_r+0x334>)
  4032ce:	08e8      	lsrs	r0, r5, #3
  4032d0:	eb07 03c0 	add.w	r3, r7, r0, lsl #3
  4032d4:	68dc      	ldr	r4, [r3, #12]
  4032d6:	429c      	cmp	r4, r3
  4032d8:	f000 81c8 	beq.w	40366c <_malloc_r+0x3c8>
  4032dc:	6863      	ldr	r3, [r4, #4]
  4032de:	68e1      	ldr	r1, [r4, #12]
  4032e0:	68a5      	ldr	r5, [r4, #8]
  4032e2:	f023 0303 	bic.w	r3, r3, #3
  4032e6:	4423      	add	r3, r4
  4032e8:	4630      	mov	r0, r6
  4032ea:	685a      	ldr	r2, [r3, #4]
  4032ec:	60e9      	str	r1, [r5, #12]
  4032ee:	f042 0201 	orr.w	r2, r2, #1
  4032f2:	608d      	str	r5, [r1, #8]
  4032f4:	605a      	str	r2, [r3, #4]
  4032f6:	f000 fbb1 	bl	403a5c <__malloc_unlock>
  4032fa:	3408      	adds	r4, #8
  4032fc:	4620      	mov	r0, r4
  4032fe:	b003      	add	sp, #12
  403300:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403304:	2910      	cmp	r1, #16
  403306:	f200 808f 	bhi.w	403428 <_malloc_r+0x184>
  40330a:	f000 fba5 	bl	403a58 <__malloc_lock>
  40330e:	2510      	movs	r5, #16
  403310:	e7dc      	b.n	4032cc <_malloc_r+0x28>
  403312:	0a68      	lsrs	r0, r5, #9
  403314:	f000 808f 	beq.w	403436 <_malloc_r+0x192>
  403318:	2804      	cmp	r0, #4
  40331a:	f200 8154 	bhi.w	4035c6 <_malloc_r+0x322>
  40331e:	09a8      	lsrs	r0, r5, #6
  403320:	3038      	adds	r0, #56	; 0x38
  403322:	0041      	lsls	r1, r0, #1
  403324:	4fac      	ldr	r7, [pc, #688]	; (4035d8 <_malloc_r+0x334>)
  403326:	eb07 0181 	add.w	r1, r7, r1, lsl #2
  40332a:	68cc      	ldr	r4, [r1, #12]
  40332c:	42a1      	cmp	r1, r4
  40332e:	d106      	bne.n	40333e <_malloc_r+0x9a>
  403330:	e00c      	b.n	40334c <_malloc_r+0xa8>
  403332:	2a00      	cmp	r2, #0
  403334:	f280 8082 	bge.w	40343c <_malloc_r+0x198>
  403338:	68e4      	ldr	r4, [r4, #12]
  40333a:	42a1      	cmp	r1, r4
  40333c:	d006      	beq.n	40334c <_malloc_r+0xa8>
  40333e:	6863      	ldr	r3, [r4, #4]
  403340:	f023 0303 	bic.w	r3, r3, #3
  403344:	1b5a      	subs	r2, r3, r5
  403346:	2a0f      	cmp	r2, #15
  403348:	ddf3      	ble.n	403332 <_malloc_r+0x8e>
  40334a:	3801      	subs	r0, #1
  40334c:	3001      	adds	r0, #1
  40334e:	49a2      	ldr	r1, [pc, #648]	; (4035d8 <_malloc_r+0x334>)
  403350:	693c      	ldr	r4, [r7, #16]
  403352:	f101 0e08 	add.w	lr, r1, #8
  403356:	4574      	cmp	r4, lr
  403358:	f000 817d 	beq.w	403656 <_malloc_r+0x3b2>
  40335c:	6863      	ldr	r3, [r4, #4]
  40335e:	f023 0303 	bic.w	r3, r3, #3
  403362:	1b5a      	subs	r2, r3, r5
  403364:	2a0f      	cmp	r2, #15
  403366:	f300 8163 	bgt.w	403630 <_malloc_r+0x38c>
  40336a:	2a00      	cmp	r2, #0
  40336c:	f8c1 e014 	str.w	lr, [r1, #20]
  403370:	f8c1 e010 	str.w	lr, [r1, #16]
  403374:	da73      	bge.n	40345e <_malloc_r+0x1ba>
  403376:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40337a:	f080 8139 	bcs.w	4035f0 <_malloc_r+0x34c>
  40337e:	08db      	lsrs	r3, r3, #3
  403380:	eb01 08c3 	add.w	r8, r1, r3, lsl #3
  403384:	ea4f 0ca3 	mov.w	ip, r3, asr #2
  403388:	684a      	ldr	r2, [r1, #4]
  40338a:	f8d8 9008 	ldr.w	r9, [r8, #8]
  40338e:	f8c4 9008 	str.w	r9, [r4, #8]
  403392:	2301      	movs	r3, #1
  403394:	fa03 f30c 	lsl.w	r3, r3, ip
  403398:	4313      	orrs	r3, r2
  40339a:	f8c4 800c 	str.w	r8, [r4, #12]
  40339e:	604b      	str	r3, [r1, #4]
  4033a0:	f8c8 4008 	str.w	r4, [r8, #8]
  4033a4:	f8c9 400c 	str.w	r4, [r9, #12]
  4033a8:	1082      	asrs	r2, r0, #2
  4033aa:	2401      	movs	r4, #1
  4033ac:	4094      	lsls	r4, r2
  4033ae:	429c      	cmp	r4, r3
  4033b0:	d862      	bhi.n	403478 <_malloc_r+0x1d4>
  4033b2:	4223      	tst	r3, r4
  4033b4:	d106      	bne.n	4033c4 <_malloc_r+0x120>
  4033b6:	f020 0003 	bic.w	r0, r0, #3
  4033ba:	0064      	lsls	r4, r4, #1
  4033bc:	4223      	tst	r3, r4
  4033be:	f100 0004 	add.w	r0, r0, #4
  4033c2:	d0fa      	beq.n	4033ba <_malloc_r+0x116>
  4033c4:	eb07 08c0 	add.w	r8, r7, r0, lsl #3
  4033c8:	46c4      	mov	ip, r8
  4033ca:	4681      	mov	r9, r0
  4033cc:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4033d0:	459c      	cmp	ip, r3
  4033d2:	d107      	bne.n	4033e4 <_malloc_r+0x140>
  4033d4:	e141      	b.n	40365a <_malloc_r+0x3b6>
  4033d6:	2900      	cmp	r1, #0
  4033d8:	f280 8151 	bge.w	40367e <_malloc_r+0x3da>
  4033dc:	68db      	ldr	r3, [r3, #12]
  4033de:	459c      	cmp	ip, r3
  4033e0:	f000 813b 	beq.w	40365a <_malloc_r+0x3b6>
  4033e4:	685a      	ldr	r2, [r3, #4]
  4033e6:	f022 0203 	bic.w	r2, r2, #3
  4033ea:	1b51      	subs	r1, r2, r5
  4033ec:	290f      	cmp	r1, #15
  4033ee:	ddf2      	ble.n	4033d6 <_malloc_r+0x132>
  4033f0:	461c      	mov	r4, r3
  4033f2:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4033f6:	f854 8f08 	ldr.w	r8, [r4, #8]!
  4033fa:	195a      	adds	r2, r3, r5
  4033fc:	f045 0901 	orr.w	r9, r5, #1
  403400:	f041 0501 	orr.w	r5, r1, #1
  403404:	f8c3 9004 	str.w	r9, [r3, #4]
  403408:	4630      	mov	r0, r6
  40340a:	f8c8 c00c 	str.w	ip, [r8, #12]
  40340e:	f8cc 8008 	str.w	r8, [ip, #8]
  403412:	617a      	str	r2, [r7, #20]
  403414:	613a      	str	r2, [r7, #16]
  403416:	f8c2 e00c 	str.w	lr, [r2, #12]
  40341a:	f8c2 e008 	str.w	lr, [r2, #8]
  40341e:	6055      	str	r5, [r2, #4]
  403420:	5051      	str	r1, [r2, r1]
  403422:	f000 fb1b 	bl	403a5c <__malloc_unlock>
  403426:	e769      	b.n	4032fc <_malloc_r+0x58>
  403428:	2400      	movs	r4, #0
  40342a:	230c      	movs	r3, #12
  40342c:	4620      	mov	r0, r4
  40342e:	6033      	str	r3, [r6, #0]
  403430:	b003      	add	sp, #12
  403432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403436:	217e      	movs	r1, #126	; 0x7e
  403438:	203f      	movs	r0, #63	; 0x3f
  40343a:	e773      	b.n	403324 <_malloc_r+0x80>
  40343c:	4423      	add	r3, r4
  40343e:	68e1      	ldr	r1, [r4, #12]
  403440:	685a      	ldr	r2, [r3, #4]
  403442:	68a5      	ldr	r5, [r4, #8]
  403444:	f042 0201 	orr.w	r2, r2, #1
  403448:	60e9      	str	r1, [r5, #12]
  40344a:	4630      	mov	r0, r6
  40344c:	608d      	str	r5, [r1, #8]
  40344e:	605a      	str	r2, [r3, #4]
  403450:	f000 fb04 	bl	403a5c <__malloc_unlock>
  403454:	3408      	adds	r4, #8
  403456:	4620      	mov	r0, r4
  403458:	b003      	add	sp, #12
  40345a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40345e:	4423      	add	r3, r4
  403460:	4630      	mov	r0, r6
  403462:	685a      	ldr	r2, [r3, #4]
  403464:	f042 0201 	orr.w	r2, r2, #1
  403468:	605a      	str	r2, [r3, #4]
  40346a:	f000 faf7 	bl	403a5c <__malloc_unlock>
  40346e:	3408      	adds	r4, #8
  403470:	4620      	mov	r0, r4
  403472:	b003      	add	sp, #12
  403474:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403478:	68bc      	ldr	r4, [r7, #8]
  40347a:	6863      	ldr	r3, [r4, #4]
  40347c:	f023 0803 	bic.w	r8, r3, #3
  403480:	4545      	cmp	r5, r8
  403482:	d804      	bhi.n	40348e <_malloc_r+0x1ea>
  403484:	ebc5 0308 	rsb	r3, r5, r8
  403488:	2b0f      	cmp	r3, #15
  40348a:	f300 808c 	bgt.w	4035a6 <_malloc_r+0x302>
  40348e:	4b53      	ldr	r3, [pc, #332]	; (4035dc <_malloc_r+0x338>)
  403490:	f8df a158 	ldr.w	sl, [pc, #344]	; 4035ec <_malloc_r+0x348>
  403494:	681a      	ldr	r2, [r3, #0]
  403496:	f8da 3000 	ldr.w	r3, [sl]
  40349a:	3301      	adds	r3, #1
  40349c:	442a      	add	r2, r5
  40349e:	eb04 0b08 	add.w	fp, r4, r8
  4034a2:	f000 8150 	beq.w	403746 <_malloc_r+0x4a2>
  4034a6:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
  4034aa:	320f      	adds	r2, #15
  4034ac:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
  4034b0:	f022 020f 	bic.w	r2, r2, #15
  4034b4:	4611      	mov	r1, r2
  4034b6:	4630      	mov	r0, r6
  4034b8:	9201      	str	r2, [sp, #4]
  4034ba:	f000 fcc7 	bl	403e4c <_sbrk_r>
  4034be:	f1b0 3fff 	cmp.w	r0, #4294967295
  4034c2:	4681      	mov	r9, r0
  4034c4:	9a01      	ldr	r2, [sp, #4]
  4034c6:	f000 8147 	beq.w	403758 <_malloc_r+0x4b4>
  4034ca:	4583      	cmp	fp, r0
  4034cc:	f200 80ee 	bhi.w	4036ac <_malloc_r+0x408>
  4034d0:	4b43      	ldr	r3, [pc, #268]	; (4035e0 <_malloc_r+0x33c>)
  4034d2:	6819      	ldr	r1, [r3, #0]
  4034d4:	45cb      	cmp	fp, r9
  4034d6:	4411      	add	r1, r2
  4034d8:	6019      	str	r1, [r3, #0]
  4034da:	f000 8142 	beq.w	403762 <_malloc_r+0x4be>
  4034de:	f8da 0000 	ldr.w	r0, [sl]
  4034e2:	f8df e108 	ldr.w	lr, [pc, #264]	; 4035ec <_malloc_r+0x348>
  4034e6:	3001      	adds	r0, #1
  4034e8:	bf1b      	ittet	ne
  4034ea:	ebcb 0b09 	rsbne	fp, fp, r9
  4034ee:	4459      	addne	r1, fp
  4034f0:	f8ce 9000 	streq.w	r9, [lr]
  4034f4:	6019      	strne	r1, [r3, #0]
  4034f6:	f019 0107 	ands.w	r1, r9, #7
  4034fa:	f000 8107 	beq.w	40370c <_malloc_r+0x468>
  4034fe:	f1c1 0008 	rsb	r0, r1, #8
  403502:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  403506:	4481      	add	r9, r0
  403508:	3108      	adds	r1, #8
  40350a:	444a      	add	r2, r9
  40350c:	f3c2 020b 	ubfx	r2, r2, #0, #12
  403510:	ebc2 0a01 	rsb	sl, r2, r1
  403514:	4651      	mov	r1, sl
  403516:	4630      	mov	r0, r6
  403518:	9301      	str	r3, [sp, #4]
  40351a:	f000 fc97 	bl	403e4c <_sbrk_r>
  40351e:	1c43      	adds	r3, r0, #1
  403520:	9b01      	ldr	r3, [sp, #4]
  403522:	f000 812c 	beq.w	40377e <_malloc_r+0x4da>
  403526:	ebc9 0200 	rsb	r2, r9, r0
  40352a:	4452      	add	r2, sl
  40352c:	f042 0201 	orr.w	r2, r2, #1
  403530:	6819      	ldr	r1, [r3, #0]
  403532:	f8c7 9008 	str.w	r9, [r7, #8]
  403536:	4451      	add	r1, sl
  403538:	42bc      	cmp	r4, r7
  40353a:	f8c9 2004 	str.w	r2, [r9, #4]
  40353e:	6019      	str	r1, [r3, #0]
  403540:	f8df a09c 	ldr.w	sl, [pc, #156]	; 4035e0 <_malloc_r+0x33c>
  403544:	d016      	beq.n	403574 <_malloc_r+0x2d0>
  403546:	f1b8 0f0f 	cmp.w	r8, #15
  40354a:	f240 80ee 	bls.w	40372a <_malloc_r+0x486>
  40354e:	6862      	ldr	r2, [r4, #4]
  403550:	f1a8 030c 	sub.w	r3, r8, #12
  403554:	f023 0307 	bic.w	r3, r3, #7
  403558:	18e0      	adds	r0, r4, r3
  40355a:	f002 0201 	and.w	r2, r2, #1
  40355e:	f04f 0e05 	mov.w	lr, #5
  403562:	431a      	orrs	r2, r3
  403564:	2b0f      	cmp	r3, #15
  403566:	6062      	str	r2, [r4, #4]
  403568:	f8c0 e004 	str.w	lr, [r0, #4]
  40356c:	f8c0 e008 	str.w	lr, [r0, #8]
  403570:	f200 8109 	bhi.w	403786 <_malloc_r+0x4e2>
  403574:	4b1b      	ldr	r3, [pc, #108]	; (4035e4 <_malloc_r+0x340>)
  403576:	68bc      	ldr	r4, [r7, #8]
  403578:	681a      	ldr	r2, [r3, #0]
  40357a:	4291      	cmp	r1, r2
  40357c:	bf88      	it	hi
  40357e:	6019      	strhi	r1, [r3, #0]
  403580:	4b19      	ldr	r3, [pc, #100]	; (4035e8 <_malloc_r+0x344>)
  403582:	681a      	ldr	r2, [r3, #0]
  403584:	4291      	cmp	r1, r2
  403586:	6862      	ldr	r2, [r4, #4]
  403588:	bf88      	it	hi
  40358a:	6019      	strhi	r1, [r3, #0]
  40358c:	f022 0203 	bic.w	r2, r2, #3
  403590:	4295      	cmp	r5, r2
  403592:	eba2 0305 	sub.w	r3, r2, r5
  403596:	d801      	bhi.n	40359c <_malloc_r+0x2f8>
  403598:	2b0f      	cmp	r3, #15
  40359a:	dc04      	bgt.n	4035a6 <_malloc_r+0x302>
  40359c:	4630      	mov	r0, r6
  40359e:	f000 fa5d 	bl	403a5c <__malloc_unlock>
  4035a2:	2400      	movs	r4, #0
  4035a4:	e6aa      	b.n	4032fc <_malloc_r+0x58>
  4035a6:	1962      	adds	r2, r4, r5
  4035a8:	f043 0301 	orr.w	r3, r3, #1
  4035ac:	f045 0501 	orr.w	r5, r5, #1
  4035b0:	6065      	str	r5, [r4, #4]
  4035b2:	4630      	mov	r0, r6
  4035b4:	60ba      	str	r2, [r7, #8]
  4035b6:	6053      	str	r3, [r2, #4]
  4035b8:	f000 fa50 	bl	403a5c <__malloc_unlock>
  4035bc:	3408      	adds	r4, #8
  4035be:	4620      	mov	r0, r4
  4035c0:	b003      	add	sp, #12
  4035c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4035c6:	2814      	cmp	r0, #20
  4035c8:	d968      	bls.n	40369c <_malloc_r+0x3f8>
  4035ca:	2854      	cmp	r0, #84	; 0x54
  4035cc:	f200 8097 	bhi.w	4036fe <_malloc_r+0x45a>
  4035d0:	0b28      	lsrs	r0, r5, #12
  4035d2:	306e      	adds	r0, #110	; 0x6e
  4035d4:	0041      	lsls	r1, r0, #1
  4035d6:	e6a5      	b.n	403324 <_malloc_r+0x80>
  4035d8:	20000458 	.word	0x20000458
  4035dc:	20000908 	.word	0x20000908
  4035e0:	2000090c 	.word	0x2000090c
  4035e4:	20000904 	.word	0x20000904
  4035e8:	20000900 	.word	0x20000900
  4035ec:	20000864 	.word	0x20000864
  4035f0:	0a5a      	lsrs	r2, r3, #9
  4035f2:	2a04      	cmp	r2, #4
  4035f4:	d955      	bls.n	4036a2 <_malloc_r+0x3fe>
  4035f6:	2a14      	cmp	r2, #20
  4035f8:	f200 80a7 	bhi.w	40374a <_malloc_r+0x4a6>
  4035fc:	325b      	adds	r2, #91	; 0x5b
  4035fe:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  403602:	eb07 0c8c 	add.w	ip, r7, ip, lsl #2
  403606:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 4037c4 <_malloc_r+0x520>
  40360a:	f8dc 1008 	ldr.w	r1, [ip, #8]
  40360e:	4561      	cmp	r1, ip
  403610:	d07f      	beq.n	403712 <_malloc_r+0x46e>
  403612:	684a      	ldr	r2, [r1, #4]
  403614:	f022 0203 	bic.w	r2, r2, #3
  403618:	4293      	cmp	r3, r2
  40361a:	d202      	bcs.n	403622 <_malloc_r+0x37e>
  40361c:	6889      	ldr	r1, [r1, #8]
  40361e:	458c      	cmp	ip, r1
  403620:	d1f7      	bne.n	403612 <_malloc_r+0x36e>
  403622:	68ca      	ldr	r2, [r1, #12]
  403624:	687b      	ldr	r3, [r7, #4]
  403626:	60e2      	str	r2, [r4, #12]
  403628:	60a1      	str	r1, [r4, #8]
  40362a:	6094      	str	r4, [r2, #8]
  40362c:	60cc      	str	r4, [r1, #12]
  40362e:	e6bb      	b.n	4033a8 <_malloc_r+0x104>
  403630:	1963      	adds	r3, r4, r5
  403632:	f042 0701 	orr.w	r7, r2, #1
  403636:	f045 0501 	orr.w	r5, r5, #1
  40363a:	6065      	str	r5, [r4, #4]
  40363c:	4630      	mov	r0, r6
  40363e:	614b      	str	r3, [r1, #20]
  403640:	610b      	str	r3, [r1, #16]
  403642:	f8c3 e00c 	str.w	lr, [r3, #12]
  403646:	f8c3 e008 	str.w	lr, [r3, #8]
  40364a:	605f      	str	r7, [r3, #4]
  40364c:	509a      	str	r2, [r3, r2]
  40364e:	3408      	adds	r4, #8
  403650:	f000 fa04 	bl	403a5c <__malloc_unlock>
  403654:	e652      	b.n	4032fc <_malloc_r+0x58>
  403656:	684b      	ldr	r3, [r1, #4]
  403658:	e6a6      	b.n	4033a8 <_malloc_r+0x104>
  40365a:	f109 0901 	add.w	r9, r9, #1
  40365e:	f019 0f03 	tst.w	r9, #3
  403662:	f10c 0c08 	add.w	ip, ip, #8
  403666:	f47f aeb1 	bne.w	4033cc <_malloc_r+0x128>
  40366a:	e02c      	b.n	4036c6 <_malloc_r+0x422>
  40366c:	f104 0308 	add.w	r3, r4, #8
  403670:	6964      	ldr	r4, [r4, #20]
  403672:	42a3      	cmp	r3, r4
  403674:	bf08      	it	eq
  403676:	3002      	addeq	r0, #2
  403678:	f43f ae69 	beq.w	40334e <_malloc_r+0xaa>
  40367c:	e62e      	b.n	4032dc <_malloc_r+0x38>
  40367e:	441a      	add	r2, r3
  403680:	461c      	mov	r4, r3
  403682:	6851      	ldr	r1, [r2, #4]
  403684:	68db      	ldr	r3, [r3, #12]
  403686:	f854 5f08 	ldr.w	r5, [r4, #8]!
  40368a:	f041 0101 	orr.w	r1, r1, #1
  40368e:	6051      	str	r1, [r2, #4]
  403690:	4630      	mov	r0, r6
  403692:	60eb      	str	r3, [r5, #12]
  403694:	609d      	str	r5, [r3, #8]
  403696:	f000 f9e1 	bl	403a5c <__malloc_unlock>
  40369a:	e62f      	b.n	4032fc <_malloc_r+0x58>
  40369c:	305b      	adds	r0, #91	; 0x5b
  40369e:	0041      	lsls	r1, r0, #1
  4036a0:	e640      	b.n	403324 <_malloc_r+0x80>
  4036a2:	099a      	lsrs	r2, r3, #6
  4036a4:	3238      	adds	r2, #56	; 0x38
  4036a6:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  4036aa:	e7aa      	b.n	403602 <_malloc_r+0x35e>
  4036ac:	42bc      	cmp	r4, r7
  4036ae:	4b45      	ldr	r3, [pc, #276]	; (4037c4 <_malloc_r+0x520>)
  4036b0:	f43f af0e 	beq.w	4034d0 <_malloc_r+0x22c>
  4036b4:	689c      	ldr	r4, [r3, #8]
  4036b6:	6862      	ldr	r2, [r4, #4]
  4036b8:	f022 0203 	bic.w	r2, r2, #3
  4036bc:	e768      	b.n	403590 <_malloc_r+0x2ec>
  4036be:	f8d8 8000 	ldr.w	r8, [r8]
  4036c2:	4598      	cmp	r8, r3
  4036c4:	d17c      	bne.n	4037c0 <_malloc_r+0x51c>
  4036c6:	f010 0f03 	tst.w	r0, #3
  4036ca:	f1a8 0308 	sub.w	r3, r8, #8
  4036ce:	f100 30ff 	add.w	r0, r0, #4294967295
  4036d2:	d1f4      	bne.n	4036be <_malloc_r+0x41a>
  4036d4:	687b      	ldr	r3, [r7, #4]
  4036d6:	ea23 0304 	bic.w	r3, r3, r4
  4036da:	607b      	str	r3, [r7, #4]
  4036dc:	0064      	lsls	r4, r4, #1
  4036de:	429c      	cmp	r4, r3
  4036e0:	f63f aeca 	bhi.w	403478 <_malloc_r+0x1d4>
  4036e4:	2c00      	cmp	r4, #0
  4036e6:	f43f aec7 	beq.w	403478 <_malloc_r+0x1d4>
  4036ea:	4223      	tst	r3, r4
  4036ec:	4648      	mov	r0, r9
  4036ee:	f47f ae69 	bne.w	4033c4 <_malloc_r+0x120>
  4036f2:	0064      	lsls	r4, r4, #1
  4036f4:	4223      	tst	r3, r4
  4036f6:	f100 0004 	add.w	r0, r0, #4
  4036fa:	d0fa      	beq.n	4036f2 <_malloc_r+0x44e>
  4036fc:	e662      	b.n	4033c4 <_malloc_r+0x120>
  4036fe:	f5b0 7faa 	cmp.w	r0, #340	; 0x154
  403702:	d818      	bhi.n	403736 <_malloc_r+0x492>
  403704:	0be8      	lsrs	r0, r5, #15
  403706:	3077      	adds	r0, #119	; 0x77
  403708:	0041      	lsls	r1, r0, #1
  40370a:	e60b      	b.n	403324 <_malloc_r+0x80>
  40370c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  403710:	e6fb      	b.n	40350a <_malloc_r+0x266>
  403712:	f8d8 3004 	ldr.w	r3, [r8, #4]
  403716:	1092      	asrs	r2, r2, #2
  403718:	f04f 0c01 	mov.w	ip, #1
  40371c:	fa0c f202 	lsl.w	r2, ip, r2
  403720:	4313      	orrs	r3, r2
  403722:	f8c8 3004 	str.w	r3, [r8, #4]
  403726:	460a      	mov	r2, r1
  403728:	e77d      	b.n	403626 <_malloc_r+0x382>
  40372a:	2301      	movs	r3, #1
  40372c:	f8c9 3004 	str.w	r3, [r9, #4]
  403730:	464c      	mov	r4, r9
  403732:	2200      	movs	r2, #0
  403734:	e72c      	b.n	403590 <_malloc_r+0x2ec>
  403736:	f240 5354 	movw	r3, #1364	; 0x554
  40373a:	4298      	cmp	r0, r3
  40373c:	d81c      	bhi.n	403778 <_malloc_r+0x4d4>
  40373e:	0ca8      	lsrs	r0, r5, #18
  403740:	307c      	adds	r0, #124	; 0x7c
  403742:	0041      	lsls	r1, r0, #1
  403744:	e5ee      	b.n	403324 <_malloc_r+0x80>
  403746:	3210      	adds	r2, #16
  403748:	e6b4      	b.n	4034b4 <_malloc_r+0x210>
  40374a:	2a54      	cmp	r2, #84	; 0x54
  40374c:	d823      	bhi.n	403796 <_malloc_r+0x4f2>
  40374e:	0b1a      	lsrs	r2, r3, #12
  403750:	326e      	adds	r2, #110	; 0x6e
  403752:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  403756:	e754      	b.n	403602 <_malloc_r+0x35e>
  403758:	68bc      	ldr	r4, [r7, #8]
  40375a:	6862      	ldr	r2, [r4, #4]
  40375c:	f022 0203 	bic.w	r2, r2, #3
  403760:	e716      	b.n	403590 <_malloc_r+0x2ec>
  403762:	f3cb 000b 	ubfx	r0, fp, #0, #12
  403766:	2800      	cmp	r0, #0
  403768:	f47f aeb9 	bne.w	4034de <_malloc_r+0x23a>
  40376c:	4442      	add	r2, r8
  40376e:	68bb      	ldr	r3, [r7, #8]
  403770:	f042 0201 	orr.w	r2, r2, #1
  403774:	605a      	str	r2, [r3, #4]
  403776:	e6fd      	b.n	403574 <_malloc_r+0x2d0>
  403778:	21fc      	movs	r1, #252	; 0xfc
  40377a:	207e      	movs	r0, #126	; 0x7e
  40377c:	e5d2      	b.n	403324 <_malloc_r+0x80>
  40377e:	2201      	movs	r2, #1
  403780:	f04f 0a00 	mov.w	sl, #0
  403784:	e6d4      	b.n	403530 <_malloc_r+0x28c>
  403786:	f104 0108 	add.w	r1, r4, #8
  40378a:	4630      	mov	r0, r6
  40378c:	f7ff fa7a 	bl	402c84 <_free_r>
  403790:	f8da 1000 	ldr.w	r1, [sl]
  403794:	e6ee      	b.n	403574 <_malloc_r+0x2d0>
  403796:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  40379a:	d804      	bhi.n	4037a6 <_malloc_r+0x502>
  40379c:	0bda      	lsrs	r2, r3, #15
  40379e:	3277      	adds	r2, #119	; 0x77
  4037a0:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  4037a4:	e72d      	b.n	403602 <_malloc_r+0x35e>
  4037a6:	f240 5154 	movw	r1, #1364	; 0x554
  4037aa:	428a      	cmp	r2, r1
  4037ac:	d804      	bhi.n	4037b8 <_malloc_r+0x514>
  4037ae:	0c9a      	lsrs	r2, r3, #18
  4037b0:	327c      	adds	r2, #124	; 0x7c
  4037b2:	ea4f 0c42 	mov.w	ip, r2, lsl #1
  4037b6:	e724      	b.n	403602 <_malloc_r+0x35e>
  4037b8:	f04f 0cfc 	mov.w	ip, #252	; 0xfc
  4037bc:	227e      	movs	r2, #126	; 0x7e
  4037be:	e720      	b.n	403602 <_malloc_r+0x35e>
  4037c0:	687b      	ldr	r3, [r7, #4]
  4037c2:	e78b      	b.n	4036dc <_malloc_r+0x438>
  4037c4:	20000458 	.word	0x20000458

004037c8 <memchr>:
  4037c8:	0783      	lsls	r3, r0, #30
  4037ca:	b470      	push	{r4, r5, r6}
  4037cc:	b2c9      	uxtb	r1, r1
  4037ce:	d040      	beq.n	403852 <memchr+0x8a>
  4037d0:	1e54      	subs	r4, r2, #1
  4037d2:	2a00      	cmp	r2, #0
  4037d4:	d03f      	beq.n	403856 <memchr+0x8e>
  4037d6:	7803      	ldrb	r3, [r0, #0]
  4037d8:	428b      	cmp	r3, r1
  4037da:	bf18      	it	ne
  4037dc:	1c43      	addne	r3, r0, #1
  4037de:	d106      	bne.n	4037ee <memchr+0x26>
  4037e0:	e01d      	b.n	40381e <memchr+0x56>
  4037e2:	b1f4      	cbz	r4, 403822 <memchr+0x5a>
  4037e4:	7802      	ldrb	r2, [r0, #0]
  4037e6:	428a      	cmp	r2, r1
  4037e8:	f104 34ff 	add.w	r4, r4, #4294967295
  4037ec:	d017      	beq.n	40381e <memchr+0x56>
  4037ee:	f013 0f03 	tst.w	r3, #3
  4037f2:	4618      	mov	r0, r3
  4037f4:	f103 0301 	add.w	r3, r3, #1
  4037f8:	d1f3      	bne.n	4037e2 <memchr+0x1a>
  4037fa:	2c03      	cmp	r4, #3
  4037fc:	d814      	bhi.n	403828 <memchr+0x60>
  4037fe:	b184      	cbz	r4, 403822 <memchr+0x5a>
  403800:	7803      	ldrb	r3, [r0, #0]
  403802:	428b      	cmp	r3, r1
  403804:	d00b      	beq.n	40381e <memchr+0x56>
  403806:	1905      	adds	r5, r0, r4
  403808:	1c43      	adds	r3, r0, #1
  40380a:	e002      	b.n	403812 <memchr+0x4a>
  40380c:	7802      	ldrb	r2, [r0, #0]
  40380e:	428a      	cmp	r2, r1
  403810:	d005      	beq.n	40381e <memchr+0x56>
  403812:	42ab      	cmp	r3, r5
  403814:	4618      	mov	r0, r3
  403816:	f103 0301 	add.w	r3, r3, #1
  40381a:	d1f7      	bne.n	40380c <memchr+0x44>
  40381c:	2000      	movs	r0, #0
  40381e:	bc70      	pop	{r4, r5, r6}
  403820:	4770      	bx	lr
  403822:	4620      	mov	r0, r4
  403824:	bc70      	pop	{r4, r5, r6}
  403826:	4770      	bx	lr
  403828:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
  40382c:	4602      	mov	r2, r0
  40382e:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
  403832:	4610      	mov	r0, r2
  403834:	3204      	adds	r2, #4
  403836:	6803      	ldr	r3, [r0, #0]
  403838:	4073      	eors	r3, r6
  40383a:	f1a3 3501 	sub.w	r5, r3, #16843009	; 0x1010101
  40383e:	ea25 0303 	bic.w	r3, r5, r3
  403842:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
  403846:	d1da      	bne.n	4037fe <memchr+0x36>
  403848:	3c04      	subs	r4, #4
  40384a:	2c03      	cmp	r4, #3
  40384c:	4610      	mov	r0, r2
  40384e:	d8f0      	bhi.n	403832 <memchr+0x6a>
  403850:	e7d5      	b.n	4037fe <memchr+0x36>
  403852:	4614      	mov	r4, r2
  403854:	e7d1      	b.n	4037fa <memchr+0x32>
  403856:	4610      	mov	r0, r2
  403858:	e7e1      	b.n	40381e <memchr+0x56>
  40385a:	bf00      	nop

0040385c <memcpy>:
  40385c:	4684      	mov	ip, r0
  40385e:	ea41 0300 	orr.w	r3, r1, r0
  403862:	f013 0303 	ands.w	r3, r3, #3
  403866:	d16d      	bne.n	403944 <memcpy+0xe8>
  403868:	3a40      	subs	r2, #64	; 0x40
  40386a:	d341      	bcc.n	4038f0 <memcpy+0x94>
  40386c:	f851 3b04 	ldr.w	r3, [r1], #4
  403870:	f840 3b04 	str.w	r3, [r0], #4
  403874:	f851 3b04 	ldr.w	r3, [r1], #4
  403878:	f840 3b04 	str.w	r3, [r0], #4
  40387c:	f851 3b04 	ldr.w	r3, [r1], #4
  403880:	f840 3b04 	str.w	r3, [r0], #4
  403884:	f851 3b04 	ldr.w	r3, [r1], #4
  403888:	f840 3b04 	str.w	r3, [r0], #4
  40388c:	f851 3b04 	ldr.w	r3, [r1], #4
  403890:	f840 3b04 	str.w	r3, [r0], #4
  403894:	f851 3b04 	ldr.w	r3, [r1], #4
  403898:	f840 3b04 	str.w	r3, [r0], #4
  40389c:	f851 3b04 	ldr.w	r3, [r1], #4
  4038a0:	f840 3b04 	str.w	r3, [r0], #4
  4038a4:	f851 3b04 	ldr.w	r3, [r1], #4
  4038a8:	f840 3b04 	str.w	r3, [r0], #4
  4038ac:	f851 3b04 	ldr.w	r3, [r1], #4
  4038b0:	f840 3b04 	str.w	r3, [r0], #4
  4038b4:	f851 3b04 	ldr.w	r3, [r1], #4
  4038b8:	f840 3b04 	str.w	r3, [r0], #4
  4038bc:	f851 3b04 	ldr.w	r3, [r1], #4
  4038c0:	f840 3b04 	str.w	r3, [r0], #4
  4038c4:	f851 3b04 	ldr.w	r3, [r1], #4
  4038c8:	f840 3b04 	str.w	r3, [r0], #4
  4038cc:	f851 3b04 	ldr.w	r3, [r1], #4
  4038d0:	f840 3b04 	str.w	r3, [r0], #4
  4038d4:	f851 3b04 	ldr.w	r3, [r1], #4
  4038d8:	f840 3b04 	str.w	r3, [r0], #4
  4038dc:	f851 3b04 	ldr.w	r3, [r1], #4
  4038e0:	f840 3b04 	str.w	r3, [r0], #4
  4038e4:	f851 3b04 	ldr.w	r3, [r1], #4
  4038e8:	f840 3b04 	str.w	r3, [r0], #4
  4038ec:	3a40      	subs	r2, #64	; 0x40
  4038ee:	d2bd      	bcs.n	40386c <memcpy+0x10>
  4038f0:	3230      	adds	r2, #48	; 0x30
  4038f2:	d311      	bcc.n	403918 <memcpy+0xbc>
  4038f4:	f851 3b04 	ldr.w	r3, [r1], #4
  4038f8:	f840 3b04 	str.w	r3, [r0], #4
  4038fc:	f851 3b04 	ldr.w	r3, [r1], #4
  403900:	f840 3b04 	str.w	r3, [r0], #4
  403904:	f851 3b04 	ldr.w	r3, [r1], #4
  403908:	f840 3b04 	str.w	r3, [r0], #4
  40390c:	f851 3b04 	ldr.w	r3, [r1], #4
  403910:	f840 3b04 	str.w	r3, [r0], #4
  403914:	3a10      	subs	r2, #16
  403916:	d2ed      	bcs.n	4038f4 <memcpy+0x98>
  403918:	320c      	adds	r2, #12
  40391a:	d305      	bcc.n	403928 <memcpy+0xcc>
  40391c:	f851 3b04 	ldr.w	r3, [r1], #4
  403920:	f840 3b04 	str.w	r3, [r0], #4
  403924:	3a04      	subs	r2, #4
  403926:	d2f9      	bcs.n	40391c <memcpy+0xc0>
  403928:	3204      	adds	r2, #4
  40392a:	d008      	beq.n	40393e <memcpy+0xe2>
  40392c:	07d2      	lsls	r2, r2, #31
  40392e:	bf1c      	itt	ne
  403930:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403934:	f800 3b01 	strbne.w	r3, [r0], #1
  403938:	d301      	bcc.n	40393e <memcpy+0xe2>
  40393a:	880b      	ldrh	r3, [r1, #0]
  40393c:	8003      	strh	r3, [r0, #0]
  40393e:	4660      	mov	r0, ip
  403940:	4770      	bx	lr
  403942:	bf00      	nop
  403944:	2a08      	cmp	r2, #8
  403946:	d313      	bcc.n	403970 <memcpy+0x114>
  403948:	078b      	lsls	r3, r1, #30
  40394a:	d08d      	beq.n	403868 <memcpy+0xc>
  40394c:	f010 0303 	ands.w	r3, r0, #3
  403950:	d08a      	beq.n	403868 <memcpy+0xc>
  403952:	f1c3 0304 	rsb	r3, r3, #4
  403956:	1ad2      	subs	r2, r2, r3
  403958:	07db      	lsls	r3, r3, #31
  40395a:	bf1c      	itt	ne
  40395c:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403960:	f800 3b01 	strbne.w	r3, [r0], #1
  403964:	d380      	bcc.n	403868 <memcpy+0xc>
  403966:	f831 3b02 	ldrh.w	r3, [r1], #2
  40396a:	f820 3b02 	strh.w	r3, [r0], #2
  40396e:	e77b      	b.n	403868 <memcpy+0xc>
  403970:	3a04      	subs	r2, #4
  403972:	d3d9      	bcc.n	403928 <memcpy+0xcc>
  403974:	3a01      	subs	r2, #1
  403976:	f811 3b01 	ldrb.w	r3, [r1], #1
  40397a:	f800 3b01 	strb.w	r3, [r0], #1
  40397e:	d2f9      	bcs.n	403974 <memcpy+0x118>
  403980:	780b      	ldrb	r3, [r1, #0]
  403982:	7003      	strb	r3, [r0, #0]
  403984:	784b      	ldrb	r3, [r1, #1]
  403986:	7043      	strb	r3, [r0, #1]
  403988:	788b      	ldrb	r3, [r1, #2]
  40398a:	7083      	strb	r3, [r0, #2]
  40398c:	4660      	mov	r0, ip
  40398e:	4770      	bx	lr

00403990 <memmove>:
  403990:	4288      	cmp	r0, r1
  403992:	b5f0      	push	{r4, r5, r6, r7, lr}
  403994:	d90d      	bls.n	4039b2 <memmove+0x22>
  403996:	188b      	adds	r3, r1, r2
  403998:	4298      	cmp	r0, r3
  40399a:	d20a      	bcs.n	4039b2 <memmove+0x22>
  40399c:	1881      	adds	r1, r0, r2
  40399e:	2a00      	cmp	r2, #0
  4039a0:	d054      	beq.n	403a4c <memmove+0xbc>
  4039a2:	1a9a      	subs	r2, r3, r2
  4039a4:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  4039a8:	f801 4d01 	strb.w	r4, [r1, #-1]!
  4039ac:	4293      	cmp	r3, r2
  4039ae:	d1f9      	bne.n	4039a4 <memmove+0x14>
  4039b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4039b2:	2a0f      	cmp	r2, #15
  4039b4:	d948      	bls.n	403a48 <memmove+0xb8>
  4039b6:	ea40 0301 	orr.w	r3, r0, r1
  4039ba:	079b      	lsls	r3, r3, #30
  4039bc:	d147      	bne.n	403a4e <memmove+0xbe>
  4039be:	f100 0410 	add.w	r4, r0, #16
  4039c2:	f101 0310 	add.w	r3, r1, #16
  4039c6:	4615      	mov	r5, r2
  4039c8:	f853 6c10 	ldr.w	r6, [r3, #-16]
  4039cc:	f844 6c10 	str.w	r6, [r4, #-16]
  4039d0:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  4039d4:	f844 6c0c 	str.w	r6, [r4, #-12]
  4039d8:	f853 6c08 	ldr.w	r6, [r3, #-8]
  4039dc:	f844 6c08 	str.w	r6, [r4, #-8]
  4039e0:	3d10      	subs	r5, #16
  4039e2:	f853 6c04 	ldr.w	r6, [r3, #-4]
  4039e6:	f844 6c04 	str.w	r6, [r4, #-4]
  4039ea:	2d0f      	cmp	r5, #15
  4039ec:	f103 0310 	add.w	r3, r3, #16
  4039f0:	f104 0410 	add.w	r4, r4, #16
  4039f4:	d8e8      	bhi.n	4039c8 <memmove+0x38>
  4039f6:	f1a2 0310 	sub.w	r3, r2, #16
  4039fa:	f023 030f 	bic.w	r3, r3, #15
  4039fe:	f002 0e0f 	and.w	lr, r2, #15
  403a02:	3310      	adds	r3, #16
  403a04:	f1be 0f03 	cmp.w	lr, #3
  403a08:	4419      	add	r1, r3
  403a0a:	4403      	add	r3, r0
  403a0c:	d921      	bls.n	403a52 <memmove+0xc2>
  403a0e:	1f1e      	subs	r6, r3, #4
  403a10:	460d      	mov	r5, r1
  403a12:	4674      	mov	r4, lr
  403a14:	3c04      	subs	r4, #4
  403a16:	f855 7b04 	ldr.w	r7, [r5], #4
  403a1a:	f846 7f04 	str.w	r7, [r6, #4]!
  403a1e:	2c03      	cmp	r4, #3
  403a20:	d8f8      	bhi.n	403a14 <memmove+0x84>
  403a22:	f1ae 0404 	sub.w	r4, lr, #4
  403a26:	f024 0403 	bic.w	r4, r4, #3
  403a2a:	3404      	adds	r4, #4
  403a2c:	4423      	add	r3, r4
  403a2e:	4421      	add	r1, r4
  403a30:	f002 0203 	and.w	r2, r2, #3
  403a34:	b152      	cbz	r2, 403a4c <memmove+0xbc>
  403a36:	3b01      	subs	r3, #1
  403a38:	440a      	add	r2, r1
  403a3a:	f811 4b01 	ldrb.w	r4, [r1], #1
  403a3e:	f803 4f01 	strb.w	r4, [r3, #1]!
  403a42:	4291      	cmp	r1, r2
  403a44:	d1f9      	bne.n	403a3a <memmove+0xaa>
  403a46:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403a48:	4603      	mov	r3, r0
  403a4a:	e7f3      	b.n	403a34 <memmove+0xa4>
  403a4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403a4e:	4603      	mov	r3, r0
  403a50:	e7f1      	b.n	403a36 <memmove+0xa6>
  403a52:	4672      	mov	r2, lr
  403a54:	e7ee      	b.n	403a34 <memmove+0xa4>
  403a56:	bf00      	nop

00403a58 <__malloc_lock>:
  403a58:	4770      	bx	lr
  403a5a:	bf00      	nop

00403a5c <__malloc_unlock>:
  403a5c:	4770      	bx	lr
  403a5e:	bf00      	nop

00403a60 <_realloc_r>:
  403a60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403a64:	4617      	mov	r7, r2
  403a66:	b083      	sub	sp, #12
  403a68:	460e      	mov	r6, r1
  403a6a:	2900      	cmp	r1, #0
  403a6c:	f000 80e7 	beq.w	403c3e <_realloc_r+0x1de>
  403a70:	4681      	mov	r9, r0
  403a72:	f107 050b 	add.w	r5, r7, #11
  403a76:	f7ff ffef 	bl	403a58 <__malloc_lock>
  403a7a:	f856 3c04 	ldr.w	r3, [r6, #-4]
  403a7e:	2d16      	cmp	r5, #22
  403a80:	f023 0403 	bic.w	r4, r3, #3
  403a84:	f1a6 0808 	sub.w	r8, r6, #8
  403a88:	d84c      	bhi.n	403b24 <_realloc_r+0xc4>
  403a8a:	2210      	movs	r2, #16
  403a8c:	4615      	mov	r5, r2
  403a8e:	42af      	cmp	r7, r5
  403a90:	d84d      	bhi.n	403b2e <_realloc_r+0xce>
  403a92:	4294      	cmp	r4, r2
  403a94:	f280 8084 	bge.w	403ba0 <_realloc_r+0x140>
  403a98:	f8df b3ac 	ldr.w	fp, [pc, #940]	; 403e48 <_realloc_r+0x3e8>
  403a9c:	f8db 0008 	ldr.w	r0, [fp, #8]
  403aa0:	eb08 0104 	add.w	r1, r8, r4
  403aa4:	4288      	cmp	r0, r1
  403aa6:	f000 80d6 	beq.w	403c56 <_realloc_r+0x1f6>
  403aaa:	6848      	ldr	r0, [r1, #4]
  403aac:	f020 0e01 	bic.w	lr, r0, #1
  403ab0:	448e      	add	lr, r1
  403ab2:	f8de e004 	ldr.w	lr, [lr, #4]
  403ab6:	f01e 0f01 	tst.w	lr, #1
  403aba:	d13f      	bne.n	403b3c <_realloc_r+0xdc>
  403abc:	f020 0003 	bic.w	r0, r0, #3
  403ac0:	4420      	add	r0, r4
  403ac2:	4290      	cmp	r0, r2
  403ac4:	f280 80c1 	bge.w	403c4a <_realloc_r+0x1ea>
  403ac8:	07db      	lsls	r3, r3, #31
  403aca:	f100 808f 	bmi.w	403bec <_realloc_r+0x18c>
  403ace:	f856 3c08 	ldr.w	r3, [r6, #-8]
  403ad2:	ebc3 0a08 	rsb	sl, r3, r8
  403ad6:	f8da 3004 	ldr.w	r3, [sl, #4]
  403ada:	f023 0303 	bic.w	r3, r3, #3
  403ade:	eb00 0e03 	add.w	lr, r0, r3
  403ae2:	4596      	cmp	lr, r2
  403ae4:	db34      	blt.n	403b50 <_realloc_r+0xf0>
  403ae6:	68cb      	ldr	r3, [r1, #12]
  403ae8:	688a      	ldr	r2, [r1, #8]
  403aea:	4657      	mov	r7, sl
  403aec:	60d3      	str	r3, [r2, #12]
  403aee:	609a      	str	r2, [r3, #8]
  403af0:	f857 1f08 	ldr.w	r1, [r7, #8]!
  403af4:	f8da 300c 	ldr.w	r3, [sl, #12]
  403af8:	60cb      	str	r3, [r1, #12]
  403afa:	1f22      	subs	r2, r4, #4
  403afc:	2a24      	cmp	r2, #36	; 0x24
  403afe:	6099      	str	r1, [r3, #8]
  403b00:	f200 8136 	bhi.w	403d70 <_realloc_r+0x310>
  403b04:	2a13      	cmp	r2, #19
  403b06:	f240 80fd 	bls.w	403d04 <_realloc_r+0x2a4>
  403b0a:	6833      	ldr	r3, [r6, #0]
  403b0c:	f8ca 3008 	str.w	r3, [sl, #8]
  403b10:	6873      	ldr	r3, [r6, #4]
  403b12:	f8ca 300c 	str.w	r3, [sl, #12]
  403b16:	2a1b      	cmp	r2, #27
  403b18:	f200 8140 	bhi.w	403d9c <_realloc_r+0x33c>
  403b1c:	3608      	adds	r6, #8
  403b1e:	f10a 0310 	add.w	r3, sl, #16
  403b22:	e0f0      	b.n	403d06 <_realloc_r+0x2a6>
  403b24:	f025 0507 	bic.w	r5, r5, #7
  403b28:	2d00      	cmp	r5, #0
  403b2a:	462a      	mov	r2, r5
  403b2c:	daaf      	bge.n	403a8e <_realloc_r+0x2e>
  403b2e:	230c      	movs	r3, #12
  403b30:	2000      	movs	r0, #0
  403b32:	f8c9 3000 	str.w	r3, [r9]
  403b36:	b003      	add	sp, #12
  403b38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403b3c:	07d9      	lsls	r1, r3, #31
  403b3e:	d455      	bmi.n	403bec <_realloc_r+0x18c>
  403b40:	f856 3c08 	ldr.w	r3, [r6, #-8]
  403b44:	ebc3 0a08 	rsb	sl, r3, r8
  403b48:	f8da 3004 	ldr.w	r3, [sl, #4]
  403b4c:	f023 0303 	bic.w	r3, r3, #3
  403b50:	4423      	add	r3, r4
  403b52:	4293      	cmp	r3, r2
  403b54:	db4a      	blt.n	403bec <_realloc_r+0x18c>
  403b56:	4657      	mov	r7, sl
  403b58:	f8da 100c 	ldr.w	r1, [sl, #12]
  403b5c:	f857 0f08 	ldr.w	r0, [r7, #8]!
  403b60:	1f22      	subs	r2, r4, #4
  403b62:	2a24      	cmp	r2, #36	; 0x24
  403b64:	60c1      	str	r1, [r0, #12]
  403b66:	6088      	str	r0, [r1, #8]
  403b68:	f200 810e 	bhi.w	403d88 <_realloc_r+0x328>
  403b6c:	2a13      	cmp	r2, #19
  403b6e:	f240 8109 	bls.w	403d84 <_realloc_r+0x324>
  403b72:	6831      	ldr	r1, [r6, #0]
  403b74:	f8ca 1008 	str.w	r1, [sl, #8]
  403b78:	6871      	ldr	r1, [r6, #4]
  403b7a:	f8ca 100c 	str.w	r1, [sl, #12]
  403b7e:	2a1b      	cmp	r2, #27
  403b80:	f200 8121 	bhi.w	403dc6 <_realloc_r+0x366>
  403b84:	3608      	adds	r6, #8
  403b86:	f10a 0210 	add.w	r2, sl, #16
  403b8a:	6831      	ldr	r1, [r6, #0]
  403b8c:	6011      	str	r1, [r2, #0]
  403b8e:	6871      	ldr	r1, [r6, #4]
  403b90:	6051      	str	r1, [r2, #4]
  403b92:	68b1      	ldr	r1, [r6, #8]
  403b94:	6091      	str	r1, [r2, #8]
  403b96:	461c      	mov	r4, r3
  403b98:	f8da 3004 	ldr.w	r3, [sl, #4]
  403b9c:	463e      	mov	r6, r7
  403b9e:	46d0      	mov	r8, sl
  403ba0:	1b62      	subs	r2, r4, r5
  403ba2:	2a0f      	cmp	r2, #15
  403ba4:	f003 0301 	and.w	r3, r3, #1
  403ba8:	d80e      	bhi.n	403bc8 <_realloc_r+0x168>
  403baa:	4323      	orrs	r3, r4
  403bac:	4444      	add	r4, r8
  403bae:	f8c8 3004 	str.w	r3, [r8, #4]
  403bb2:	6863      	ldr	r3, [r4, #4]
  403bb4:	f043 0301 	orr.w	r3, r3, #1
  403bb8:	6063      	str	r3, [r4, #4]
  403bba:	4648      	mov	r0, r9
  403bbc:	f7ff ff4e 	bl	403a5c <__malloc_unlock>
  403bc0:	4630      	mov	r0, r6
  403bc2:	b003      	add	sp, #12
  403bc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403bc8:	eb08 0105 	add.w	r1, r8, r5
  403bcc:	431d      	orrs	r5, r3
  403bce:	f042 0301 	orr.w	r3, r2, #1
  403bd2:	440a      	add	r2, r1
  403bd4:	f8c8 5004 	str.w	r5, [r8, #4]
  403bd8:	604b      	str	r3, [r1, #4]
  403bda:	6853      	ldr	r3, [r2, #4]
  403bdc:	f043 0301 	orr.w	r3, r3, #1
  403be0:	3108      	adds	r1, #8
  403be2:	6053      	str	r3, [r2, #4]
  403be4:	4648      	mov	r0, r9
  403be6:	f7ff f84d 	bl	402c84 <_free_r>
  403bea:	e7e6      	b.n	403bba <_realloc_r+0x15a>
  403bec:	4639      	mov	r1, r7
  403bee:	4648      	mov	r0, r9
  403bf0:	f7ff fb58 	bl	4032a4 <_malloc_r>
  403bf4:	4607      	mov	r7, r0
  403bf6:	b1d8      	cbz	r0, 403c30 <_realloc_r+0x1d0>
  403bf8:	f856 3c04 	ldr.w	r3, [r6, #-4]
  403bfc:	f023 0201 	bic.w	r2, r3, #1
  403c00:	4442      	add	r2, r8
  403c02:	f1a0 0108 	sub.w	r1, r0, #8
  403c06:	4291      	cmp	r1, r2
  403c08:	f000 80ac 	beq.w	403d64 <_realloc_r+0x304>
  403c0c:	1f22      	subs	r2, r4, #4
  403c0e:	2a24      	cmp	r2, #36	; 0x24
  403c10:	f200 8099 	bhi.w	403d46 <_realloc_r+0x2e6>
  403c14:	2a13      	cmp	r2, #19
  403c16:	d86a      	bhi.n	403cee <_realloc_r+0x28e>
  403c18:	4603      	mov	r3, r0
  403c1a:	4632      	mov	r2, r6
  403c1c:	6811      	ldr	r1, [r2, #0]
  403c1e:	6019      	str	r1, [r3, #0]
  403c20:	6851      	ldr	r1, [r2, #4]
  403c22:	6059      	str	r1, [r3, #4]
  403c24:	6892      	ldr	r2, [r2, #8]
  403c26:	609a      	str	r2, [r3, #8]
  403c28:	4631      	mov	r1, r6
  403c2a:	4648      	mov	r0, r9
  403c2c:	f7ff f82a 	bl	402c84 <_free_r>
  403c30:	4648      	mov	r0, r9
  403c32:	f7ff ff13 	bl	403a5c <__malloc_unlock>
  403c36:	4638      	mov	r0, r7
  403c38:	b003      	add	sp, #12
  403c3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403c3e:	4611      	mov	r1, r2
  403c40:	b003      	add	sp, #12
  403c42:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403c46:	f7ff bb2d 	b.w	4032a4 <_malloc_r>
  403c4a:	68ca      	ldr	r2, [r1, #12]
  403c4c:	6889      	ldr	r1, [r1, #8]
  403c4e:	4604      	mov	r4, r0
  403c50:	60ca      	str	r2, [r1, #12]
  403c52:	6091      	str	r1, [r2, #8]
  403c54:	e7a4      	b.n	403ba0 <_realloc_r+0x140>
  403c56:	6841      	ldr	r1, [r0, #4]
  403c58:	f021 0103 	bic.w	r1, r1, #3
  403c5c:	4421      	add	r1, r4
  403c5e:	f105 0010 	add.w	r0, r5, #16
  403c62:	4281      	cmp	r1, r0
  403c64:	da5b      	bge.n	403d1e <_realloc_r+0x2be>
  403c66:	07db      	lsls	r3, r3, #31
  403c68:	d4c0      	bmi.n	403bec <_realloc_r+0x18c>
  403c6a:	f856 3c08 	ldr.w	r3, [r6, #-8]
  403c6e:	ebc3 0a08 	rsb	sl, r3, r8
  403c72:	f8da 3004 	ldr.w	r3, [sl, #4]
  403c76:	f023 0303 	bic.w	r3, r3, #3
  403c7a:	eb01 0c03 	add.w	ip, r1, r3
  403c7e:	4560      	cmp	r0, ip
  403c80:	f73f af66 	bgt.w	403b50 <_realloc_r+0xf0>
  403c84:	4657      	mov	r7, sl
  403c86:	f8da 300c 	ldr.w	r3, [sl, #12]
  403c8a:	f857 1f08 	ldr.w	r1, [r7, #8]!
  403c8e:	1f22      	subs	r2, r4, #4
  403c90:	2a24      	cmp	r2, #36	; 0x24
  403c92:	60cb      	str	r3, [r1, #12]
  403c94:	6099      	str	r1, [r3, #8]
  403c96:	f200 80b8 	bhi.w	403e0a <_realloc_r+0x3aa>
  403c9a:	2a13      	cmp	r2, #19
  403c9c:	f240 80a9 	bls.w	403df2 <_realloc_r+0x392>
  403ca0:	6833      	ldr	r3, [r6, #0]
  403ca2:	f8ca 3008 	str.w	r3, [sl, #8]
  403ca6:	6873      	ldr	r3, [r6, #4]
  403ca8:	f8ca 300c 	str.w	r3, [sl, #12]
  403cac:	2a1b      	cmp	r2, #27
  403cae:	f200 80b5 	bhi.w	403e1c <_realloc_r+0x3bc>
  403cb2:	3608      	adds	r6, #8
  403cb4:	f10a 0310 	add.w	r3, sl, #16
  403cb8:	6832      	ldr	r2, [r6, #0]
  403cba:	601a      	str	r2, [r3, #0]
  403cbc:	6872      	ldr	r2, [r6, #4]
  403cbe:	605a      	str	r2, [r3, #4]
  403cc0:	68b2      	ldr	r2, [r6, #8]
  403cc2:	609a      	str	r2, [r3, #8]
  403cc4:	eb0a 0205 	add.w	r2, sl, r5
  403cc8:	ebc5 030c 	rsb	r3, r5, ip
  403ccc:	f043 0301 	orr.w	r3, r3, #1
  403cd0:	f8cb 2008 	str.w	r2, [fp, #8]
  403cd4:	6053      	str	r3, [r2, #4]
  403cd6:	f8da 3004 	ldr.w	r3, [sl, #4]
  403cda:	f003 0301 	and.w	r3, r3, #1
  403cde:	431d      	orrs	r5, r3
  403ce0:	4648      	mov	r0, r9
  403ce2:	f8ca 5004 	str.w	r5, [sl, #4]
  403ce6:	f7ff feb9 	bl	403a5c <__malloc_unlock>
  403cea:	4638      	mov	r0, r7
  403cec:	e769      	b.n	403bc2 <_realloc_r+0x162>
  403cee:	6833      	ldr	r3, [r6, #0]
  403cf0:	6003      	str	r3, [r0, #0]
  403cf2:	6873      	ldr	r3, [r6, #4]
  403cf4:	6043      	str	r3, [r0, #4]
  403cf6:	2a1b      	cmp	r2, #27
  403cf8:	d829      	bhi.n	403d4e <_realloc_r+0x2ee>
  403cfa:	f100 0308 	add.w	r3, r0, #8
  403cfe:	f106 0208 	add.w	r2, r6, #8
  403d02:	e78b      	b.n	403c1c <_realloc_r+0x1bc>
  403d04:	463b      	mov	r3, r7
  403d06:	6832      	ldr	r2, [r6, #0]
  403d08:	601a      	str	r2, [r3, #0]
  403d0a:	6872      	ldr	r2, [r6, #4]
  403d0c:	605a      	str	r2, [r3, #4]
  403d0e:	68b2      	ldr	r2, [r6, #8]
  403d10:	609a      	str	r2, [r3, #8]
  403d12:	463e      	mov	r6, r7
  403d14:	4674      	mov	r4, lr
  403d16:	f8da 3004 	ldr.w	r3, [sl, #4]
  403d1a:	46d0      	mov	r8, sl
  403d1c:	e740      	b.n	403ba0 <_realloc_r+0x140>
  403d1e:	eb08 0205 	add.w	r2, r8, r5
  403d22:	1b4b      	subs	r3, r1, r5
  403d24:	f043 0301 	orr.w	r3, r3, #1
  403d28:	f8cb 2008 	str.w	r2, [fp, #8]
  403d2c:	6053      	str	r3, [r2, #4]
  403d2e:	f856 3c04 	ldr.w	r3, [r6, #-4]
  403d32:	f003 0301 	and.w	r3, r3, #1
  403d36:	431d      	orrs	r5, r3
  403d38:	4648      	mov	r0, r9
  403d3a:	f846 5c04 	str.w	r5, [r6, #-4]
  403d3e:	f7ff fe8d 	bl	403a5c <__malloc_unlock>
  403d42:	4630      	mov	r0, r6
  403d44:	e73d      	b.n	403bc2 <_realloc_r+0x162>
  403d46:	4631      	mov	r1, r6
  403d48:	f7ff fe22 	bl	403990 <memmove>
  403d4c:	e76c      	b.n	403c28 <_realloc_r+0x1c8>
  403d4e:	68b3      	ldr	r3, [r6, #8]
  403d50:	6083      	str	r3, [r0, #8]
  403d52:	68f3      	ldr	r3, [r6, #12]
  403d54:	60c3      	str	r3, [r0, #12]
  403d56:	2a24      	cmp	r2, #36	; 0x24
  403d58:	d02c      	beq.n	403db4 <_realloc_r+0x354>
  403d5a:	f100 0310 	add.w	r3, r0, #16
  403d5e:	f106 0210 	add.w	r2, r6, #16
  403d62:	e75b      	b.n	403c1c <_realloc_r+0x1bc>
  403d64:	f850 2c04 	ldr.w	r2, [r0, #-4]
  403d68:	f022 0203 	bic.w	r2, r2, #3
  403d6c:	4414      	add	r4, r2
  403d6e:	e717      	b.n	403ba0 <_realloc_r+0x140>
  403d70:	4631      	mov	r1, r6
  403d72:	4638      	mov	r0, r7
  403d74:	4674      	mov	r4, lr
  403d76:	463e      	mov	r6, r7
  403d78:	f7ff fe0a 	bl	403990 <memmove>
  403d7c:	46d0      	mov	r8, sl
  403d7e:	f8da 3004 	ldr.w	r3, [sl, #4]
  403d82:	e70d      	b.n	403ba0 <_realloc_r+0x140>
  403d84:	463a      	mov	r2, r7
  403d86:	e700      	b.n	403b8a <_realloc_r+0x12a>
  403d88:	4631      	mov	r1, r6
  403d8a:	4638      	mov	r0, r7
  403d8c:	461c      	mov	r4, r3
  403d8e:	463e      	mov	r6, r7
  403d90:	f7ff fdfe 	bl	403990 <memmove>
  403d94:	46d0      	mov	r8, sl
  403d96:	f8da 3004 	ldr.w	r3, [sl, #4]
  403d9a:	e701      	b.n	403ba0 <_realloc_r+0x140>
  403d9c:	68b3      	ldr	r3, [r6, #8]
  403d9e:	f8ca 3010 	str.w	r3, [sl, #16]
  403da2:	68f3      	ldr	r3, [r6, #12]
  403da4:	f8ca 3014 	str.w	r3, [sl, #20]
  403da8:	2a24      	cmp	r2, #36	; 0x24
  403daa:	d018      	beq.n	403dde <_realloc_r+0x37e>
  403dac:	3610      	adds	r6, #16
  403dae:	f10a 0318 	add.w	r3, sl, #24
  403db2:	e7a8      	b.n	403d06 <_realloc_r+0x2a6>
  403db4:	6933      	ldr	r3, [r6, #16]
  403db6:	6103      	str	r3, [r0, #16]
  403db8:	6973      	ldr	r3, [r6, #20]
  403dba:	6143      	str	r3, [r0, #20]
  403dbc:	f106 0218 	add.w	r2, r6, #24
  403dc0:	f100 0318 	add.w	r3, r0, #24
  403dc4:	e72a      	b.n	403c1c <_realloc_r+0x1bc>
  403dc6:	68b1      	ldr	r1, [r6, #8]
  403dc8:	f8ca 1010 	str.w	r1, [sl, #16]
  403dcc:	68f1      	ldr	r1, [r6, #12]
  403dce:	f8ca 1014 	str.w	r1, [sl, #20]
  403dd2:	2a24      	cmp	r2, #36	; 0x24
  403dd4:	d00f      	beq.n	403df6 <_realloc_r+0x396>
  403dd6:	3610      	adds	r6, #16
  403dd8:	f10a 0218 	add.w	r2, sl, #24
  403ddc:	e6d5      	b.n	403b8a <_realloc_r+0x12a>
  403dde:	6933      	ldr	r3, [r6, #16]
  403de0:	f8ca 3018 	str.w	r3, [sl, #24]
  403de4:	6973      	ldr	r3, [r6, #20]
  403de6:	f8ca 301c 	str.w	r3, [sl, #28]
  403dea:	3618      	adds	r6, #24
  403dec:	f10a 0320 	add.w	r3, sl, #32
  403df0:	e789      	b.n	403d06 <_realloc_r+0x2a6>
  403df2:	463b      	mov	r3, r7
  403df4:	e760      	b.n	403cb8 <_realloc_r+0x258>
  403df6:	6932      	ldr	r2, [r6, #16]
  403df8:	f8ca 2018 	str.w	r2, [sl, #24]
  403dfc:	6972      	ldr	r2, [r6, #20]
  403dfe:	f8ca 201c 	str.w	r2, [sl, #28]
  403e02:	3618      	adds	r6, #24
  403e04:	f10a 0220 	add.w	r2, sl, #32
  403e08:	e6bf      	b.n	403b8a <_realloc_r+0x12a>
  403e0a:	4631      	mov	r1, r6
  403e0c:	4638      	mov	r0, r7
  403e0e:	f8cd c004 	str.w	ip, [sp, #4]
  403e12:	f7ff fdbd 	bl	403990 <memmove>
  403e16:	f8dd c004 	ldr.w	ip, [sp, #4]
  403e1a:	e753      	b.n	403cc4 <_realloc_r+0x264>
  403e1c:	68b3      	ldr	r3, [r6, #8]
  403e1e:	f8ca 3010 	str.w	r3, [sl, #16]
  403e22:	68f3      	ldr	r3, [r6, #12]
  403e24:	f8ca 3014 	str.w	r3, [sl, #20]
  403e28:	2a24      	cmp	r2, #36	; 0x24
  403e2a:	d003      	beq.n	403e34 <_realloc_r+0x3d4>
  403e2c:	3610      	adds	r6, #16
  403e2e:	f10a 0318 	add.w	r3, sl, #24
  403e32:	e741      	b.n	403cb8 <_realloc_r+0x258>
  403e34:	6933      	ldr	r3, [r6, #16]
  403e36:	f8ca 3018 	str.w	r3, [sl, #24]
  403e3a:	6973      	ldr	r3, [r6, #20]
  403e3c:	f8ca 301c 	str.w	r3, [sl, #28]
  403e40:	3618      	adds	r6, #24
  403e42:	f10a 0320 	add.w	r3, sl, #32
  403e46:	e737      	b.n	403cb8 <_realloc_r+0x258>
  403e48:	20000458 	.word	0x20000458

00403e4c <_sbrk_r>:
  403e4c:	b538      	push	{r3, r4, r5, lr}
  403e4e:	4c07      	ldr	r4, [pc, #28]	; (403e6c <_sbrk_r+0x20>)
  403e50:	2300      	movs	r3, #0
  403e52:	4605      	mov	r5, r0
  403e54:	4608      	mov	r0, r1
  403e56:	6023      	str	r3, [r4, #0]
  403e58:	f7fc fe20 	bl	400a9c <_sbrk>
  403e5c:	1c43      	adds	r3, r0, #1
  403e5e:	d000      	beq.n	403e62 <_sbrk_r+0x16>
  403e60:	bd38      	pop	{r3, r4, r5, pc}
  403e62:	6823      	ldr	r3, [r4, #0]
  403e64:	2b00      	cmp	r3, #0
  403e66:	d0fb      	beq.n	403e60 <_sbrk_r+0x14>
  403e68:	602b      	str	r3, [r5, #0]
  403e6a:	bd38      	pop	{r3, r4, r5, pc}
  403e6c:	20000944 	.word	0x20000944

00403e70 <__sread>:
  403e70:	b510      	push	{r4, lr}
  403e72:	460c      	mov	r4, r1
  403e74:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403e78:	f000 f9bc 	bl	4041f4 <_read_r>
  403e7c:	2800      	cmp	r0, #0
  403e7e:	db03      	blt.n	403e88 <__sread+0x18>
  403e80:	6d23      	ldr	r3, [r4, #80]	; 0x50
  403e82:	4403      	add	r3, r0
  403e84:	6523      	str	r3, [r4, #80]	; 0x50
  403e86:	bd10      	pop	{r4, pc}
  403e88:	89a3      	ldrh	r3, [r4, #12]
  403e8a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  403e8e:	81a3      	strh	r3, [r4, #12]
  403e90:	bd10      	pop	{r4, pc}
  403e92:	bf00      	nop

00403e94 <__swrite>:
  403e94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403e98:	4616      	mov	r6, r2
  403e9a:	898a      	ldrh	r2, [r1, #12]
  403e9c:	461d      	mov	r5, r3
  403e9e:	05d3      	lsls	r3, r2, #23
  403ea0:	460c      	mov	r4, r1
  403ea2:	4607      	mov	r7, r0
  403ea4:	d506      	bpl.n	403eb4 <__swrite+0x20>
  403ea6:	2200      	movs	r2, #0
  403ea8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403eac:	2302      	movs	r3, #2
  403eae:	f000 f98d 	bl	4041cc <_lseek_r>
  403eb2:	89a2      	ldrh	r2, [r4, #12]
  403eb4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  403eb8:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  403ebc:	81a2      	strh	r2, [r4, #12]
  403ebe:	4638      	mov	r0, r7
  403ec0:	4632      	mov	r2, r6
  403ec2:	462b      	mov	r3, r5
  403ec4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  403ec8:	f000 b8a0 	b.w	40400c <_write_r>

00403ecc <__sseek>:
  403ecc:	b510      	push	{r4, lr}
  403ece:	460c      	mov	r4, r1
  403ed0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403ed4:	f000 f97a 	bl	4041cc <_lseek_r>
  403ed8:	89a3      	ldrh	r3, [r4, #12]
  403eda:	1c42      	adds	r2, r0, #1
  403edc:	bf0e      	itee	eq
  403ede:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  403ee2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  403ee6:	6520      	strne	r0, [r4, #80]	; 0x50
  403ee8:	81a3      	strh	r3, [r4, #12]
  403eea:	bd10      	pop	{r4, pc}

00403eec <__sclose>:
  403eec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403ef0:	f000 b8f2 	b.w	4040d8 <_close_r>

00403ef4 <__swbuf_r>:
  403ef4:	b570      	push	{r4, r5, r6, lr}
  403ef6:	460d      	mov	r5, r1
  403ef8:	4614      	mov	r4, r2
  403efa:	4606      	mov	r6, r0
  403efc:	b110      	cbz	r0, 403f04 <__swbuf_r+0x10>
  403efe:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403f00:	2b00      	cmp	r3, #0
  403f02:	d048      	beq.n	403f96 <__swbuf_r+0xa2>
  403f04:	89a2      	ldrh	r2, [r4, #12]
  403f06:	69a3      	ldr	r3, [r4, #24]
  403f08:	60a3      	str	r3, [r4, #8]
  403f0a:	b291      	uxth	r1, r2
  403f0c:	0708      	lsls	r0, r1, #28
  403f0e:	d538      	bpl.n	403f82 <__swbuf_r+0x8e>
  403f10:	6923      	ldr	r3, [r4, #16]
  403f12:	2b00      	cmp	r3, #0
  403f14:	d035      	beq.n	403f82 <__swbuf_r+0x8e>
  403f16:	0489      	lsls	r1, r1, #18
  403f18:	b2ed      	uxtb	r5, r5
  403f1a:	d515      	bpl.n	403f48 <__swbuf_r+0x54>
  403f1c:	6822      	ldr	r2, [r4, #0]
  403f1e:	6961      	ldr	r1, [r4, #20]
  403f20:	1ad3      	subs	r3, r2, r3
  403f22:	428b      	cmp	r3, r1
  403f24:	da1c      	bge.n	403f60 <__swbuf_r+0x6c>
  403f26:	3301      	adds	r3, #1
  403f28:	68a1      	ldr	r1, [r4, #8]
  403f2a:	1c50      	adds	r0, r2, #1
  403f2c:	3901      	subs	r1, #1
  403f2e:	60a1      	str	r1, [r4, #8]
  403f30:	6020      	str	r0, [r4, #0]
  403f32:	7015      	strb	r5, [r2, #0]
  403f34:	6962      	ldr	r2, [r4, #20]
  403f36:	429a      	cmp	r2, r3
  403f38:	d01a      	beq.n	403f70 <__swbuf_r+0x7c>
  403f3a:	89a3      	ldrh	r3, [r4, #12]
  403f3c:	07db      	lsls	r3, r3, #31
  403f3e:	d501      	bpl.n	403f44 <__swbuf_r+0x50>
  403f40:	2d0a      	cmp	r5, #10
  403f42:	d015      	beq.n	403f70 <__swbuf_r+0x7c>
  403f44:	4628      	mov	r0, r5
  403f46:	bd70      	pop	{r4, r5, r6, pc}
  403f48:	6e61      	ldr	r1, [r4, #100]	; 0x64
  403f4a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  403f4e:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  403f52:	81a2      	strh	r2, [r4, #12]
  403f54:	6822      	ldr	r2, [r4, #0]
  403f56:	6661      	str	r1, [r4, #100]	; 0x64
  403f58:	6961      	ldr	r1, [r4, #20]
  403f5a:	1ad3      	subs	r3, r2, r3
  403f5c:	428b      	cmp	r3, r1
  403f5e:	dbe2      	blt.n	403f26 <__swbuf_r+0x32>
  403f60:	4630      	mov	r0, r6
  403f62:	4621      	mov	r1, r4
  403f64:	f7fe fd22 	bl	4029ac <_fflush_r>
  403f68:	b940      	cbnz	r0, 403f7c <__swbuf_r+0x88>
  403f6a:	6822      	ldr	r2, [r4, #0]
  403f6c:	2301      	movs	r3, #1
  403f6e:	e7db      	b.n	403f28 <__swbuf_r+0x34>
  403f70:	4630      	mov	r0, r6
  403f72:	4621      	mov	r1, r4
  403f74:	f7fe fd1a 	bl	4029ac <_fflush_r>
  403f78:	2800      	cmp	r0, #0
  403f7a:	d0e3      	beq.n	403f44 <__swbuf_r+0x50>
  403f7c:	f04f 30ff 	mov.w	r0, #4294967295
  403f80:	bd70      	pop	{r4, r5, r6, pc}
  403f82:	4630      	mov	r0, r6
  403f84:	4621      	mov	r1, r4
  403f86:	f7fe fbf5 	bl	402774 <__swsetup_r>
  403f8a:	2800      	cmp	r0, #0
  403f8c:	d1f6      	bne.n	403f7c <__swbuf_r+0x88>
  403f8e:	89a2      	ldrh	r2, [r4, #12]
  403f90:	6923      	ldr	r3, [r4, #16]
  403f92:	b291      	uxth	r1, r2
  403f94:	e7bf      	b.n	403f16 <__swbuf_r+0x22>
  403f96:	f7fe fd9d 	bl	402ad4 <__sinit>
  403f9a:	e7b3      	b.n	403f04 <__swbuf_r+0x10>

00403f9c <_wcrtomb_r>:
  403f9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403fa0:	4605      	mov	r5, r0
  403fa2:	b086      	sub	sp, #24
  403fa4:	461e      	mov	r6, r3
  403fa6:	460c      	mov	r4, r1
  403fa8:	b1a1      	cbz	r1, 403fd4 <_wcrtomb_r+0x38>
  403faa:	4b10      	ldr	r3, [pc, #64]	; (403fec <_wcrtomb_r+0x50>)
  403fac:	4617      	mov	r7, r2
  403fae:	f8d3 8000 	ldr.w	r8, [r3]
  403fb2:	f7ff f8f5 	bl	4031a0 <__locale_charset>
  403fb6:	9600      	str	r6, [sp, #0]
  403fb8:	4603      	mov	r3, r0
  403fba:	4621      	mov	r1, r4
  403fbc:	463a      	mov	r2, r7
  403fbe:	4628      	mov	r0, r5
  403fc0:	47c0      	blx	r8
  403fc2:	1c43      	adds	r3, r0, #1
  403fc4:	d103      	bne.n	403fce <_wcrtomb_r+0x32>
  403fc6:	2200      	movs	r2, #0
  403fc8:	238a      	movs	r3, #138	; 0x8a
  403fca:	6032      	str	r2, [r6, #0]
  403fcc:	602b      	str	r3, [r5, #0]
  403fce:	b006      	add	sp, #24
  403fd0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403fd4:	4b05      	ldr	r3, [pc, #20]	; (403fec <_wcrtomb_r+0x50>)
  403fd6:	681f      	ldr	r7, [r3, #0]
  403fd8:	f7ff f8e2 	bl	4031a0 <__locale_charset>
  403fdc:	9600      	str	r6, [sp, #0]
  403fde:	4603      	mov	r3, r0
  403fe0:	4622      	mov	r2, r4
  403fe2:	4628      	mov	r0, r5
  403fe4:	a903      	add	r1, sp, #12
  403fe6:	47b8      	blx	r7
  403fe8:	e7eb      	b.n	403fc2 <_wcrtomb_r+0x26>
  403fea:	bf00      	nop
  403fec:	20000868 	.word	0x20000868

00403ff0 <__ascii_wctomb>:
  403ff0:	b121      	cbz	r1, 403ffc <__ascii_wctomb+0xc>
  403ff2:	2aff      	cmp	r2, #255	; 0xff
  403ff4:	d804      	bhi.n	404000 <__ascii_wctomb+0x10>
  403ff6:	700a      	strb	r2, [r1, #0]
  403ff8:	2001      	movs	r0, #1
  403ffa:	4770      	bx	lr
  403ffc:	4608      	mov	r0, r1
  403ffe:	4770      	bx	lr
  404000:	238a      	movs	r3, #138	; 0x8a
  404002:	6003      	str	r3, [r0, #0]
  404004:	f04f 30ff 	mov.w	r0, #4294967295
  404008:	4770      	bx	lr
  40400a:	bf00      	nop

0040400c <_write_r>:
  40400c:	b570      	push	{r4, r5, r6, lr}
  40400e:	4c08      	ldr	r4, [pc, #32]	; (404030 <_write_r+0x24>)
  404010:	4606      	mov	r6, r0
  404012:	2500      	movs	r5, #0
  404014:	4608      	mov	r0, r1
  404016:	4611      	mov	r1, r2
  404018:	461a      	mov	r2, r3
  40401a:	6025      	str	r5, [r4, #0]
  40401c:	f7fc f8d4 	bl	4001c8 <_write>
  404020:	1c43      	adds	r3, r0, #1
  404022:	d000      	beq.n	404026 <_write_r+0x1a>
  404024:	bd70      	pop	{r4, r5, r6, pc}
  404026:	6823      	ldr	r3, [r4, #0]
  404028:	2b00      	cmp	r3, #0
  40402a:	d0fb      	beq.n	404024 <_write_r+0x18>
  40402c:	6033      	str	r3, [r6, #0]
  40402e:	bd70      	pop	{r4, r5, r6, pc}
  404030:	20000944 	.word	0x20000944

00404034 <__register_exitproc>:
  404034:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  404038:	4c25      	ldr	r4, [pc, #148]	; (4040d0 <__register_exitproc+0x9c>)
  40403a:	6825      	ldr	r5, [r4, #0]
  40403c:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
  404040:	4606      	mov	r6, r0
  404042:	4688      	mov	r8, r1
  404044:	4692      	mov	sl, r2
  404046:	4699      	mov	r9, r3
  404048:	b3cc      	cbz	r4, 4040be <__register_exitproc+0x8a>
  40404a:	6860      	ldr	r0, [r4, #4]
  40404c:	281f      	cmp	r0, #31
  40404e:	dc18      	bgt.n	404082 <__register_exitproc+0x4e>
  404050:	1c43      	adds	r3, r0, #1
  404052:	b17e      	cbz	r6, 404074 <__register_exitproc+0x40>
  404054:	eb04 0580 	add.w	r5, r4, r0, lsl #2
  404058:	2101      	movs	r1, #1
  40405a:	f8c5 a088 	str.w	sl, [r5, #136]	; 0x88
  40405e:	f8d4 7188 	ldr.w	r7, [r4, #392]	; 0x188
  404062:	fa01 f200 	lsl.w	r2, r1, r0
  404066:	4317      	orrs	r7, r2
  404068:	2e02      	cmp	r6, #2
  40406a:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  40406e:	f8c5 9108 	str.w	r9, [r5, #264]	; 0x108
  404072:	d01e      	beq.n	4040b2 <__register_exitproc+0x7e>
  404074:	3002      	adds	r0, #2
  404076:	6063      	str	r3, [r4, #4]
  404078:	f844 8020 	str.w	r8, [r4, r0, lsl #2]
  40407c:	2000      	movs	r0, #0
  40407e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404082:	4b14      	ldr	r3, [pc, #80]	; (4040d4 <__register_exitproc+0xa0>)
  404084:	b303      	cbz	r3, 4040c8 <__register_exitproc+0x94>
  404086:	f44f 70c8 	mov.w	r0, #400	; 0x190
  40408a:	f7ff f903 	bl	403294 <malloc>
  40408e:	4604      	mov	r4, r0
  404090:	b1d0      	cbz	r0, 4040c8 <__register_exitproc+0x94>
  404092:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
  404096:	2700      	movs	r7, #0
  404098:	e880 0088 	stmia.w	r0, {r3, r7}
  40409c:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  4040a0:	4638      	mov	r0, r7
  4040a2:	2301      	movs	r3, #1
  4040a4:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  4040a8:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
  4040ac:	2e00      	cmp	r6, #0
  4040ae:	d0e1      	beq.n	404074 <__register_exitproc+0x40>
  4040b0:	e7d0      	b.n	404054 <__register_exitproc+0x20>
  4040b2:	f8d4 118c 	ldr.w	r1, [r4, #396]	; 0x18c
  4040b6:	430a      	orrs	r2, r1
  4040b8:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  4040bc:	e7da      	b.n	404074 <__register_exitproc+0x40>
  4040be:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
  4040c2:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  4040c6:	e7c0      	b.n	40404a <__register_exitproc+0x16>
  4040c8:	f04f 30ff 	mov.w	r0, #4294967295
  4040cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4040d0:	00404900 	.word	0x00404900
  4040d4:	00403295 	.word	0x00403295

004040d8 <_close_r>:
  4040d8:	b538      	push	{r3, r4, r5, lr}
  4040da:	4c07      	ldr	r4, [pc, #28]	; (4040f8 <_close_r+0x20>)
  4040dc:	2300      	movs	r3, #0
  4040de:	4605      	mov	r5, r0
  4040e0:	4608      	mov	r0, r1
  4040e2:	6023      	str	r3, [r4, #0]
  4040e4:	f7fc fcf4 	bl	400ad0 <_close>
  4040e8:	1c43      	adds	r3, r0, #1
  4040ea:	d000      	beq.n	4040ee <_close_r+0x16>
  4040ec:	bd38      	pop	{r3, r4, r5, pc}
  4040ee:	6823      	ldr	r3, [r4, #0]
  4040f0:	2b00      	cmp	r3, #0
  4040f2:	d0fb      	beq.n	4040ec <_close_r+0x14>
  4040f4:	602b      	str	r3, [r5, #0]
  4040f6:	bd38      	pop	{r3, r4, r5, pc}
  4040f8:	20000944 	.word	0x20000944

004040fc <_fclose_r>:
  4040fc:	2900      	cmp	r1, #0
  4040fe:	d03d      	beq.n	40417c <_fclose_r+0x80>
  404100:	b570      	push	{r4, r5, r6, lr}
  404102:	4605      	mov	r5, r0
  404104:	460c      	mov	r4, r1
  404106:	b108      	cbz	r0, 40410c <_fclose_r+0x10>
  404108:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40410a:	b37b      	cbz	r3, 40416c <_fclose_r+0x70>
  40410c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404110:	b90b      	cbnz	r3, 404116 <_fclose_r+0x1a>
  404112:	2000      	movs	r0, #0
  404114:	bd70      	pop	{r4, r5, r6, pc}
  404116:	4628      	mov	r0, r5
  404118:	4621      	mov	r1, r4
  40411a:	f7fe fb9d 	bl	402858 <__sflush_r>
  40411e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  404120:	4606      	mov	r6, r0
  404122:	b133      	cbz	r3, 404132 <_fclose_r+0x36>
  404124:	4628      	mov	r0, r5
  404126:	69e1      	ldr	r1, [r4, #28]
  404128:	4798      	blx	r3
  40412a:	2800      	cmp	r0, #0
  40412c:	bfb8      	it	lt
  40412e:	f04f 36ff 	movlt.w	r6, #4294967295
  404132:	89a3      	ldrh	r3, [r4, #12]
  404134:	061b      	lsls	r3, r3, #24
  404136:	d41c      	bmi.n	404172 <_fclose_r+0x76>
  404138:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40413a:	b141      	cbz	r1, 40414e <_fclose_r+0x52>
  40413c:	f104 0340 	add.w	r3, r4, #64	; 0x40
  404140:	4299      	cmp	r1, r3
  404142:	d002      	beq.n	40414a <_fclose_r+0x4e>
  404144:	4628      	mov	r0, r5
  404146:	f7fe fd9d 	bl	402c84 <_free_r>
  40414a:	2300      	movs	r3, #0
  40414c:	6323      	str	r3, [r4, #48]	; 0x30
  40414e:	6c61      	ldr	r1, [r4, #68]	; 0x44
  404150:	b121      	cbz	r1, 40415c <_fclose_r+0x60>
  404152:	4628      	mov	r0, r5
  404154:	f7fe fd96 	bl	402c84 <_free_r>
  404158:	2300      	movs	r3, #0
  40415a:	6463      	str	r3, [r4, #68]	; 0x44
  40415c:	f7fe fcc0 	bl	402ae0 <__sfp_lock_acquire>
  404160:	2300      	movs	r3, #0
  404162:	81a3      	strh	r3, [r4, #12]
  404164:	f7fe fcbe 	bl	402ae4 <__sfp_lock_release>
  404168:	4630      	mov	r0, r6
  40416a:	bd70      	pop	{r4, r5, r6, pc}
  40416c:	f7fe fcb2 	bl	402ad4 <__sinit>
  404170:	e7cc      	b.n	40410c <_fclose_r+0x10>
  404172:	4628      	mov	r0, r5
  404174:	6921      	ldr	r1, [r4, #16]
  404176:	f7fe fd85 	bl	402c84 <_free_r>
  40417a:	e7dd      	b.n	404138 <_fclose_r+0x3c>
  40417c:	2000      	movs	r0, #0
  40417e:	4770      	bx	lr

00404180 <_fstat_r>:
  404180:	b538      	push	{r3, r4, r5, lr}
  404182:	4c08      	ldr	r4, [pc, #32]	; (4041a4 <_fstat_r+0x24>)
  404184:	2300      	movs	r3, #0
  404186:	4605      	mov	r5, r0
  404188:	4608      	mov	r0, r1
  40418a:	4611      	mov	r1, r2
  40418c:	6023      	str	r3, [r4, #0]
  40418e:	f7fc fca3 	bl	400ad8 <_fstat>
  404192:	1c43      	adds	r3, r0, #1
  404194:	d000      	beq.n	404198 <_fstat_r+0x18>
  404196:	bd38      	pop	{r3, r4, r5, pc}
  404198:	6823      	ldr	r3, [r4, #0]
  40419a:	2b00      	cmp	r3, #0
  40419c:	d0fb      	beq.n	404196 <_fstat_r+0x16>
  40419e:	602b      	str	r3, [r5, #0]
  4041a0:	bd38      	pop	{r3, r4, r5, pc}
  4041a2:	bf00      	nop
  4041a4:	20000944 	.word	0x20000944

004041a8 <_isatty_r>:
  4041a8:	b538      	push	{r3, r4, r5, lr}
  4041aa:	4c07      	ldr	r4, [pc, #28]	; (4041c8 <_isatty_r+0x20>)
  4041ac:	2300      	movs	r3, #0
  4041ae:	4605      	mov	r5, r0
  4041b0:	4608      	mov	r0, r1
  4041b2:	6023      	str	r3, [r4, #0]
  4041b4:	f7fc fc96 	bl	400ae4 <_isatty>
  4041b8:	1c43      	adds	r3, r0, #1
  4041ba:	d000      	beq.n	4041be <_isatty_r+0x16>
  4041bc:	bd38      	pop	{r3, r4, r5, pc}
  4041be:	6823      	ldr	r3, [r4, #0]
  4041c0:	2b00      	cmp	r3, #0
  4041c2:	d0fb      	beq.n	4041bc <_isatty_r+0x14>
  4041c4:	602b      	str	r3, [r5, #0]
  4041c6:	bd38      	pop	{r3, r4, r5, pc}
  4041c8:	20000944 	.word	0x20000944

004041cc <_lseek_r>:
  4041cc:	b570      	push	{r4, r5, r6, lr}
  4041ce:	4c08      	ldr	r4, [pc, #32]	; (4041f0 <_lseek_r+0x24>)
  4041d0:	4606      	mov	r6, r0
  4041d2:	2500      	movs	r5, #0
  4041d4:	4608      	mov	r0, r1
  4041d6:	4611      	mov	r1, r2
  4041d8:	461a      	mov	r2, r3
  4041da:	6025      	str	r5, [r4, #0]
  4041dc:	f7fc fc84 	bl	400ae8 <_lseek>
  4041e0:	1c43      	adds	r3, r0, #1
  4041e2:	d000      	beq.n	4041e6 <_lseek_r+0x1a>
  4041e4:	bd70      	pop	{r4, r5, r6, pc}
  4041e6:	6823      	ldr	r3, [r4, #0]
  4041e8:	2b00      	cmp	r3, #0
  4041ea:	d0fb      	beq.n	4041e4 <_lseek_r+0x18>
  4041ec:	6033      	str	r3, [r6, #0]
  4041ee:	bd70      	pop	{r4, r5, r6, pc}
  4041f0:	20000944 	.word	0x20000944

004041f4 <_read_r>:
  4041f4:	b570      	push	{r4, r5, r6, lr}
  4041f6:	4c08      	ldr	r4, [pc, #32]	; (404218 <_read_r+0x24>)
  4041f8:	4606      	mov	r6, r0
  4041fa:	2500      	movs	r5, #0
  4041fc:	4608      	mov	r0, r1
  4041fe:	4611      	mov	r1, r2
  404200:	461a      	mov	r2, r3
  404202:	6025      	str	r5, [r4, #0]
  404204:	f7fb ffc2 	bl	40018c <_read>
  404208:	1c43      	adds	r3, r0, #1
  40420a:	d000      	beq.n	40420e <_read_r+0x1a>
  40420c:	bd70      	pop	{r4, r5, r6, pc}
  40420e:	6823      	ldr	r3, [r4, #0]
  404210:	2b00      	cmp	r3, #0
  404212:	d0fb      	beq.n	40420c <_read_r+0x18>
  404214:	6033      	str	r3, [r6, #0]
  404216:	bd70      	pop	{r4, r5, r6, pc}
  404218:	20000944 	.word	0x20000944

0040421c <__aeabi_uldivmod>:
  40421c:	b953      	cbnz	r3, 404234 <__aeabi_uldivmod+0x18>
  40421e:	b94a      	cbnz	r2, 404234 <__aeabi_uldivmod+0x18>
  404220:	2900      	cmp	r1, #0
  404222:	bf08      	it	eq
  404224:	2800      	cmpeq	r0, #0
  404226:	bf1c      	itt	ne
  404228:	f04f 31ff 	movne.w	r1, #4294967295
  40422c:	f04f 30ff 	movne.w	r0, #4294967295
  404230:	f000 b83c 	b.w	4042ac <__aeabi_idiv0>
  404234:	b082      	sub	sp, #8
  404236:	46ec      	mov	ip, sp
  404238:	e92d 5000 	stmdb	sp!, {ip, lr}
  40423c:	f000 f81e 	bl	40427c <__gnu_uldivmod_helper>
  404240:	f8dd e004 	ldr.w	lr, [sp, #4]
  404244:	b002      	add	sp, #8
  404246:	bc0c      	pop	{r2, r3}
  404248:	4770      	bx	lr
  40424a:	bf00      	nop

0040424c <__gnu_ldivmod_helper>:
  40424c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404250:	9c06      	ldr	r4, [sp, #24]
  404252:	4615      	mov	r5, r2
  404254:	4606      	mov	r6, r0
  404256:	460f      	mov	r7, r1
  404258:	4698      	mov	r8, r3
  40425a:	f000 f829 	bl	4042b0 <__divdi3>
  40425e:	fb05 f301 	mul.w	r3, r5, r1
  404262:	fb00 3808 	mla	r8, r0, r8, r3
  404266:	fba5 2300 	umull	r2, r3, r5, r0
  40426a:	1ab2      	subs	r2, r6, r2
  40426c:	4443      	add	r3, r8
  40426e:	eb67 0303 	sbc.w	r3, r7, r3
  404272:	e9c4 2300 	strd	r2, r3, [r4]
  404276:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40427a:	bf00      	nop

0040427c <__gnu_uldivmod_helper>:
  40427c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404280:	9c06      	ldr	r4, [sp, #24]
  404282:	4690      	mov	r8, r2
  404284:	4606      	mov	r6, r0
  404286:	460f      	mov	r7, r1
  404288:	461d      	mov	r5, r3
  40428a:	f000 f95f 	bl	40454c <__udivdi3>
  40428e:	fb00 f505 	mul.w	r5, r0, r5
  404292:	fba0 2308 	umull	r2, r3, r0, r8
  404296:	fb08 5501 	mla	r5, r8, r1, r5
  40429a:	1ab2      	subs	r2, r6, r2
  40429c:	442b      	add	r3, r5
  40429e:	eb67 0303 	sbc.w	r3, r7, r3
  4042a2:	e9c4 2300 	strd	r2, r3, [r4]
  4042a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4042aa:	bf00      	nop

004042ac <__aeabi_idiv0>:
  4042ac:	4770      	bx	lr
  4042ae:	bf00      	nop

004042b0 <__divdi3>:
  4042b0:	2900      	cmp	r1, #0
  4042b2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4042b6:	f2c0 80a6 	blt.w	404406 <__divdi3+0x156>
  4042ba:	2600      	movs	r6, #0
  4042bc:	2b00      	cmp	r3, #0
  4042be:	f2c0 809c 	blt.w	4043fa <__divdi3+0x14a>
  4042c2:	4688      	mov	r8, r1
  4042c4:	4694      	mov	ip, r2
  4042c6:	469e      	mov	lr, r3
  4042c8:	4615      	mov	r5, r2
  4042ca:	4604      	mov	r4, r0
  4042cc:	460f      	mov	r7, r1
  4042ce:	2b00      	cmp	r3, #0
  4042d0:	d13d      	bne.n	40434e <__divdi3+0x9e>
  4042d2:	428a      	cmp	r2, r1
  4042d4:	d959      	bls.n	40438a <__divdi3+0xda>
  4042d6:	fab2 f382 	clz	r3, r2
  4042da:	b13b      	cbz	r3, 4042ec <__divdi3+0x3c>
  4042dc:	f1c3 0220 	rsb	r2, r3, #32
  4042e0:	409f      	lsls	r7, r3
  4042e2:	fa20 f202 	lsr.w	r2, r0, r2
  4042e6:	409d      	lsls	r5, r3
  4042e8:	4317      	orrs	r7, r2
  4042ea:	409c      	lsls	r4, r3
  4042ec:	0c29      	lsrs	r1, r5, #16
  4042ee:	0c22      	lsrs	r2, r4, #16
  4042f0:	fbb7 fef1 	udiv	lr, r7, r1
  4042f4:	b2a8      	uxth	r0, r5
  4042f6:	fb01 771e 	mls	r7, r1, lr, r7
  4042fa:	ea42 4707 	orr.w	r7, r2, r7, lsl #16
  4042fe:	fb00 f30e 	mul.w	r3, r0, lr
  404302:	42bb      	cmp	r3, r7
  404304:	d90a      	bls.n	40431c <__divdi3+0x6c>
  404306:	197f      	adds	r7, r7, r5
  404308:	f10e 32ff 	add.w	r2, lr, #4294967295
  40430c:	f080 8105 	bcs.w	40451a <__divdi3+0x26a>
  404310:	42bb      	cmp	r3, r7
  404312:	f240 8102 	bls.w	40451a <__divdi3+0x26a>
  404316:	f1ae 0e02 	sub.w	lr, lr, #2
  40431a:	442f      	add	r7, r5
  40431c:	1aff      	subs	r7, r7, r3
  40431e:	b2a4      	uxth	r4, r4
  404320:	fbb7 f3f1 	udiv	r3, r7, r1
  404324:	fb01 7713 	mls	r7, r1, r3, r7
  404328:	ea44 4707 	orr.w	r7, r4, r7, lsl #16
  40432c:	fb00 f003 	mul.w	r0, r0, r3
  404330:	42b8      	cmp	r0, r7
  404332:	d908      	bls.n	404346 <__divdi3+0x96>
  404334:	197f      	adds	r7, r7, r5
  404336:	f103 32ff 	add.w	r2, r3, #4294967295
  40433a:	f080 80f0 	bcs.w	40451e <__divdi3+0x26e>
  40433e:	42b8      	cmp	r0, r7
  404340:	f240 80ed 	bls.w	40451e <__divdi3+0x26e>
  404344:	3b02      	subs	r3, #2
  404346:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
  40434a:	2200      	movs	r2, #0
  40434c:	e003      	b.n	404356 <__divdi3+0xa6>
  40434e:	428b      	cmp	r3, r1
  404350:	d90f      	bls.n	404372 <__divdi3+0xc2>
  404352:	2200      	movs	r2, #0
  404354:	4613      	mov	r3, r2
  404356:	1c34      	adds	r4, r6, #0
  404358:	bf18      	it	ne
  40435a:	2401      	movne	r4, #1
  40435c:	4260      	negs	r0, r4
  40435e:	f04f 0500 	mov.w	r5, #0
  404362:	eb65 0145 	sbc.w	r1, r5, r5, lsl #1
  404366:	4058      	eors	r0, r3
  404368:	4051      	eors	r1, r2
  40436a:	1900      	adds	r0, r0, r4
  40436c:	4169      	adcs	r1, r5
  40436e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  404372:	fab3 f283 	clz	r2, r3
  404376:	2a00      	cmp	r2, #0
  404378:	f040 8086 	bne.w	404488 <__divdi3+0x1d8>
  40437c:	428b      	cmp	r3, r1
  40437e:	d302      	bcc.n	404386 <__divdi3+0xd6>
  404380:	4584      	cmp	ip, r0
  404382:	f200 80db 	bhi.w	40453c <__divdi3+0x28c>
  404386:	2301      	movs	r3, #1
  404388:	e7e5      	b.n	404356 <__divdi3+0xa6>
  40438a:	b912      	cbnz	r2, 404392 <__divdi3+0xe2>
  40438c:	2301      	movs	r3, #1
  40438e:	fbb3 f5f2 	udiv	r5, r3, r2
  404392:	fab5 f085 	clz	r0, r5
  404396:	2800      	cmp	r0, #0
  404398:	d13b      	bne.n	404412 <__divdi3+0x162>
  40439a:	1b78      	subs	r0, r7, r5
  40439c:	ea4f 4e15 	mov.w	lr, r5, lsr #16
  4043a0:	fa1f fc85 	uxth.w	ip, r5
  4043a4:	2201      	movs	r2, #1
  4043a6:	fbb0 f8fe 	udiv	r8, r0, lr
  4043aa:	0c21      	lsrs	r1, r4, #16
  4043ac:	fb0e 0718 	mls	r7, lr, r8, r0
  4043b0:	ea41 4707 	orr.w	r7, r1, r7, lsl #16
  4043b4:	fb0c f308 	mul.w	r3, ip, r8
  4043b8:	42bb      	cmp	r3, r7
  4043ba:	d907      	bls.n	4043cc <__divdi3+0x11c>
  4043bc:	197f      	adds	r7, r7, r5
  4043be:	f108 31ff 	add.w	r1, r8, #4294967295
  4043c2:	d202      	bcs.n	4043ca <__divdi3+0x11a>
  4043c4:	42bb      	cmp	r3, r7
  4043c6:	f200 80bd 	bhi.w	404544 <__divdi3+0x294>
  4043ca:	4688      	mov	r8, r1
  4043cc:	1aff      	subs	r7, r7, r3
  4043ce:	b2a4      	uxth	r4, r4
  4043d0:	fbb7 f3fe 	udiv	r3, r7, lr
  4043d4:	fb0e 7713 	mls	r7, lr, r3, r7
  4043d8:	ea44 4707 	orr.w	r7, r4, r7, lsl #16
  4043dc:	fb0c fc03 	mul.w	ip, ip, r3
  4043e0:	45bc      	cmp	ip, r7
  4043e2:	d907      	bls.n	4043f4 <__divdi3+0x144>
  4043e4:	197f      	adds	r7, r7, r5
  4043e6:	f103 31ff 	add.w	r1, r3, #4294967295
  4043ea:	d202      	bcs.n	4043f2 <__divdi3+0x142>
  4043ec:	45bc      	cmp	ip, r7
  4043ee:	f200 80a7 	bhi.w	404540 <__divdi3+0x290>
  4043f2:	460b      	mov	r3, r1
  4043f4:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
  4043f8:	e7ad      	b.n	404356 <__divdi3+0xa6>
  4043fa:	4252      	negs	r2, r2
  4043fc:	ea6f 0606 	mvn.w	r6, r6
  404400:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  404404:	e75d      	b.n	4042c2 <__divdi3+0x12>
  404406:	4240      	negs	r0, r0
  404408:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  40440c:	f04f 36ff 	mov.w	r6, #4294967295
  404410:	e754      	b.n	4042bc <__divdi3+0xc>
  404412:	f1c0 0220 	rsb	r2, r0, #32
  404416:	fa24 f102 	lsr.w	r1, r4, r2
  40441a:	fa07 f300 	lsl.w	r3, r7, r0
  40441e:	4085      	lsls	r5, r0
  404420:	ea4f 4e15 	mov.w	lr, r5, lsr #16
  404424:	40d7      	lsrs	r7, r2
  404426:	4319      	orrs	r1, r3
  404428:	fbb7 f2fe 	udiv	r2, r7, lr
  40442c:	0c0b      	lsrs	r3, r1, #16
  40442e:	fb0e 7712 	mls	r7, lr, r2, r7
  404432:	fa1f fc85 	uxth.w	ip, r5
  404436:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
  40443a:	fb0c f702 	mul.w	r7, ip, r2
  40443e:	429f      	cmp	r7, r3
  404440:	fa04 f400 	lsl.w	r4, r4, r0
  404444:	d907      	bls.n	404456 <__divdi3+0x1a6>
  404446:	195b      	adds	r3, r3, r5
  404448:	f102 30ff 	add.w	r0, r2, #4294967295
  40444c:	d274      	bcs.n	404538 <__divdi3+0x288>
  40444e:	429f      	cmp	r7, r3
  404450:	d972      	bls.n	404538 <__divdi3+0x288>
  404452:	3a02      	subs	r2, #2
  404454:	442b      	add	r3, r5
  404456:	1bdf      	subs	r7, r3, r7
  404458:	b289      	uxth	r1, r1
  40445a:	fbb7 f8fe 	udiv	r8, r7, lr
  40445e:	fb0e 7318 	mls	r3, lr, r8, r7
  404462:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
  404466:	fb0c f708 	mul.w	r7, ip, r8
  40446a:	429f      	cmp	r7, r3
  40446c:	d908      	bls.n	404480 <__divdi3+0x1d0>
  40446e:	195b      	adds	r3, r3, r5
  404470:	f108 31ff 	add.w	r1, r8, #4294967295
  404474:	d25c      	bcs.n	404530 <__divdi3+0x280>
  404476:	429f      	cmp	r7, r3
  404478:	d95a      	bls.n	404530 <__divdi3+0x280>
  40447a:	f1a8 0802 	sub.w	r8, r8, #2
  40447e:	442b      	add	r3, r5
  404480:	1bd8      	subs	r0, r3, r7
  404482:	ea48 4202 	orr.w	r2, r8, r2, lsl #16
  404486:	e78e      	b.n	4043a6 <__divdi3+0xf6>
  404488:	f1c2 0320 	rsb	r3, r2, #32
  40448c:	fa2c f103 	lsr.w	r1, ip, r3
  404490:	fa0e fe02 	lsl.w	lr, lr, r2
  404494:	fa20 f703 	lsr.w	r7, r0, r3
  404498:	ea41 0e0e 	orr.w	lr, r1, lr
  40449c:	fa08 f002 	lsl.w	r0, r8, r2
  4044a0:	fa28 f103 	lsr.w	r1, r8, r3
  4044a4:	ea4f 451e 	mov.w	r5, lr, lsr #16
  4044a8:	4338      	orrs	r0, r7
  4044aa:	fbb1 f8f5 	udiv	r8, r1, r5
  4044ae:	0c03      	lsrs	r3, r0, #16
  4044b0:	fb05 1118 	mls	r1, r5, r8, r1
  4044b4:	fa1f f78e 	uxth.w	r7, lr
  4044b8:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
  4044bc:	fb07 f308 	mul.w	r3, r7, r8
  4044c0:	428b      	cmp	r3, r1
  4044c2:	fa0c fc02 	lsl.w	ip, ip, r2
  4044c6:	d909      	bls.n	4044dc <__divdi3+0x22c>
  4044c8:	eb11 010e 	adds.w	r1, r1, lr
  4044cc:	f108 39ff 	add.w	r9, r8, #4294967295
  4044d0:	d230      	bcs.n	404534 <__divdi3+0x284>
  4044d2:	428b      	cmp	r3, r1
  4044d4:	d92e      	bls.n	404534 <__divdi3+0x284>
  4044d6:	f1a8 0802 	sub.w	r8, r8, #2
  4044da:	4471      	add	r1, lr
  4044dc:	1ac9      	subs	r1, r1, r3
  4044de:	b280      	uxth	r0, r0
  4044e0:	fbb1 f3f5 	udiv	r3, r1, r5
  4044e4:	fb05 1113 	mls	r1, r5, r3, r1
  4044e8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  4044ec:	fb07 f703 	mul.w	r7, r7, r3
  4044f0:	428f      	cmp	r7, r1
  4044f2:	d908      	bls.n	404506 <__divdi3+0x256>
  4044f4:	eb11 010e 	adds.w	r1, r1, lr
  4044f8:	f103 30ff 	add.w	r0, r3, #4294967295
  4044fc:	d216      	bcs.n	40452c <__divdi3+0x27c>
  4044fe:	428f      	cmp	r7, r1
  404500:	d914      	bls.n	40452c <__divdi3+0x27c>
  404502:	3b02      	subs	r3, #2
  404504:	4471      	add	r1, lr
  404506:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
  40450a:	1bc9      	subs	r1, r1, r7
  40450c:	fba3 890c 	umull	r8, r9, r3, ip
  404510:	4549      	cmp	r1, r9
  404512:	d309      	bcc.n	404528 <__divdi3+0x278>
  404514:	d005      	beq.n	404522 <__divdi3+0x272>
  404516:	2200      	movs	r2, #0
  404518:	e71d      	b.n	404356 <__divdi3+0xa6>
  40451a:	4696      	mov	lr, r2
  40451c:	e6fe      	b.n	40431c <__divdi3+0x6c>
  40451e:	4613      	mov	r3, r2
  404520:	e711      	b.n	404346 <__divdi3+0x96>
  404522:	4094      	lsls	r4, r2
  404524:	4544      	cmp	r4, r8
  404526:	d2f6      	bcs.n	404516 <__divdi3+0x266>
  404528:	3b01      	subs	r3, #1
  40452a:	e7f4      	b.n	404516 <__divdi3+0x266>
  40452c:	4603      	mov	r3, r0
  40452e:	e7ea      	b.n	404506 <__divdi3+0x256>
  404530:	4688      	mov	r8, r1
  404532:	e7a5      	b.n	404480 <__divdi3+0x1d0>
  404534:	46c8      	mov	r8, r9
  404536:	e7d1      	b.n	4044dc <__divdi3+0x22c>
  404538:	4602      	mov	r2, r0
  40453a:	e78c      	b.n	404456 <__divdi3+0x1a6>
  40453c:	4613      	mov	r3, r2
  40453e:	e70a      	b.n	404356 <__divdi3+0xa6>
  404540:	3b02      	subs	r3, #2
  404542:	e757      	b.n	4043f4 <__divdi3+0x144>
  404544:	f1a8 0802 	sub.w	r8, r8, #2
  404548:	442f      	add	r7, r5
  40454a:	e73f      	b.n	4043cc <__divdi3+0x11c>

0040454c <__udivdi3>:
  40454c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404550:	2b00      	cmp	r3, #0
  404552:	d144      	bne.n	4045de <__udivdi3+0x92>
  404554:	428a      	cmp	r2, r1
  404556:	4615      	mov	r5, r2
  404558:	4604      	mov	r4, r0
  40455a:	d94f      	bls.n	4045fc <__udivdi3+0xb0>
  40455c:	fab2 f782 	clz	r7, r2
  404560:	460e      	mov	r6, r1
  404562:	b14f      	cbz	r7, 404578 <__udivdi3+0x2c>
  404564:	f1c7 0320 	rsb	r3, r7, #32
  404568:	40b9      	lsls	r1, r7
  40456a:	fa20 f603 	lsr.w	r6, r0, r3
  40456e:	fa02 f507 	lsl.w	r5, r2, r7
  404572:	430e      	orrs	r6, r1
  404574:	fa00 f407 	lsl.w	r4, r0, r7
  404578:	ea4f 4e15 	mov.w	lr, r5, lsr #16
  40457c:	0c23      	lsrs	r3, r4, #16
  40457e:	fbb6 f0fe 	udiv	r0, r6, lr
  404582:	b2af      	uxth	r7, r5
  404584:	fb0e 6110 	mls	r1, lr, r0, r6
  404588:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  40458c:	fb07 f100 	mul.w	r1, r7, r0
  404590:	4299      	cmp	r1, r3
  404592:	d909      	bls.n	4045a8 <__udivdi3+0x5c>
  404594:	195b      	adds	r3, r3, r5
  404596:	f100 32ff 	add.w	r2, r0, #4294967295
  40459a:	f080 80ec 	bcs.w	404776 <__udivdi3+0x22a>
  40459e:	4299      	cmp	r1, r3
  4045a0:	f240 80e9 	bls.w	404776 <__udivdi3+0x22a>
  4045a4:	3802      	subs	r0, #2
  4045a6:	442b      	add	r3, r5
  4045a8:	1a5a      	subs	r2, r3, r1
  4045aa:	b2a4      	uxth	r4, r4
  4045ac:	fbb2 f3fe 	udiv	r3, r2, lr
  4045b0:	fb0e 2213 	mls	r2, lr, r3, r2
  4045b4:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  4045b8:	fb07 f703 	mul.w	r7, r7, r3
  4045bc:	4297      	cmp	r7, r2
  4045be:	d908      	bls.n	4045d2 <__udivdi3+0x86>
  4045c0:	1952      	adds	r2, r2, r5
  4045c2:	f103 31ff 	add.w	r1, r3, #4294967295
  4045c6:	f080 80d8 	bcs.w	40477a <__udivdi3+0x22e>
  4045ca:	4297      	cmp	r7, r2
  4045cc:	f240 80d5 	bls.w	40477a <__udivdi3+0x22e>
  4045d0:	3b02      	subs	r3, #2
  4045d2:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  4045d6:	2600      	movs	r6, #0
  4045d8:	4631      	mov	r1, r6
  4045da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4045de:	428b      	cmp	r3, r1
  4045e0:	d847      	bhi.n	404672 <__udivdi3+0x126>
  4045e2:	fab3 f683 	clz	r6, r3
  4045e6:	2e00      	cmp	r6, #0
  4045e8:	d148      	bne.n	40467c <__udivdi3+0x130>
  4045ea:	428b      	cmp	r3, r1
  4045ec:	d302      	bcc.n	4045f4 <__udivdi3+0xa8>
  4045ee:	4282      	cmp	r2, r0
  4045f0:	f200 80cd 	bhi.w	40478e <__udivdi3+0x242>
  4045f4:	2001      	movs	r0, #1
  4045f6:	4631      	mov	r1, r6
  4045f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4045fc:	b912      	cbnz	r2, 404604 <__udivdi3+0xb8>
  4045fe:	2501      	movs	r5, #1
  404600:	fbb5 f5f2 	udiv	r5, r5, r2
  404604:	fab5 f885 	clz	r8, r5
  404608:	f1b8 0f00 	cmp.w	r8, #0
  40460c:	d177      	bne.n	4046fe <__udivdi3+0x1b2>
  40460e:	1b4a      	subs	r2, r1, r5
  404610:	ea4f 4e15 	mov.w	lr, r5, lsr #16
  404614:	b2af      	uxth	r7, r5
  404616:	2601      	movs	r6, #1
  404618:	fbb2 f0fe 	udiv	r0, r2, lr
  40461c:	0c23      	lsrs	r3, r4, #16
  40461e:	fb0e 2110 	mls	r1, lr, r0, r2
  404622:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
  404626:	fb07 f300 	mul.w	r3, r7, r0
  40462a:	428b      	cmp	r3, r1
  40462c:	d907      	bls.n	40463e <__udivdi3+0xf2>
  40462e:	1949      	adds	r1, r1, r5
  404630:	f100 32ff 	add.w	r2, r0, #4294967295
  404634:	d202      	bcs.n	40463c <__udivdi3+0xf0>
  404636:	428b      	cmp	r3, r1
  404638:	f200 80ba 	bhi.w	4047b0 <__udivdi3+0x264>
  40463c:	4610      	mov	r0, r2
  40463e:	1ac9      	subs	r1, r1, r3
  404640:	b2a4      	uxth	r4, r4
  404642:	fbb1 f3fe 	udiv	r3, r1, lr
  404646:	fb0e 1113 	mls	r1, lr, r3, r1
  40464a:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
  40464e:	fb07 f703 	mul.w	r7, r7, r3
  404652:	42a7      	cmp	r7, r4
  404654:	d908      	bls.n	404668 <__udivdi3+0x11c>
  404656:	1964      	adds	r4, r4, r5
  404658:	f103 32ff 	add.w	r2, r3, #4294967295
  40465c:	f080 808f 	bcs.w	40477e <__udivdi3+0x232>
  404660:	42a7      	cmp	r7, r4
  404662:	f240 808c 	bls.w	40477e <__udivdi3+0x232>
  404666:	3b02      	subs	r3, #2
  404668:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  40466c:	4631      	mov	r1, r6
  40466e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404672:	2600      	movs	r6, #0
  404674:	4630      	mov	r0, r6
  404676:	4631      	mov	r1, r6
  404678:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40467c:	f1c6 0420 	rsb	r4, r6, #32
  404680:	fa22 f504 	lsr.w	r5, r2, r4
  404684:	40b3      	lsls	r3, r6
  404686:	432b      	orrs	r3, r5
  404688:	fa20 fc04 	lsr.w	ip, r0, r4
  40468c:	fa01 f706 	lsl.w	r7, r1, r6
  404690:	fa21 f504 	lsr.w	r5, r1, r4
  404694:	ea4f 4e13 	mov.w	lr, r3, lsr #16
  404698:	ea4c 0707 	orr.w	r7, ip, r7
  40469c:	fbb5 f8fe 	udiv	r8, r5, lr
  4046a0:	0c39      	lsrs	r1, r7, #16
  4046a2:	fb0e 5518 	mls	r5, lr, r8, r5
  4046a6:	fa1f fc83 	uxth.w	ip, r3
  4046aa:	ea41 4505 	orr.w	r5, r1, r5, lsl #16
  4046ae:	fb0c f108 	mul.w	r1, ip, r8
  4046b2:	42a9      	cmp	r1, r5
  4046b4:	fa02 f206 	lsl.w	r2, r2, r6
  4046b8:	d904      	bls.n	4046c4 <__udivdi3+0x178>
  4046ba:	18ed      	adds	r5, r5, r3
  4046bc:	f108 34ff 	add.w	r4, r8, #4294967295
  4046c0:	d367      	bcc.n	404792 <__udivdi3+0x246>
  4046c2:	46a0      	mov	r8, r4
  4046c4:	1a6d      	subs	r5, r5, r1
  4046c6:	b2bf      	uxth	r7, r7
  4046c8:	fbb5 f4fe 	udiv	r4, r5, lr
  4046cc:	fb0e 5514 	mls	r5, lr, r4, r5
  4046d0:	ea47 4105 	orr.w	r1, r7, r5, lsl #16
  4046d4:	fb0c fc04 	mul.w	ip, ip, r4
  4046d8:	458c      	cmp	ip, r1
  4046da:	d904      	bls.n	4046e6 <__udivdi3+0x19a>
  4046dc:	18c9      	adds	r1, r1, r3
  4046de:	f104 35ff 	add.w	r5, r4, #4294967295
  4046e2:	d35c      	bcc.n	40479e <__udivdi3+0x252>
  4046e4:	462c      	mov	r4, r5
  4046e6:	ea44 4408 	orr.w	r4, r4, r8, lsl #16
  4046ea:	ebcc 0101 	rsb	r1, ip, r1
  4046ee:	fba4 2302 	umull	r2, r3, r4, r2
  4046f2:	4299      	cmp	r1, r3
  4046f4:	d348      	bcc.n	404788 <__udivdi3+0x23c>
  4046f6:	d044      	beq.n	404782 <__udivdi3+0x236>
  4046f8:	4620      	mov	r0, r4
  4046fa:	2600      	movs	r6, #0
  4046fc:	e76c      	b.n	4045d8 <__udivdi3+0x8c>
  4046fe:	f1c8 0420 	rsb	r4, r8, #32
  404702:	fa01 f308 	lsl.w	r3, r1, r8
  404706:	fa05 f508 	lsl.w	r5, r5, r8
  40470a:	fa20 f704 	lsr.w	r7, r0, r4
  40470e:	40e1      	lsrs	r1, r4
  404710:	ea4f 4e15 	mov.w	lr, r5, lsr #16
  404714:	431f      	orrs	r7, r3
  404716:	fbb1 f6fe 	udiv	r6, r1, lr
  40471a:	0c3a      	lsrs	r2, r7, #16
  40471c:	fb0e 1116 	mls	r1, lr, r6, r1
  404720:	fa1f fc85 	uxth.w	ip, r5
  404724:	ea42 4301 	orr.w	r3, r2, r1, lsl #16
  404728:	fb0c f206 	mul.w	r2, ip, r6
  40472c:	429a      	cmp	r2, r3
  40472e:	fa00 f408 	lsl.w	r4, r0, r8
  404732:	d907      	bls.n	404744 <__udivdi3+0x1f8>
  404734:	195b      	adds	r3, r3, r5
  404736:	f106 31ff 	add.w	r1, r6, #4294967295
  40473a:	d237      	bcs.n	4047ac <__udivdi3+0x260>
  40473c:	429a      	cmp	r2, r3
  40473e:	d935      	bls.n	4047ac <__udivdi3+0x260>
  404740:	3e02      	subs	r6, #2
  404742:	442b      	add	r3, r5
  404744:	1a9b      	subs	r3, r3, r2
  404746:	b2bf      	uxth	r7, r7
  404748:	fbb3 f0fe 	udiv	r0, r3, lr
  40474c:	fb0e 3310 	mls	r3, lr, r0, r3
  404750:	ea47 4303 	orr.w	r3, r7, r3, lsl #16
  404754:	fb0c f100 	mul.w	r1, ip, r0
  404758:	4299      	cmp	r1, r3
  40475a:	d907      	bls.n	40476c <__udivdi3+0x220>
  40475c:	195b      	adds	r3, r3, r5
  40475e:	f100 32ff 	add.w	r2, r0, #4294967295
  404762:	d221      	bcs.n	4047a8 <__udivdi3+0x25c>
  404764:	4299      	cmp	r1, r3
  404766:	d91f      	bls.n	4047a8 <__udivdi3+0x25c>
  404768:	3802      	subs	r0, #2
  40476a:	442b      	add	r3, r5
  40476c:	1a5a      	subs	r2, r3, r1
  40476e:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
  404772:	4667      	mov	r7, ip
  404774:	e750      	b.n	404618 <__udivdi3+0xcc>
  404776:	4610      	mov	r0, r2
  404778:	e716      	b.n	4045a8 <__udivdi3+0x5c>
  40477a:	460b      	mov	r3, r1
  40477c:	e729      	b.n	4045d2 <__udivdi3+0x86>
  40477e:	4613      	mov	r3, r2
  404780:	e772      	b.n	404668 <__udivdi3+0x11c>
  404782:	40b0      	lsls	r0, r6
  404784:	4290      	cmp	r0, r2
  404786:	d2b7      	bcs.n	4046f8 <__udivdi3+0x1ac>
  404788:	1e60      	subs	r0, r4, #1
  40478a:	2600      	movs	r6, #0
  40478c:	e724      	b.n	4045d8 <__udivdi3+0x8c>
  40478e:	4630      	mov	r0, r6
  404790:	e722      	b.n	4045d8 <__udivdi3+0x8c>
  404792:	42a9      	cmp	r1, r5
  404794:	d995      	bls.n	4046c2 <__udivdi3+0x176>
  404796:	f1a8 0802 	sub.w	r8, r8, #2
  40479a:	441d      	add	r5, r3
  40479c:	e792      	b.n	4046c4 <__udivdi3+0x178>
  40479e:	458c      	cmp	ip, r1
  4047a0:	d9a0      	bls.n	4046e4 <__udivdi3+0x198>
  4047a2:	3c02      	subs	r4, #2
  4047a4:	4419      	add	r1, r3
  4047a6:	e79e      	b.n	4046e6 <__udivdi3+0x19a>
  4047a8:	4610      	mov	r0, r2
  4047aa:	e7df      	b.n	40476c <__udivdi3+0x220>
  4047ac:	460e      	mov	r6, r1
  4047ae:	e7c9      	b.n	404744 <__udivdi3+0x1f8>
  4047b0:	3802      	subs	r0, #2
  4047b2:	4429      	add	r1, r5
  4047b4:	e743      	b.n	40463e <__udivdi3+0xf2>
  4047b6:	bf00      	nop
  4047b8:	2d2d2d20 	.word	0x2d2d2d20
  4047bc:	2d2d2d2d 	.word	0x2d2d2d2d
  4047c0:	2d2d2d2d 	.word	0x2d2d2d2d
  4047c4:	2d2d2d2d 	.word	0x2d2d2d2d
  4047c8:	2d2d2d2d 	.word	0x2d2d2d2d
  4047cc:	2d2d2d2d 	.word	0x2d2d2d2d
  4047d0:	2d2d2d2d 	.word	0x2d2d2d2d
  4047d4:	0d0a202d 	.word	0x0d0a202d
  4047d8:	6d654220 	.word	0x6d654220
  4047dc:	6e697620 	.word	0x6e697620
  4047e0:	43206f64 	.word	0x43206f64
  4047e4:	6973726f 	.word	0x6973726f
  4047e8:	09212020 	.word	0x09212020
  4047ec:	200d0a09 	.word	0x200d0a09
  4047f0:	2d2d2d2d 	.word	0x2d2d2d2d
  4047f4:	2d2d2d2d 	.word	0x2d2d2d2d
  4047f8:	2d2d2d2d 	.word	0x2d2d2d2d
  4047fc:	2d2d2d2d 	.word	0x2d2d2d2d
  404800:	2d2d2d2d 	.word	0x2d2d2d2d
  404804:	2d2d2d2d 	.word	0x2d2d2d2d
  404808:	2d2d2d2d 	.word	0x2d2d2d2d
  40480c:	000d0a20 	.word	0x000d0a20
  404810:	3a203120 	.word	0x3a203120
  404814:	69786520 	.word	0x69786520
  404818:	6e206562 	.word	0x6e206562
  40481c:	6d61766f 	.word	0x6d61766f
  404820:	65746e65 	.word	0x65746e65
  404824:	73736520 	.word	0x73736520
  404828:	656d2065 	.word	0x656d2065
  40482c:	0a20756e 	.word	0x0a20756e
  404830:	2032200d 	.word	0x2032200d
  404834:	7441203a 	.word	0x7441203a
  404838:	20617669 	.word	0x20617669
  40483c:	454c206f 	.word	0x454c206f
  404840:	0a202044 	.word	0x0a202044
  404844:	2033200d 	.word	0x2033200d
  404848:	6544203a 	.word	0x6544203a
  40484c:	67696c73 	.word	0x67696c73
  404850:	206f2061 	.word	0x206f2061
  404854:	2044454c 	.word	0x2044454c
  404858:	00200d0a 	.word	0x00200d0a
  40485c:	2064654c 	.word	0x2064654c
  404860:	45554c42 	.word	0x45554c42
  404864:	204e4f20 	.word	0x204e4f20
  404868:	00000d0a 	.word	0x00000d0a
  40486c:	2064654c 	.word	0x2064654c
  404870:	45554c42 	.word	0x45554c42
  404874:	46464f20 	.word	0x46464f20
  404878:	000d0a20 	.word	0x000d0a20
  40487c:	2064654c 	.word	0x2064654c
  404880:	45455247 	.word	0x45455247
  404884:	4e4f204e 	.word	0x4e4f204e
  404888:	000d0a20 	.word	0x000d0a20
  40488c:	2064654c 	.word	0x2064654c
  404890:	45455247 	.word	0x45455247
  404894:	464f204e 	.word	0x464f204e
  404898:	0d0a2046 	.word	0x0d0a2046
  40489c:	00000000 	.word	0x00000000
  4048a0:	2064654c 	.word	0x2064654c
  4048a4:	20444552 	.word	0x20444552
  4048a8:	0a204e4f 	.word	0x0a204e4f
  4048ac:	0000000d 	.word	0x0000000d
  4048b0:	2064654c 	.word	0x2064654c
  4048b4:	20444552 	.word	0x20444552
  4048b8:	2046464f 	.word	0x2046464f
  4048bc:	00000d0a 	.word	0x00000d0a
  4048c0:	656d7561 	.word	0x656d7561
  4048c4:	6e61746e 	.word	0x6e61746e
  4048c8:	0a206f64 	.word	0x0a206f64
  4048cc:	0000000d 	.word	0x0000000d
  4048d0:	696d6964 	.word	0x696d6964
  4048d4:	6e69756e 	.word	0x6e69756e
  4048d8:	0a206f64 	.word	0x0a206f64
  4048dc:	0000000d 	.word	0x0000000d
  4048e0:	6163704f 	.word	0x6163704f
  4048e4:	616e206f 	.word	0x616e206f
  4048e8:	6564206f 	.word	0x6564206f
  4048ec:	696e6966 	.word	0x696e6966
  4048f0:	203a6164 	.word	0x203a6164
  4048f4:	0a206425 	.word	0x0a206425
  4048f8:	0000000d 	.word	0x0000000d
  4048fc:	00000043 	.word	0x00000043

00404900 <_global_impure_ptr>:
  404900:	20000008 0000000a                       ... ....

00404908 <zeroes.6869>:
  404908:	30303030 30303030 30303030 30303030     0000000000000000
  404918:	33323130 37363534 42413938 46454443     0123456789ABCDEF
  404928:	00000000 33323130 37363534 62613938     ....0123456789ab
  404938:	66656463 00000000 6c756e28 0000296c     cdef....(null)..

00404948 <blanks.6868>:
  404948:	20202020 20202020 20202020 20202020                     

00404958 <_init>:
  404958:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40495a:	bf00      	nop
  40495c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40495e:	bc08      	pop	{r3}
  404960:	469e      	mov	lr, r3
  404962:	4770      	bx	lr

00404964 <__init_array_start>:
  404964:	00402839 	.word	0x00402839

00404968 <__frame_dummy_init_array_entry>:
  404968:	004000f1                                ..@.

0040496c <_fini>:
  40496c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40496e:	bf00      	nop
  404970:	bcf8      	pop	{r3, r4, r5, r6, r7}
  404972:	bc08      	pop	{r3}
  404974:	469e      	mov	lr, r3
  404976:	4770      	bx	lr

00404978 <__fini_array_start>:
  404978:	004000cd 	.word	0x004000cd
